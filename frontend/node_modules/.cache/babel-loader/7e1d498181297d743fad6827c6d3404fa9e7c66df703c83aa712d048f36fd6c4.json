{"ast":null,"code":"// Carnivore Restaurant API Integration Service\n// Using Spoonacular API for real meat recipes\n\n// Base configuration\nconst CARNIVORE_CONFIG = {\n  name: 'Carnivore Restaurant',\n  location: 'Langata Road, Nairobi',\n  phone: '+254 20 600 5923',\n  website: 'https://www.tamarind.co.ke/carnivore',\n  coordinates: {\n    lat: -1.3182,\n    lng: 36.8172\n  },\n  description: 'The ultimate meat lover\\'s paradise serving exotic meats from around the world',\n  founded: '1980',\n  branches: '1',\n  specialties: ['Exotic Meats', 'BBQ', 'Grilled Meats', 'African Cuisine'],\n  rating: 4.6,\n  deliveryTime: '30-45 min'\n};\n\n// Meat type endpoints from Spoonacular\nconst MEAT_ENDPOINTS = {\n  chicken: 'https://api.spoonacular.com/recipes/complexSearch?query=chicken&number=10&apiKey=0264506281e5448c81a956ff1f4f1d82',\n  beef: 'https://api.spoonacular.com/recipes/complexSearch?query=beef&number=10&apiKey=0264506281e5448c81a956ff1f4f1d82',\n  lamb: 'https://api.spoonacular.com/recipes/complexSearch?query=lamb&number=10&apiKey=0264506281e5448c81a956ff1f4f1d82',\n  goat: 'https://api.spoonacular.com/recipes/complexSearch?query=goat&number=10&apiKey=0264506281e5448c81a956ff1f4f1d82',\n  fish: 'https://api.spoonacular.com/recipes/complexSearch?query=fish&number=10&apiKey=0264506281e5448c81a956ff1f4f1d82',\n  pork: 'https://api.spoonacular.com/recipes/complexSearch?query=pork&number=10&apiKey=0264506281e5448c81a956ff1f4f1d82',\n  turkey: 'https://api.spoonacular.com/recipes/complexSearch?query=turkey&number=10&apiKey=0264506281e5448c81a956ff1f4f1d82'\n};\n\n// Main API functions\nexport const carnivoreAPI = {\n  // Get full menu with real-time data\n  async getFullMenu() {\n    try {\n      // Try to get real meat data first from Spoonacular\n      const realMenu = await this.getRealMeatMenu();\n      if (realMenu && realMenu.length > 0) {\n        console.log('‚úÖ Real meat data loaded successfully from Spoonacular');\n        return {\n          restaurant: CARNIVORE_CONFIG,\n          menu: realMenu,\n          meatTypes: Object.keys(MEAT_ENDPOINTS),\n          promotions: this.getPromotions(),\n          deals: this.getDeals(),\n          rewards: this.getRewards(),\n          customization: this.getCustomization(),\n          locations: this.getLocations()\n        };\n      }\n\n      // Fallback to enhanced mock data\n      console.log('‚ö†Ô∏è Using enhanced mock data as fallback');\n      return this.getEnhancedMockMenu();\n    } catch (error) {\n      console.error('Error fetching Carnivore menu:', error);\n      return this.getEnhancedMockMenu();\n    }\n  },\n  // Get real meat data from multiple Spoonacular API endpoints\n  async getRealMeatMenu() {\n    try {\n      console.log('ü•© Fetching from multiple Spoonacular Meat APIs...');\n      const transformedMenu = [];\n      let hasData = false;\n\n      // Fetch from all meat type endpoints\n      for (const [meatType, endpoint] of Object.entries(MEAT_ENDPOINTS)) {\n        try {\n          console.log(`üçñ Fetching ${meatType} from:`, endpoint);\n          const response = await fetch(endpoint);\n          console.log(`üì° ${meatType} API Response status:`, response.status);\n          if (!response.ok) {\n            console.warn(`‚ö†Ô∏è ${meatType} API request failed with status:`, response.status);\n            continue;\n          }\n          const data = await response.json();\n          console.log(`‚úÖ Successfully fetched ${meatType} data:`, data);\n\n          // Transform meat data to our format\n          if (data.results && data.results.length > 0) {\n            console.log(`ü•© Found ${data.results.length} ${meatType} dishes from Spoonacular API`);\n            hasData = true;\n\n            // Show ALL dishes from the API\n            for (let i = 0; i < data.results.length; i++) {\n              const dish = data.results[i];\n              console.log(`ü•© Processing ${meatType} dish ${i + 1}:`, dish.title);\n              transformedMenu.push({\n                id: `${meatType}-${dish.id}`,\n                name: dish.title,\n                description: `Delicious ${meatType} dish prepared with Carnivore's signature spices and grilling techniques`,\n                price: this.generateMeatPrice(meatType),\n                category: this.getMeatCategory(meatType),\n                meatType: meatType,\n                image: dish.image || '/images/food/placeholder-food.jpg',\n                calories: Math.floor(Math.random() * 500) + 300,\n                serves: '1 person',\n                preparationTime: '20-35 min',\n                isPromo: Math.random() > 0.7,\n                promoText: 'Chef\\'s Special!',\n                signature: Math.random() > 0.8,\n                size: ['Small', 'Medium', 'Large'][Math.floor(Math.random() * 3)],\n                cookingStyle: ['Grilled', 'BBQ', 'Roasted', 'Smoked'][Math.floor(Math.random() * 4)],\n                spiceLevel: ['Mild', 'Medium', 'Hot', 'Extra Hot'][Math.floor(Math.random() * 4)],\n                tags: ['Fresh', 'Premium', 'Exotic'],\n                allergens: ['Gluten', 'Dairy'],\n                origin: this.getMeatOrigin(meatType)\n              });\n            }\n          } else {\n            console.warn(`‚ö†Ô∏è No ${meatType} data found from API`);\n          }\n        } catch (error) {\n          console.error(`‚ùå Error fetching ${meatType} data:`, error);\n        }\n      }\n\n      // Add some mock sides and beverages to complete the menu\n      transformedMenu.push(...this.getMockSidesAndBeverages());\n      console.log(`‚úÖ Successfully transformed ${transformedMenu.length} menu items`);\n\n      // Only return data if we actually got some meat dishes\n      if (hasData && transformedMenu.length > 0) {\n        return transformedMenu;\n      } else {\n        console.log('‚ö†Ô∏è No meat data was successfully fetched, will use mock data');\n        return null;\n      }\n    } catch (error) {\n      console.error('‚ùå Error fetching real meat data from Spoonacular:', error);\n      console.log('üîÑ Falling back to mock data...');\n      return null;\n    }\n  },\n  // Get meat category for display\n  getMeatCategory(meatType) {\n    const categories = {\n      chicken: 'Poultry',\n      beef: 'Red Meat',\n      lamb: 'Red Meat',\n      goat: 'Red Meat',\n      fish: 'Seafood',\n      pork: 'Red Meat',\n      turkey: 'Poultry'\n    };\n    return categories[meatType] || 'Meat';\n  },\n  // Get meat origin for display\n  getMeatOrigin(meatType) {\n    const origins = {\n      chicken: 'Local Farm',\n      beef: 'Premium Ranch',\n      lamb: 'Highland Farm',\n      goat: 'Local Farm',\n      fish: 'Fresh Catch',\n      pork: 'Local Farm',\n      turkey: 'Local Farm'\n    };\n    return origins[meatType] || 'Local Source';\n  },\n  // Generate random prices for different meat types\n  generateMeatPrice(meatType) {\n    const basePrices = {\n      chicken: 800,\n      beef: 1200,\n      lamb: 1500,\n      goat: 1300,\n      fish: 1000,\n      pork: 900,\n      turkey: 1100\n    };\n    const basePrice = basePrices[meatType] || 1000;\n    const randomFactor = Math.random() * 1.5 + 0.5; // Random factor between 0.5 and 2.0\n    return `KES ${Math.round(basePrice * randomFactor)}`;\n  },\n  // Enhanced mock menu with realistic data\n  getEnhancedMockMenu() {\n    return {\n      restaurant: CARNIVORE_CONFIG,\n      categories: {\n        'Beast of a Feast': [{\n          id: 'bf-001',\n          name: 'Nyama Choma Platter',\n          price: 'KES 3,500',\n          originalPrice: 'KES 4,200',\n          description: 'Mixed grilled meats: beef, lamb, chicken, pork with unlimited sides',\n          category: 'Beast of a Feast',\n          image: '/images/food/nyama-choma.jpg',\n          isPromo: true,\n          promoText: 'Most Popular! -20% OFF',\n          calories: '1200-1500',\n          serves: '2-3 people',\n          allergens: ['None'],\n          preparationTime: '15-20 min',\n          spiceLevel: 'Medium',\n          tags: ['Popular', 'Best Seller', 'Shareable']\n        }, {\n          id: 'bf-002',\n          name: 'Carnivore Special',\n          price: 'KES 4,200',\n          description: 'Premium selection: ostrich, crocodile, beef, lamb with unlimited sides',\n          category: 'Beast of a Feast',\n          image: '/images/food/carnivore-special.jpg',\n          isPromo: true,\n          promoText: 'Chef\\'s Choice',\n          calories: '1500-2000',\n          serves: '3-4 people',\n          allergens: ['None'],\n          preparationTime: '20-25 min',\n          spiceLevel: 'Medium',\n          tags: ['Premium', 'Exotic', 'Chef Special']\n        }],\n        'Grilled Meats': [{\n          id: 'gm-001',\n          name: 'Beef Ribs',\n          price: 'KES 2,800',\n          description: 'Slow-cooked beef ribs with BBQ sauce',\n          category: 'Grilled Meats',\n          image: '/images/food/beef-ribs.jpg',\n          calories: '800',\n          serves: '1 person',\n          allergens: ['None'],\n          preparationTime: '10-15 min',\n          spiceLevel: 'Mild',\n          tags: ['BBQ', 'Slow Cooked', 'Tender']\n        }, {\n          id: 'gm-002',\n          name: 'Lamb Chops',\n          price: 'KES 2,500',\n          description: 'Grilled lamb chops with rosemary',\n          category: 'Grilled Meats',\n          image: '/images/food/lamb-chops.jpg',\n          calories: '650',\n          serves: '1 person',\n          allergens: ['None'],\n          preparationTime: '12-18 min',\n          spiceLevel: 'Mild',\n          tags: ['Herb Crusted', 'Premium', 'Tender']\n        }],\n        'Game Meats': [{\n          id: 'gm-003',\n          name: 'Ostrich Fillet',\n          price: 'KES 3,200',\n          description: 'Lean ostrich meat grilled to perfection',\n          category: 'Game Meats',\n          image: '/images/food/ostrich-fillet.jpg',\n          calories: '400',\n          serves: '1 person',\n          allergens: ['None'],\n          preparationTime: '8-12 min',\n          spiceLevel: 'Mild',\n          tags: ['Exotic', 'Lean', 'Healthy']\n        }]\n      },\n      promotions: [{\n        id: 'promo-001',\n        title: 'Beast of a Feast Special',\n        description: 'Get 20% off on all Beast of a Feast platters',\n        discount: '20%',\n        validUntil: '2024-12-31',\n        code: 'BEAST20'\n      }, {\n        id: 'promo-002',\n        title: 'Weekday Lunch Special',\n        description: '50% off on selected grilled meats (Mon-Fri, 12-3 PM)',\n        discount: '50%',\n        validUntil: '2024-12-31',\n        code: 'LUNCH50'\n      }],\n      deliveryInfo: {\n        available: true,\n        services: ['Jumia Food', 'Glovo', 'Uber Eats'],\n        deliveryTime: '30-45 minutes',\n        deliveryFee: 'KES 200',\n        minimumOrder: 'KES 1,500'\n      }\n    };\n  },\n  // Helper functions\n  findCarnivoreId(searchData) {\n    var _searchData$restauran;\n    // Logic to find Carnivore's ID in search results\n    const carnivore = (_searchData$restauran = searchData.restaurants) === null || _searchData$restauran === void 0 ? void 0 : _searchData$restauran.find(r => r.name.toLowerCase().includes('carnivore'));\n    return carnivore === null || carnivore === void 0 ? void 0 : carnivore.id;\n  },\n  // Get restaurant information\n  getRestaurantInfo() {\n    return CARNIVORE_CONFIG;\n  },\n  // Get current promotions\n  async getPromotions() {\n    // Return mock promotions directly since we're using Spoonacular for main menu\n    return ['All-you-can-eat meat buffet every Friday', 'Student discount: 20% off with valid ID', 'Happy Hour: 2-for-1 on drinks (5-7 PM)', 'Family package: 4 people for the price of 3'];\n  },\n  // Check delivery availability\n  async checkDeliveryAvailability() {\n    // Return mock delivery info directly\n    return {\n      available: true,\n      deliveryTime: '30-45 min',\n      minimumOrder: 'KES 500',\n      deliveryFee: 'KES 100',\n      freeDeliveryThreshold: 'KES 2000'\n    };\n  },\n  // Mock functions for new features (if not implemented in Spoonacular)\n  getDeals() {\n    return [{\n      id: 'deal-001',\n      title: 'Daily Special',\n      description: 'Get a free side with any main dish',\n      validUntil: '2024-12-31'\n    }, {\n      id: 'deal-002',\n      title: 'Lunch Combo',\n      description: 'Half price on all lunch specials',\n      validUntil: '2024-12-31'\n    }];\n  },\n  getRewards() {\n    return [{\n      id: 'reward-001',\n      title: 'Loyalty Card',\n      description: 'Earn points for every meal',\n      validUntil: '2024-12-31'\n    }, {\n      id: 'reward-002',\n      title: 'Free Dessert',\n      description: 'Get a free dessert with your 10th meal',\n      validUntil: '2024-12-31'\n    }];\n  },\n  getCustomization() {\n    return {\n      meatTypes: Object.keys(MEAT_ENDPOINTS),\n      spiceLevels: ['Mild', 'Medium', 'Hot', 'Extra Hot'],\n      cookingStyles: ['Grilled', 'BBQ', 'Roasted', 'Smoked'],\n      sizes: ['Small', 'Medium', 'Large']\n    };\n  },\n  getLocations() {\n    return [{\n      id: 'loc-001',\n      name: 'Main Branch',\n      address: 'Langata Road, Nairobi',\n      phone: '+254 20 600 5923'\n    }, {\n      id: 'loc-002',\n      name: 'Westlands Branch',\n      address: 'Westlands, Nairobi',\n      phone: '+254 20 600 5924'\n    }];\n  },\n  getMockSidesAndBeverages() {\n    const mockSides = [{\n      id: 'side-001',\n      name: 'Ugali',\n      price: 'KES 200',\n      description: 'Traditional Kenyan maize meal',\n      category: 'Sides',\n      image: '/images/food/ugali.jpg',\n      isPromo: false,\n      calories: '150',\n      serves: '1 person',\n      allergens: ['Gluten'],\n      preparationTime: '5 min',\n      spiceLevel: 'None',\n      tags: ['Traditional', 'Local'],\n      vegetarian: true,\n      signature: false\n    }, {\n      id: 'side-002',\n      name: 'Sukuma Wiki',\n      price: 'KES 150',\n      description: 'Collard greens with tomatoes and onions',\n      category: 'Sides',\n      image: '/images/food/sukuma-wiki.jpg',\n      isPromo: false,\n      calories: '80',\n      serves: '1 person',\n      allergens: ['None'],\n      preparationTime: '8 min',\n      spiceLevel: 'Mild',\n      tags: ['Vegetables', 'Healthy'],\n      vegetarian: true,\n      signature: false\n    }];\n    const mockBeverages = [{\n      id: 'bev-001',\n      name: 'Tusker Beer',\n      price: 'KES 300',\n      description: 'Local Kenyan beer',\n      category: 'Beverages',\n      image: '/images/food/tusker-beer.jpg',\n      isPromo: false,\n      calories: '150',\n      serves: '1 person',\n      allergens: ['Gluten'],\n      preparationTime: '2 min',\n      spiceLevel: 'None',\n      tags: ['Local', 'Beer'],\n      vegetarian: true,\n      signature: false\n    }, {\n      id: 'bev-002',\n      name: 'Fresh Fruit Juice',\n      price: 'KES 250',\n      description: 'Seasonal fruit juice',\n      category: 'Beverages',\n      image: '/images/food/fruit-juice.jpg',\n      isPromo: false,\n      calories: '120',\n      serves: '1 person',\n      allergens: ['None'],\n      preparationTime: '3 min',\n      spiceLevel: 'None',\n      tags: ['Fresh', 'Healthy'],\n      vegetarian: true,\n      signature: false\n    }];\n    return [...mockSides, ...mockBeverages];\n  }\n};\nexport default carnivoreAPI;","map":{"version":3,"names":["CARNIVORE_CONFIG","name","location","phone","website","coordinates","lat","lng","description","founded","branches","specialties","rating","deliveryTime","MEAT_ENDPOINTS","chicken","beef","lamb","goat","fish","pork","turkey","carnivoreAPI","getFullMenu","realMenu","getRealMeatMenu","length","console","log","restaurant","menu","meatTypes","Object","keys","promotions","getPromotions","deals","getDeals","rewards","getRewards","customization","getCustomization","locations","getLocations","getEnhancedMockMenu","error","transformedMenu","hasData","meatType","endpoint","entries","response","fetch","status","ok","warn","data","json","results","i","dish","title","push","id","price","generateMeatPrice","category","getMeatCategory","image","calories","Math","floor","random","serves","preparationTime","isPromo","promoText","signature","size","cookingStyle","spiceLevel","tags","allergens","origin","getMeatOrigin","getMockSidesAndBeverages","categories","origins","basePrices","basePrice","randomFactor","round","originalPrice","discount","validUntil","code","deliveryInfo","available","services","deliveryFee","minimumOrder","findCarnivoreId","searchData","_searchData$restauran","carnivore","restaurants","find","r","toLowerCase","includes","getRestaurantInfo","checkDeliveryAvailability","freeDeliveryThreshold","spiceLevels","cookingStyles","sizes","address","mockSides","vegetarian","mockBeverages"],"sources":["C:/Projects/gawa/frontend/src/api/carnivoreAPI.js"],"sourcesContent":["// Carnivore Restaurant API Integration Service\r\n// Using Spoonacular API for real meat recipes\r\n\r\n// Base configuration\r\nconst CARNIVORE_CONFIG = {\r\n  name: 'Carnivore Restaurant',\r\n  location: 'Langata Road, Nairobi',\r\n  phone: '+254 20 600 5923',\r\n  website: 'https://www.tamarind.co.ke/carnivore',\r\n  coordinates: { lat: -1.3182, lng: 36.8172 },\r\n  description: 'The ultimate meat lover\\'s paradise serving exotic meats from around the world',\r\n  founded: '1980',\r\n  branches: '1',\r\n  specialties: ['Exotic Meats', 'BBQ', 'Grilled Meats', 'African Cuisine'],\r\n  rating: 4.6,\r\n  deliveryTime: '30-45 min'\r\n};\r\n\r\n// Meat type endpoints from Spoonacular\r\nconst MEAT_ENDPOINTS = {\r\n  chicken: 'https://api.spoonacular.com/recipes/complexSearch?query=chicken&number=10&apiKey=0264506281e5448c81a956ff1f4f1d82',\r\n  beef: 'https://api.spoonacular.com/recipes/complexSearch?query=beef&number=10&apiKey=0264506281e5448c81a956ff1f4f1d82',\r\n  lamb: 'https://api.spoonacular.com/recipes/complexSearch?query=lamb&number=10&apiKey=0264506281e5448c81a956ff1f4f1d82',\r\n  goat: 'https://api.spoonacular.com/recipes/complexSearch?query=goat&number=10&apiKey=0264506281e5448c81a956ff1f4f1d82',\r\n  fish: 'https://api.spoonacular.com/recipes/complexSearch?query=fish&number=10&apiKey=0264506281e5448c81a956ff1f4f1d82',\r\n  pork: 'https://api.spoonacular.com/recipes/complexSearch?query=pork&number=10&apiKey=0264506281e5448c81a956ff1f4f1d82',\r\n  turkey: 'https://api.spoonacular.com/recipes/complexSearch?query=turkey&number=10&apiKey=0264506281e5448c81a956ff1f4f1d82'\r\n};\r\n\r\n// Main API functions\r\nexport const carnivoreAPI = {\r\n  // Get full menu with real-time data\r\n  async getFullMenu() {\r\n    try {\r\n      // Try to get real meat data first from Spoonacular\r\n      const realMenu = await this.getRealMeatMenu();\r\n      if (realMenu && realMenu.length > 0) {\r\n        console.log('‚úÖ Real meat data loaded successfully from Spoonacular');\r\n        return {\r\n          restaurant: CARNIVORE_CONFIG,\r\n          menu: realMenu,\r\n          meatTypes: Object.keys(MEAT_ENDPOINTS),\r\n          promotions: this.getPromotions(),\r\n          deals: this.getDeals(),\r\n          rewards: this.getRewards(),\r\n          customization: this.getCustomization(),\r\n          locations: this.getLocations()\r\n        };\r\n      }\r\n      \r\n      // Fallback to enhanced mock data\r\n      console.log('‚ö†Ô∏è Using enhanced mock data as fallback');\r\n      return this.getEnhancedMockMenu();\r\n    } catch (error) {\r\n      console.error('Error fetching Carnivore menu:', error);\r\n      return this.getEnhancedMockMenu();\r\n    }\r\n  },\r\n\r\n  // Get real meat data from multiple Spoonacular API endpoints\r\n  async getRealMeatMenu() {\r\n    try {\r\n      console.log('ü•© Fetching from multiple Spoonacular Meat APIs...');\r\n      \r\n      const transformedMenu = [];\r\n      let hasData = false;\r\n      \r\n      // Fetch from all meat type endpoints\r\n      for (const [meatType, endpoint] of Object.entries(MEAT_ENDPOINTS)) {\r\n        try {\r\n          console.log(`üçñ Fetching ${meatType} from:`, endpoint);\r\n          \r\n          const response = await fetch(endpoint);\r\n          console.log(`üì° ${meatType} API Response status:`, response.status);\r\n          \r\n          if (!response.ok) {\r\n            console.warn(`‚ö†Ô∏è ${meatType} API request failed with status:`, response.status);\r\n            continue;\r\n          }\r\n          \r\n          const data = await response.json();\r\n          console.log(`‚úÖ Successfully fetched ${meatType} data:`, data);\r\n          \r\n          // Transform meat data to our format\r\n          if (data.results && data.results.length > 0) {\r\n            console.log(`ü•© Found ${data.results.length} ${meatType} dishes from Spoonacular API`);\r\n            hasData = true;\r\n            \r\n            // Show ALL dishes from the API\r\n            for (let i = 0; i < data.results.length; i++) {\r\n              const dish = data.results[i];\r\n              console.log(`ü•© Processing ${meatType} dish ${i + 1}:`, dish.title);\r\n              \r\n              transformedMenu.push({\r\n                id: `${meatType}-${dish.id}`,\r\n                name: dish.title,\r\n                description: `Delicious ${meatType} dish prepared with Carnivore's signature spices and grilling techniques`,\r\n                price: this.generateMeatPrice(meatType),\r\n                category: this.getMeatCategory(meatType),\r\n                meatType: meatType,\r\n                image: dish.image || '/images/food/placeholder-food.jpg',\r\n                calories: Math.floor(Math.random() * 500) + 300,\r\n                serves: '1 person',\r\n                preparationTime: '20-35 min',\r\n                isPromo: Math.random() > 0.7,\r\n                promoText: 'Chef\\'s Special!',\r\n                signature: Math.random() > 0.8,\r\n                size: ['Small', 'Medium', 'Large'][Math.floor(Math.random() * 3)],\r\n                cookingStyle: ['Grilled', 'BBQ', 'Roasted', 'Smoked'][Math.floor(Math.random() * 4)],\r\n                spiceLevel: ['Mild', 'Medium', 'Hot', 'Extra Hot'][Math.floor(Math.random() * 4)],\r\n                tags: ['Fresh', 'Premium', 'Exotic'],\r\n                allergens: ['Gluten', 'Dairy'],\r\n                origin: this.getMeatOrigin(meatType)\r\n              });\r\n            }\r\n          } else {\r\n            console.warn(`‚ö†Ô∏è No ${meatType} data found from API`);\r\n          }\r\n          \r\n        } catch (error) {\r\n          console.error(`‚ùå Error fetching ${meatType} data:`, error);\r\n        }\r\n      }\r\n      \r\n      // Add some mock sides and beverages to complete the menu\r\n      transformedMenu.push(...this.getMockSidesAndBeverages());\r\n      \r\n      console.log(`‚úÖ Successfully transformed ${transformedMenu.length} menu items`);\r\n      \r\n      // Only return data if we actually got some meat dishes\r\n      if (hasData && transformedMenu.length > 0) {\r\n        return transformedMenu;\r\n      } else {\r\n        console.log('‚ö†Ô∏è No meat data was successfully fetched, will use mock data');\r\n        return null;\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('‚ùå Error fetching real meat data from Spoonacular:', error);\r\n      console.log('üîÑ Falling back to mock data...');\r\n      return null;\r\n    }\r\n  },\r\n\r\n  // Get meat category for display\r\n  getMeatCategory(meatType) {\r\n    const categories = {\r\n      chicken: 'Poultry',\r\n      beef: 'Red Meat',\r\n      lamb: 'Red Meat',\r\n      goat: 'Red Meat',\r\n      fish: 'Seafood',\r\n      pork: 'Red Meat',\r\n      turkey: 'Poultry'\r\n    };\r\n    return categories[meatType] || 'Meat';\r\n  },\r\n\r\n  // Get meat origin for display\r\n  getMeatOrigin(meatType) {\r\n    const origins = {\r\n      chicken: 'Local Farm',\r\n      beef: 'Premium Ranch',\r\n      lamb: 'Highland Farm',\r\n      goat: 'Local Farm',\r\n      fish: 'Fresh Catch',\r\n      pork: 'Local Farm',\r\n      turkey: 'Local Farm'\r\n    };\r\n    return origins[meatType] || 'Local Source';\r\n  },\r\n\r\n  // Generate random prices for different meat types\r\n  generateMeatPrice(meatType) {\r\n    const basePrices = {\r\n      chicken: 800,\r\n      beef: 1200,\r\n      lamb: 1500,\r\n      goat: 1300,\r\n      fish: 1000,\r\n      pork: 900,\r\n      turkey: 1100\r\n    };\r\n    \r\n    const basePrice = basePrices[meatType] || 1000;\r\n    const randomFactor = Math.random() * 1.5 + 0.5; // Random factor between 0.5 and 2.0\r\n    return `KES ${Math.round(basePrice * randomFactor)}`;\r\n  },\r\n\r\n  // Enhanced mock menu with realistic data\r\n  getEnhancedMockMenu() {\r\n    return {\r\n      restaurant: CARNIVORE_CONFIG,\r\n      categories: {\r\n        'Beast of a Feast': [\r\n          {\r\n            id: 'bf-001',\r\n            name: 'Nyama Choma Platter',\r\n            price: 'KES 3,500',\r\n            originalPrice: 'KES 4,200',\r\n            description: 'Mixed grilled meats: beef, lamb, chicken, pork with unlimited sides',\r\n            category: 'Beast of a Feast',\r\n            image: '/images/food/nyama-choma.jpg',\r\n            isPromo: true,\r\n            promoText: 'Most Popular! -20% OFF',\r\n            calories: '1200-1500',\r\n            serves: '2-3 people',\r\n            allergens: ['None'],\r\n            preparationTime: '15-20 min',\r\n            spiceLevel: 'Medium',\r\n            tags: ['Popular', 'Best Seller', 'Shareable']\r\n          },\r\n          {\r\n            id: 'bf-002',\r\n            name: 'Carnivore Special',\r\n            price: 'KES 4,200',\r\n            description: 'Premium selection: ostrich, crocodile, beef, lamb with unlimited sides',\r\n            category: 'Beast of a Feast',\r\n            image: '/images/food/carnivore-special.jpg',\r\n            isPromo: true,\r\n            promoText: 'Chef\\'s Choice',\r\n            calories: '1500-2000',\r\n            serves: '3-4 people',\r\n            allergens: ['None'],\r\n            preparationTime: '20-25 min',\r\n            spiceLevel: 'Medium',\r\n            tags: ['Premium', 'Exotic', 'Chef Special']\r\n          }\r\n        ],\r\n        'Grilled Meats': [\r\n          {\r\n            id: 'gm-001',\r\n            name: 'Beef Ribs',\r\n            price: 'KES 2,800',\r\n            description: 'Slow-cooked beef ribs with BBQ sauce',\r\n            category: 'Grilled Meats',\r\n            image: '/images/food/beef-ribs.jpg',\r\n            calories: '800',\r\n            serves: '1 person',\r\n            allergens: ['None'],\r\n            preparationTime: '10-15 min',\r\n            spiceLevel: 'Mild',\r\n            tags: ['BBQ', 'Slow Cooked', 'Tender']\r\n          },\r\n          {\r\n            id: 'gm-002',\r\n            name: 'Lamb Chops',\r\n            price: 'KES 2,500',\r\n            description: 'Grilled lamb chops with rosemary',\r\n            category: 'Grilled Meats',\r\n            image: '/images/food/lamb-chops.jpg',\r\n            calories: '650',\r\n            serves: '1 person',\r\n            allergens: ['None'],\r\n            preparationTime: '12-18 min',\r\n            spiceLevel: 'Mild',\r\n            tags: ['Herb Crusted', 'Premium', 'Tender']\r\n          }\r\n        ],\r\n        'Game Meats': [\r\n          {\r\n            id: 'gm-003',\r\n            name: 'Ostrich Fillet',\r\n            price: 'KES 3,200',\r\n            description: 'Lean ostrich meat grilled to perfection',\r\n            category: 'Game Meats',\r\n            image: '/images/food/ostrich-fillet.jpg',\r\n            calories: '400',\r\n            serves: '1 person',\r\n            allergens: ['None'],\r\n            preparationTime: '8-12 min',\r\n            spiceLevel: 'Mild',\r\n            tags: ['Exotic', 'Lean', 'Healthy']\r\n          }\r\n        ]\r\n      },\r\n      promotions: [\r\n        {\r\n          id: 'promo-001',\r\n          title: 'Beast of a Feast Special',\r\n          description: 'Get 20% off on all Beast of a Feast platters',\r\n          discount: '20%',\r\n          validUntil: '2024-12-31',\r\n          code: 'BEAST20'\r\n        },\r\n        {\r\n          id: 'promo-002',\r\n          title: 'Weekday Lunch Special',\r\n          description: '50% off on selected grilled meats (Mon-Fri, 12-3 PM)',\r\n          discount: '50%',\r\n          validUntil: '2024-12-31',\r\n          code: 'LUNCH50'\r\n        }\r\n      ],\r\n      deliveryInfo: {\r\n        available: true,\r\n        services: ['Jumia Food', 'Glovo', 'Uber Eats'],\r\n        deliveryTime: '30-45 minutes',\r\n        deliveryFee: 'KES 200',\r\n        minimumOrder: 'KES 1,500'\r\n      }\r\n    };\r\n  },\r\n\r\n  // Helper functions\r\n  findCarnivoreId(searchData) {\r\n    // Logic to find Carnivore's ID in search results\r\n    const carnivore = searchData.restaurants?.find(r => \r\n      r.name.toLowerCase().includes('carnivore')\r\n    );\r\n    return carnivore?.id;\r\n  },\r\n\r\n  // Get restaurant information\r\n  getRestaurantInfo() {\r\n    return CARNIVORE_CONFIG;\r\n  },\r\n\r\n  // Get current promotions\r\n  async getPromotions() {\r\n    // Return mock promotions directly since we're using Spoonacular for main menu\r\n    return [\r\n      'All-you-can-eat meat buffet every Friday',\r\n      'Student discount: 20% off with valid ID',\r\n      'Happy Hour: 2-for-1 on drinks (5-7 PM)',\r\n      'Family package: 4 people for the price of 3'\r\n    ];\r\n  },\r\n\r\n  // Check delivery availability\r\n  async checkDeliveryAvailability() {\r\n    // Return mock delivery info directly\r\n    return {\r\n      available: true,\r\n      deliveryTime: '30-45 min',\r\n      minimumOrder: 'KES 500',\r\n      deliveryFee: 'KES 100',\r\n      freeDeliveryThreshold: 'KES 2000'\r\n    };\r\n  },\r\n\r\n  // Mock functions for new features (if not implemented in Spoonacular)\r\n  getDeals() {\r\n    return [\r\n      { id: 'deal-001', title: 'Daily Special', description: 'Get a free side with any main dish', validUntil: '2024-12-31' },\r\n      { id: 'deal-002', title: 'Lunch Combo', description: 'Half price on all lunch specials', validUntil: '2024-12-31' }\r\n    ];\r\n  },\r\n\r\n  getRewards() {\r\n    return [\r\n      { id: 'reward-001', title: 'Loyalty Card', description: 'Earn points for every meal', validUntil: '2024-12-31' },\r\n      { id: 'reward-002', title: 'Free Dessert', description: 'Get a free dessert with your 10th meal', validUntil: '2024-12-31' }\r\n    ];\r\n  },\r\n\r\n  getCustomization() {\r\n    return {\r\n      meatTypes: Object.keys(MEAT_ENDPOINTS),\r\n      spiceLevels: ['Mild', 'Medium', 'Hot', 'Extra Hot'],\r\n      cookingStyles: ['Grilled', 'BBQ', 'Roasted', 'Smoked'],\r\n      sizes: ['Small', 'Medium', 'Large']\r\n    };\r\n  },\r\n\r\n  getLocations() {\r\n    return [\r\n      { id: 'loc-001', name: 'Main Branch', address: 'Langata Road, Nairobi', phone: '+254 20 600 5923' },\r\n      { id: 'loc-002', name: 'Westlands Branch', address: 'Westlands, Nairobi', phone: '+254 20 600 5924' }\r\n    ];\r\n  },\r\n\r\n  getMockSidesAndBeverages() {\r\n    const mockSides = [\r\n      {\r\n        id: 'side-001',\r\n        name: 'Ugali',\r\n        price: 'KES 200',\r\n        description: 'Traditional Kenyan maize meal',\r\n        category: 'Sides',\r\n        image: '/images/food/ugali.jpg',\r\n        isPromo: false,\r\n        calories: '150',\r\n        serves: '1 person',\r\n        allergens: ['Gluten'],\r\n        preparationTime: '5 min',\r\n        spiceLevel: 'None',\r\n        tags: ['Traditional', 'Local'],\r\n        vegetarian: true,\r\n        signature: false\r\n      },\r\n      {\r\n        id: 'side-002',\r\n        name: 'Sukuma Wiki',\r\n        price: 'KES 150',\r\n        description: 'Collard greens with tomatoes and onions',\r\n        category: 'Sides',\r\n        image: '/images/food/sukuma-wiki.jpg',\r\n        isPromo: false,\r\n        calories: '80',\r\n        serves: '1 person',\r\n        allergens: ['None'],\r\n        preparationTime: '8 min',\r\n        spiceLevel: 'Mild',\r\n        tags: ['Vegetables', 'Healthy'],\r\n        vegetarian: true,\r\n        signature: false\r\n      }\r\n    ];\r\n\r\n    const mockBeverages = [\r\n      {\r\n        id: 'bev-001',\r\n        name: 'Tusker Beer',\r\n        price: 'KES 300',\r\n        description: 'Local Kenyan beer',\r\n        category: 'Beverages',\r\n        image: '/images/food/tusker-beer.jpg',\r\n        isPromo: false,\r\n        calories: '150',\r\n        serves: '1 person',\r\n        allergens: ['Gluten'],\r\n        preparationTime: '2 min',\r\n        spiceLevel: 'None',\r\n        tags: ['Local', 'Beer'],\r\n        vegetarian: true,\r\n        signature: false\r\n      },\r\n      {\r\n        id: 'bev-002',\r\n        name: 'Fresh Fruit Juice',\r\n        price: 'KES 250',\r\n        description: 'Seasonal fruit juice',\r\n        category: 'Beverages',\r\n        image: '/images/food/fruit-juice.jpg',\r\n        isPromo: false,\r\n        calories: '120',\r\n        serves: '1 person',\r\n        allergens: ['None'],\r\n        preparationTime: '3 min',\r\n        spiceLevel: 'None',\r\n        tags: ['Fresh', 'Healthy'],\r\n        vegetarian: true,\r\n        signature: false\r\n      }\r\n    ];\r\n\r\n    return [...mockSides, ...mockBeverages];\r\n  }\r\n};\r\n\r\nexport default carnivoreAPI;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}