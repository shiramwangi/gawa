{"ast":null,"code":"// ArtCafe Restaurant API Integration Service\n// This service provides multiple ways to get ArtCafe's menu data\n\n// Base configuration\nconst ARTCAFE_CONFIG = {\n  name: 'ArtCafe',\n  location: 'Multiple locations across Kenya',\n  phone: '+254 20 444 4444',\n  website: 'https://www.artcafe.co.ke',\n  coordinates: {\n    lat: -1.2921,\n    lng: 36.8219\n  },\n  // Nairobi location\n  description: 'Contemporary dining with artistic flair, serving international cuisine in a creative atmosphere',\n  founded: 2005,\n  branches: 15,\n  specialties: ['International Cuisine', 'Artistic Presentation', 'Contemporary Dining', 'Creative Cocktails', 'Live Music']\n};\n\n// Option 1: Direct API endpoints (if ArtCafe has them)\nconst ARTCAFE_DIRECT_API = {\n  baseURL: 'https://api.artcafe.co.ke',\n  // Hypothetical API endpoint\n  endpoints: {\n    menu: '/api/v1/menu',\n    promotions: '/api/v1/promotions',\n    reservations: '/api/v1/reservations',\n    delivery: '/api/v1/delivery',\n    events: '/api/v1/events',\n    liveMusic: '/api/v1/live-music'\n  }\n};\n\n// Option 2: Jumia Food API integration\nconst JUMIA_FOOD_API = {\n  baseURL: 'https://food.jumia.co.ke/api',\n  endpoints: {\n    search: '/restaurants/search',\n    menu: '/restaurants/{id}/menu',\n    categories: '/categories'\n  },\n  headers: {\n    'Authorization': 'Bearer YOUR_JUMIA_API_KEY',\n    'Content-Type': 'application/json'\n  }\n};\n\n// Option 3: Glovo API integration\nconst GLOVO_API = {\n  baseURL: 'https://api.glovoapp.com',\n  endpoints: {\n    restaurants: '/v3/restaurants',\n    menu: '/v3/restaurants/{id}/menu',\n    categories: '/v3/categories'\n  },\n  headers: {\n    'Authorization': 'Bearer YOUR_GLOVO_API_KEY',\n    'Content-Type': 'application/json'\n  }\n};\n\n// Main API functions\nexport const artCafeAPI = {\n  // Get full menu with real-time data\n  async getFullMenu() {\n    try {\n      // Try direct API first\n      const directMenu = await this.getDirectMenu();\n      if (directMenu) return directMenu;\n\n      // Try Jumia Food API\n      const jumiaMenu = await this.getJumiaMenu();\n      if (jumiaMenu) return jumiaMenu;\n\n      // Try Glovo API\n      const glovoMenu = await this.getGlovoMenu();\n      if (glovoMenu) return glovoMenu;\n\n      // Fallback to enhanced mock data\n      return this.getEnhancedMockMenu();\n    } catch (error) {\n      console.error('Error fetching ArtCafe menu:', error);\n      return this.getEnhancedMockMenu();\n    }\n  },\n  // Try direct ArtCafe API\n  async getDirectMenu() {\n    try {\n      const response = await fetch(`${ARTCAFE_DIRECT_API.baseURL}${ARTCAFE_DIRECT_API.endpoints.menu}`);\n      if (response.ok) {\n        const data = await response.json();\n        return this.transformDirectMenuData(data);\n      }\n    } catch (error) {\n      console.log('Direct API not available, trying alternatives...');\n    }\n    return null;\n  },\n  // Try Jumia Food API\n  async getJumiaMenu() {\n    try {\n      // Search for ArtCafe on Jumia Food\n      const searchResponse = await fetch(`${JUMIA_FOOD_API.baseURL}${JUMIA_FOOD_API.endpoints.search}?q=artcafe`, {\n        headers: JUMIA_FOOD_API.headers\n      });\n      if (searchResponse.ok) {\n        const searchData = await searchResponse.json();\n        const artCafeId = this.findArtCafeId(searchData);\n        if (artCafeId) {\n          const menuResponse = await fetch(`${JUMIA_FOOD_API.baseURL}${JUMIA_FOOD_API.endpoints.menu.replace('{id}', artCafeId)}`, {\n            headers: JUMIA_FOOD_API.headers\n          });\n          if (menuResponse.ok) {\n            const menuData = await menuResponse.json();\n            return this.transformJumiaMenuData(menuData);\n          }\n        }\n      }\n    } catch (error) {\n      console.log('Jumia Food API not available, trying alternatives...');\n    }\n    return null;\n  },\n  // Try Glovo API\n  async getGlovoMenu() {\n    try {\n      // Search for ArtCafe on Glovo\n      const searchResponse = await fetch(`${GLOVO_API.baseURL}${GLOVO_API.endpoints.restaurants}?search=artcafe`, {\n        headers: GLOVO_API.headers\n      });\n      if (searchResponse.ok) {\n        const searchData = await searchResponse.json();\n        const artCafeId = this.findArtCafeId(searchData);\n        if (artCafeId) {\n          const menuResponse = await fetch(`${GLOVO_API.baseURL}${GLOVO_API.endpoints.menu.replace('{id}', artCafeId)}`, {\n            headers: GLOVO_API.headers\n          });\n          if (menuResponse.ok) {\n            const menuData = await menuResponse.json();\n            return this.transformGlovoMenuData(menuData);\n          }\n        }\n      }\n    } catch (error) {\n      console.log('Glovo API not available, using fallback...');\n    }\n    return null;\n  },\n  // Enhanced mock menu with realistic ArtCafe data\n  getEnhancedMockMenu() {\n    return {\n      restaurant: ARTCAFE_CONFIG,\n      categories: {\n        'Starters & Appetizers': [{\n          id: 'sa-001',\n          name: 'Truffle Arancini',\n          price: 'KES 1,200',\n          description: 'Crispy risotto balls with truffle oil, served with parmesan aioli',\n          category: 'Starters & Appetizers',\n          image: '/images/food/truffle-arancini.jpg',\n          isPromo: true,\n          promoText: 'Chef\\'s Favourite',\n          calories: '280',\n          serves: '1 person',\n          allergens: ['Gluten', 'Dairy', 'Eggs'],\n          preparationTime: '8-12 min',\n          spiceLevel: 'Mild',\n          tags: ['Italian', 'Truffle', 'Crispy'],\n          vegetarian: true,\n          artistic: true\n        }, {\n          id: 'sa-002',\n          name: 'Beetroot Carpaccio',\n          price: 'KES 950',\n          description: 'Thinly sliced beetroot with goat cheese, walnuts, and balsamic reduction',\n          category: 'Starters & Appetizers',\n          image: '/images/food/beetroot-carpaccio.jpg',\n          isPromo: false,\n          calories: '180',\n          serves: '1 person',\n          allergens: ['Dairy', 'Nuts'],\n          preparationTime: '5-8 min',\n          spiceLevel: 'None',\n          tags: ['Vegetarian', 'Healthy', 'Colorful'],\n          vegetarian: true,\n          artistic: true\n        }, {\n          id: 'sa-003',\n          name: 'Duck Confit Spring Rolls',\n          price: 'KES 1,400',\n          description: 'Crispy spring rolls filled with tender duck confit and hoisin sauce',\n          category: 'Starters & Appetizers',\n          image: '/images/food/duck-confit-spring-rolls.jpg',\n          isPromo: false,\n          calories: '320',\n          serves: '1 person',\n          allergens: ['Gluten', 'Duck'],\n          preparationTime: '10-15 min',\n          spiceLevel: 'Mild',\n          tags: ['Asian Fusion', 'Duck', 'Crispy'],\n          vegetarian: false,\n          artistic: true\n        }],\n        'Main Courses': [{\n          id: 'mc-001',\n          name: 'Wagyu Beef Tenderloin',\n          price: 'KES 4,800',\n          description: 'Premium Wagyu beef with truffle mashed potatoes and red wine reduction',\n          category: 'Main Courses',\n          image: '/images/food/wagyu-beef-tenderloin.jpg',\n          isPromo: true,\n          promoText: 'Premium Cut',\n          calories: '680',\n          serves: '1 person',\n          allergens: ['Beef', 'Dairy'],\n          preparationTime: '20-25 min',\n          spiceLevel: 'Mild',\n          tags: ['Premium', 'Wagyu', 'Fine Dining'],\n          vegetarian: false,\n          artistic: true\n        }, {\n          id: 'mc-002',\n          name: 'Lobster Thermidor',\n          price: 'KES 3,200',\n          description: 'Fresh lobster in creamy thermidor sauce with saffron rice',\n          category: 'Main Courses',\n          image: '/images/food/lobster-thermidor.jpg',\n          isPromo: false,\n          calories: '520',\n          serves: '1 person',\n          allergens: ['Shellfish', 'Dairy', 'Gluten'],\n          preparationTime: '25-30 min',\n          spiceLevel: 'Mild',\n          tags: ['Seafood', 'French', 'Creamy'],\n          vegetarian: false,\n          artistic: true\n        }, {\n          id: 'mc-003',\n          name: 'Wild Mushroom Risotto',\n          price: 'KES 1,800',\n          description: 'Creamy risotto with wild mushrooms, parmesan, and truffle oil',\n          category: 'Main Courses',\n          image: '/images/food/wild-mushroom-risotto.jpg',\n          isPromo: false,\n          calories: '420',\n          serves: '1 person',\n          allergens: ['Dairy', 'Gluten'],\n          preparationTime: '18-22 min',\n          spiceLevel: 'Mild',\n          tags: ['Vegetarian', 'Italian', 'Creamy'],\n          vegetarian: true,\n          artistic: true\n        }, {\n          id: 'mc-004',\n          name: 'Pan-Seared Sea Bass',\n          price: 'KES 2,800',\n          description: 'Fresh sea bass with quinoa pilaf and citrus butter sauce',\n          category: 'Main Courses',\n          image: '/images/food/pan-seared-sea-bass.jpg',\n          isPromo: false,\n          calories: '380',\n          serves: '1 person',\n          allergens: ['Fish', 'Dairy'],\n          preparationTime: '20-25 min',\n          spiceLevel: 'Mild',\n          tags: ['Seafood', 'Healthy', 'Light'],\n          vegetarian: false,\n          artistic: true\n        }],\n        'Artistic Plates': [{\n          id: 'ap-001',\n          name: 'Rainbow Sushi Platter',\n          price: 'KES 2,500',\n          description: 'Colorful sushi assortment with edible flowers and artistic presentation',\n          category: 'Artistic Plates',\n          image: '/images/food/rainbow-sushi-platter.jpg',\n          isPromo: true,\n          promoText: 'Instagram Famous',\n          calories: '480',\n          serves: '1 person',\n          allergens: ['Fish', 'Rice', 'Soy'],\n          preparationTime: '15-20 min',\n          spiceLevel: 'Mild',\n          tags: ['Japanese', 'Colorful', 'Artistic'],\n          vegetarian: false,\n          artistic: true\n        }, {\n          id: 'ap-002',\n          name: 'Garden Salad Canvas',\n          price: 'KES 1,600',\n          description: 'Edible garden salad arranged as an artistic canvas with edible flowers',\n          category: 'Artistic Plates',\n          image: '/images/food/garden-salad-canvas.jpg',\n          isPromo: false,\n          calories: '220',\n          serves: '1 person',\n          allergens: ['Nuts'],\n          preparationTime: '8-12 min',\n          spiceLevel: 'None',\n          tags: ['Vegetarian', 'Healthy', 'Artistic'],\n          vegetarian: true,\n          artistic: true\n        }],\n        'Pasta & Risotto': [{\n          id: 'pr-001',\n          name: 'Truffle Tagliatelle',\n          price: 'KES 1,900',\n          description: 'Fresh tagliatelle with black truffle, parmesan, and butter sauce',\n          category: 'Pasta & Risotto',\n          image: '/images/food/truffle-tagliatelle.jpg',\n          isPromo: false,\n          calories: '520',\n          serves: '1 person',\n          allergens: ['Gluten', 'Dairy', 'Eggs'],\n          preparationTime: '15-20 min',\n          spiceLevel: 'Mild',\n          tags: ['Italian', 'Truffle', 'Creamy'],\n          vegetarian: true,\n          artistic: true\n        }, {\n          id: 'pr-002',\n          name: 'Seafood Linguine',\n          price: 'KES 2,200',\n          description: 'Linguine with prawns, calamari, and clams in white wine sauce',\n          category: 'Pasta & Risotto',\n          image: '/images/food/seafood-linguine.jpg',\n          isPromo: false,\n          calories: '580',\n          serves: '1 person',\n          allergens: ['Gluten', 'Shellfish', 'Fish'],\n          preparationTime: '18-22 min',\n          spiceLevel: 'Mild',\n          tags: ['Italian', 'Seafood', 'White Wine'],\n          vegetarian: false,\n          artistic: true\n        }],\n        'Desserts': [{\n          id: 'ds-001',\n          name: 'Chocolate Art Canvas',\n          price: 'KES 1,200',\n          description: 'Chocolate dessert painted on a plate with edible gold leaf and berries',\n          category: 'Desserts',\n          image: '/images/food/chocolate-art-canvas.jpg',\n          isPromo: true,\n          promoText: 'Artistic Masterpiece',\n          calories: '380',\n          serves: '1 person',\n          allergens: ['Chocolate', 'Dairy', 'Eggs'],\n          preparationTime: '5-8 min',\n          spiceLevel: 'None',\n          tags: ['Chocolate', 'Artistic', 'Premium'],\n          vegetarian: true,\n          artistic: true\n        }, {\n          id: 'ds-002',\n          name: 'Lavender Panna Cotta',\n          price: 'KES 950',\n          description: 'Silky lavender-infused panna cotta with honey and edible flowers',\n          category: 'Desserts',\n          image: '/images/food/lavender-panna-cotta.jpg',\n          isPromo: false,\n          calories: '280',\n          serves: '1 person',\n          allergens: ['Dairy'],\n          preparationTime: '3-5 min',\n          spiceLevel: 'None',\n          tags: ['Lavender', 'Silky', 'Floral'],\n          vegetarian: true,\n          artistic: true\n        }],\n        'Creative Cocktails': [{\n          id: 'cc-001',\n          name: 'Artistic Margarita',\n          price: 'KES 850',\n          description: 'Classic margarita with hand-painted glass rim and edible flower garnish',\n          category: 'Creative Cocktails',\n          image: '/images/food/artistic-margarita.jpg',\n          isPromo: false,\n          calories: '180',\n          serves: '1 person',\n          allergens: ['None'],\n          preparationTime: '5-8 min',\n          spiceLevel: 'None',\n          tags: ['Tequila', 'Artistic', 'Hand-Painted'],\n          alcoholic: true,\n          artistic: true\n        }, {\n          id: 'cc-002',\n          name: 'Rainbow Sangria',\n          price: 'KES 1,100',\n          description: 'Colorful sangria with fresh fruits and edible glitter',\n          category: 'Creative Cocktails',\n          image: '/images/food/rainbow-sangria.jpg',\n          isPromo: false,\n          calories: '220',\n          serves: '1 person',\n          allergens: ['Fruits'],\n          preparationTime: '8-12 min',\n          spiceLevel: 'None',\n          tags: ['Wine', 'Colorful', 'Fruity'],\n          alcoholic: true,\n          artistic: true\n        }]\n      },\n      promotions: [{\n        id: 'promo-001',\n        title: 'Artistic Dining Experience',\n        description: '20% off on all artistic plates and creative cocktails',\n        discount: '20%',\n        validUntil: '2024-12-31',\n        code: 'ARTISTIC20',\n        timing: 'Available Daily'\n      }, {\n        id: 'promo-002',\n        title: 'Live Music Nights',\n        description: 'Free dessert with any main course on live music nights',\n        discount: 'Free Dessert',\n        validUntil: '2024-12-31',\n        code: 'LIVEMUSIC',\n        timing: 'Every Friday & Saturday'\n      }, {\n        id: 'promo-003',\n        title: 'Instagram Special',\n        description: '15% off when you post your meal with #ArtCafeExperience',\n        discount: '15%',\n        validUntil: '2024-12-31',\n        code: 'INSTAGRAM15',\n        requirements: 'Social media post required'\n      }],\n      deliveryInfo: {\n        available: true,\n        services: ['Jumia Food', 'Glovo', 'Uber Eats'],\n        deliveryTime: '30-45 minutes',\n        deliveryFee: 'KES 200',\n        minimumOrder: 'KES 1,500',\n        freeDeliveryThreshold: 'KES 3,000'\n      },\n      locations: ['Westlands', 'CBD', 'Kilimani', 'Lavington', 'Karen', 'Mombasa Road', 'Thika Road'],\n      events: ['Live Music Fridays', 'Art Exhibition Sundays', 'Wine Tasting Wednesdays', 'Chef\\'s Table Experience'],\n      liveMusic: {\n        available: true,\n        schedule: 'Fridays & Saturdays 7-11 PM',\n        genres: ['Jazz', 'Acoustic', 'Contemporary', 'World Music']\n      }\n    };\n  },\n  // Helper functions\n  findArtCafeId(searchData) {\n    var _searchData$restauran;\n    // Logic to find ArtCafe's ID in search results\n    const artCafe = (_searchData$restauran = searchData.restaurants) === null || _searchData$restauran === void 0 ? void 0 : _searchData$restauran.find(r => r.name.toLowerCase().includes('artcafe') || r.name.toLowerCase().includes('art cafe'));\n    return artCafe === null || artCafe === void 0 ? void 0 : artCafe.id;\n  },\n  transformDirectMenuData(data) {\n    // Transform direct API data to our format\n    return {\n      restaurant: ARTCAFE_CONFIG,\n      categories: data.categories || {},\n      promotions: data.promotions || [],\n      deliveryInfo: data.delivery || {},\n      locations: data.locations || [],\n      events: data.events || [],\n      liveMusic: data.liveMusic || {}\n    };\n  },\n  transformJumiaMenuData(data) {\n    // Transform Jumia Food data to our format\n    return {\n      restaurant: ARTCAFE_CONFIG,\n      categories: this.groupByCategory(data.menu || []),\n      promotions: data.promotions || [],\n      deliveryInfo: {\n        available: true,\n        services: ['Jumia Food'],\n        deliveryTime: data.deliveryTime || '30-45 minutes',\n        deliveryFee: data.deliveryFee || 'KES 200',\n        minimumOrder: data.minimumOrder || 'KES 1,500'\n      },\n      locations: data.locations || [],\n      events: data.events || [],\n      liveMusic: data.liveMusic || {}\n    };\n  },\n  transformGlovoMenuData(data) {\n    // Transform Glovo data to our format\n    return {\n      restaurant: ARTCAFE_CONFIG,\n      categories: this.groupByCategory(data.menu || []),\n      promotions: data.promotions || [],\n      deliveryInfo: {\n        available: true,\n        services: ['Glovo'],\n        deliveryTime: data.deliveryTime || '30-45 minutes',\n        deliveryFee: data.deliveryFee || 'KES 200',\n        minimumOrder: data.minimumOrder || 'KES 1,500'\n      },\n      locations: data.locations || [],\n      events: data.events || [],\n      liveMusic: data.liveMusic || {}\n    };\n  },\n  groupByCategory(menuItems) {\n    // Group menu items by category\n    const categories = {};\n    menuItems.forEach(item => {\n      if (!categories[item.category]) {\n        categories[item.category] = [];\n      }\n      categories[item.category].push(item);\n    });\n    return categories;\n  },\n  // Get restaurant information\n  getRestaurantInfo() {\n    return ARTCAFE_CONFIG;\n  },\n  // Get current promotions\n  async getPromotions() {\n    try {\n      const response = await fetch(`${ARTCAFE_DIRECT_API.baseURL}${ARTCAFE_DIRECT_API.endpoints.promotions}`);\n      if (response.ok) {\n        return await response.json();\n      }\n    } catch (error) {\n      console.log('Using mock promotions');\n    }\n    return this.getEnhancedMockMenu().promotions;\n  },\n  // Check delivery availability\n  async checkDeliveryAvailability() {\n    try {\n      const response = await fetch(`${ARTCAFE_DIRECT_API.baseURL}${ARTCAFE_DIRECT_API.endpoints.delivery}`);\n      if (response.ok) {\n        return await response.json();\n      }\n    } catch (error) {\n      console.log('Using mock delivery info');\n    }\n    return this.getEnhancedMockMenu().deliveryInfo;\n  },\n  // Get events\n  async getEvents() {\n    try {\n      const response = await fetch(`${ARTCAFE_DIRECT_API.baseURL}${ARTCAFE_DIRECT_API.endpoints.events}`);\n      if (response.ok) {\n        return await response.json();\n      }\n    } catch (error) {\n      console.log('Using mock events');\n    }\n    return this.getEnhancedMockMenu().events;\n  },\n  // Get live music schedule\n  async getLiveMusic() {\n    try {\n      const response = await fetch(`${ARTCAFE_DIRECT_API.baseURL}${ARTCAFE_DIRECT_API.endpoints.liveMusic}`);\n      if (response.ok) {\n        return await response.json();\n      }\n    } catch (error) {\n      console.log('Using mock live music info');\n    }\n    return this.getEnhancedMockMenu().liveMusic;\n  },\n  // Get all locations\n  async getLocations() {\n    try {\n      const response = await fetch(`${ARTCAFE_DIRECT_API.baseURL}${ARTCAFE_DIRECT_API.endpoints.locations}`);\n      if (response.ok) {\n        return await response.json();\n      }\n    } catch (error) {\n      console.log('Using mock locations');\n    }\n    return this.getEnhancedMockMenu().locations;\n  }\n};\nexport default artCafeAPI;","map":{"version":3,"names":["ARTCAFE_CONFIG","name","location","phone","website","coordinates","lat","lng","description","founded","branches","specialties","ARTCAFE_DIRECT_API","baseURL","endpoints","menu","promotions","reservations","delivery","events","liveMusic","JUMIA_FOOD_API","search","categories","headers","GLOVO_API","restaurants","artCafeAPI","getFullMenu","directMenu","getDirectMenu","jumiaMenu","getJumiaMenu","glovoMenu","getGlovoMenu","getEnhancedMockMenu","error","console","response","fetch","ok","data","json","transformDirectMenuData","log","searchResponse","searchData","artCafeId","findArtCafeId","menuResponse","replace","menuData","transformJumiaMenuData","transformGlovoMenuData","restaurant","id","price","category","image","isPromo","promoText","calories","serves","allergens","preparationTime","spiceLevel","tags","vegetarian","artistic","alcoholic","title","discount","validUntil","code","timing","requirements","deliveryInfo","available","services","deliveryTime","deliveryFee","minimumOrder","freeDeliveryThreshold","locations","schedule","genres","_searchData$restauran","artCafe","find","r","toLowerCase","includes","groupByCategory","menuItems","forEach","item","push","getRestaurantInfo","getPromotions","checkDeliveryAvailability","getEvents","getLiveMusic","getLocations"],"sources":["C:/Projects/gawa/frontend/src/api/artCafeAPI.js"],"sourcesContent":["// ArtCafe Restaurant API Integration Service\r\n// This service provides multiple ways to get ArtCafe's menu data\r\n\r\n// Base configuration\r\nconst ARTCAFE_CONFIG = {\r\n  name: 'ArtCafe',\r\n  location: 'Multiple locations across Kenya',\r\n  phone: '+254 20 444 4444',\r\n  website: 'https://www.artcafe.co.ke',\r\n  coordinates: { lat: -1.2921, lng: 36.8219 }, // Nairobi location\r\n  description: 'Contemporary dining with artistic flair, serving international cuisine in a creative atmosphere',\r\n  founded: 2005,\r\n  branches: 15,\r\n  specialties: ['International Cuisine', 'Artistic Presentation', 'Contemporary Dining', 'Creative Cocktails', 'Live Music']\r\n};\r\n\r\n// Option 1: Direct API endpoints (if ArtCafe has them)\r\nconst ARTCAFE_DIRECT_API = {\r\n  baseURL: 'https://api.artcafe.co.ke', // Hypothetical API endpoint\r\n  endpoints: {\r\n    menu: '/api/v1/menu',\r\n    promotions: '/api/v1/promotions',\r\n    reservations: '/api/v1/reservations',\r\n    delivery: '/api/v1/delivery',\r\n    events: '/api/v1/events',\r\n    liveMusic: '/api/v1/live-music'\r\n  }\r\n};\r\n\r\n// Option 2: Jumia Food API integration\r\nconst JUMIA_FOOD_API = {\r\n  baseURL: 'https://food.jumia.co.ke/api',\r\n  endpoints: {\r\n    search: '/restaurants/search',\r\n    menu: '/restaurants/{id}/menu',\r\n    categories: '/categories'\r\n  },\r\n  headers: {\r\n    'Authorization': 'Bearer YOUR_JUMIA_API_KEY',\r\n    'Content-Type': 'application/json'\r\n  }\r\n};\r\n\r\n// Option 3: Glovo API integration\r\nconst GLOVO_API = {\r\n  baseURL: 'https://api.glovoapp.com',\r\n  endpoints: {\r\n    restaurants: '/v3/restaurants',\r\n    menu: '/v3/restaurants/{id}/menu',\r\n    categories: '/v3/categories'\r\n  },\r\n  headers: {\r\n    'Authorization': 'Bearer YOUR_GLOVO_API_KEY',\r\n    'Content-Type': 'application/json'\r\n  }\r\n};\r\n\r\n// Main API functions\r\nexport const artCafeAPI = {\r\n  // Get full menu with real-time data\r\n  async getFullMenu() {\r\n    try {\r\n      // Try direct API first\r\n      const directMenu = await this.getDirectMenu();\r\n      if (directMenu) return directMenu;\r\n\r\n      // Try Jumia Food API\r\n      const jumiaMenu = await this.getJumiaMenu();\r\n      if (jumiaMenu) return jumiaMenu;\r\n\r\n      // Try Glovo API\r\n      const glovoMenu = await this.getGlovoMenu();\r\n      if (glovoMenu) return glovoMenu;\r\n\r\n      // Fallback to enhanced mock data\r\n      return this.getEnhancedMockMenu();\r\n    } catch (error) {\r\n      console.error('Error fetching ArtCafe menu:', error);\r\n      return this.getEnhancedMockMenu();\r\n    }\r\n  },\r\n\r\n  // Try direct ArtCafe API\r\n  async getDirectMenu() {\r\n    try {\r\n      const response = await fetch(`${ARTCAFE_DIRECT_API.baseURL}${ARTCAFE_DIRECT_API.endpoints.menu}`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        return this.transformDirectMenuData(data);\r\n      }\r\n    } catch (error) {\r\n      console.log('Direct API not available, trying alternatives...');\r\n    }\r\n    return null;\r\n  },\r\n\r\n  // Try Jumia Food API\r\n  async getJumiaMenu() {\r\n    try {\r\n      // Search for ArtCafe on Jumia Food\r\n      const searchResponse = await fetch(`${JUMIA_FOOD_API.baseURL}${JUMIA_FOOD_API.endpoints.search}?q=artcafe`, {\r\n        headers: JUMIA_FOOD_API.headers\r\n      });\r\n      \r\n      if (searchResponse.ok) {\r\n        const searchData = await searchResponse.json();\r\n        const artCafeId = this.findArtCafeId(searchData);\r\n        \r\n        if (artCafeId) {\r\n          const menuResponse = await fetch(`${JUMIA_FOOD_API.baseURL}${JUMIA_FOOD_API.endpoints.menu.replace('{id}', artCafeId)}`, {\r\n            headers: JUMIA_FOOD_API.headers\r\n          });\r\n          \r\n          if (menuResponse.ok) {\r\n            const menuData = await menuResponse.json();\r\n            return this.transformJumiaMenuData(menuData);\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log('Jumia Food API not available, trying alternatives...');\r\n    }\r\n    return null;\r\n  },\r\n\r\n  // Try Glovo API\r\n  async getGlovoMenu() {\r\n    try {\r\n      // Search for ArtCafe on Glovo\r\n      const searchResponse = await fetch(`${GLOVO_API.baseURL}${GLOVO_API.endpoints.restaurants}?search=artcafe`, {\r\n        headers: GLOVO_API.headers\r\n      });\r\n      \r\n      if (searchResponse.ok) {\r\n        const searchData = await searchResponse.json();\r\n        const artCafeId = this.findArtCafeId(searchData);\r\n        \r\n        if (artCafeId) {\r\n          const menuResponse = await fetch(`${GLOVO_API.baseURL}${GLOVO_API.endpoints.menu.replace('{id}', artCafeId)}`, {\r\n            headers: GLOVO_API.headers\r\n          });\r\n          \r\n          if (menuResponse.ok) {\r\n            const menuData = await menuResponse.json();\r\n            return this.transformGlovoMenuData(menuData);\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log('Glovo API not available, using fallback...');\r\n    }\r\n    return null;\r\n  },\r\n\r\n  // Enhanced mock menu with realistic ArtCafe data\r\n  getEnhancedMockMenu() {\r\n    return {\r\n      restaurant: ARTCAFE_CONFIG,\r\n      categories: {\r\n        'Starters & Appetizers': [\r\n          {\r\n            id: 'sa-001',\r\n            name: 'Truffle Arancini',\r\n            price: 'KES 1,200',\r\n            description: 'Crispy risotto balls with truffle oil, served with parmesan aioli',\r\n            category: 'Starters & Appetizers',\r\n            image: '/images/food/truffle-arancini.jpg',\r\n            isPromo: true,\r\n            promoText: 'Chef\\'s Favourite',\r\n            calories: '280',\r\n            serves: '1 person',\r\n            allergens: ['Gluten', 'Dairy', 'Eggs'],\r\n            preparationTime: '8-12 min',\r\n            spiceLevel: 'Mild',\r\n            tags: ['Italian', 'Truffle', 'Crispy'],\r\n            vegetarian: true,\r\n            artistic: true\r\n          },\r\n          {\r\n            id: 'sa-002',\r\n            name: 'Beetroot Carpaccio',\r\n            price: 'KES 950',\r\n            description: 'Thinly sliced beetroot with goat cheese, walnuts, and balsamic reduction',\r\n            category: 'Starters & Appetizers',\r\n            image: '/images/food/beetroot-carpaccio.jpg',\r\n            isPromo: false,\r\n            calories: '180',\r\n            serves: '1 person',\r\n            allergens: ['Dairy', 'Nuts'],\r\n            preparationTime: '5-8 min',\r\n            spiceLevel: 'None',\r\n            tags: ['Vegetarian', 'Healthy', 'Colorful'],\r\n            vegetarian: true,\r\n            artistic: true\r\n          },\r\n          {\r\n            id: 'sa-003',\r\n            name: 'Duck Confit Spring Rolls',\r\n            price: 'KES 1,400',\r\n            description: 'Crispy spring rolls filled with tender duck confit and hoisin sauce',\r\n            category: 'Starters & Appetizers',\r\n            image: '/images/food/duck-confit-spring-rolls.jpg',\r\n            isPromo: false,\r\n            calories: '320',\r\n            serves: '1 person',\r\n            allergens: ['Gluten', 'Duck'],\r\n            preparationTime: '10-15 min',\r\n            spiceLevel: 'Mild',\r\n            tags: ['Asian Fusion', 'Duck', 'Crispy'],\r\n            vegetarian: false,\r\n            artistic: true\r\n          }\r\n        ],\r\n        'Main Courses': [\r\n          {\r\n            id: 'mc-001',\r\n            name: 'Wagyu Beef Tenderloin',\r\n            price: 'KES 4,800',\r\n            description: 'Premium Wagyu beef with truffle mashed potatoes and red wine reduction',\r\n            category: 'Main Courses',\r\n            image: '/images/food/wagyu-beef-tenderloin.jpg',\r\n            isPromo: true,\r\n            promoText: 'Premium Cut',\r\n            calories: '680',\r\n            serves: '1 person',\r\n            allergens: ['Beef', 'Dairy'],\r\n            preparationTime: '20-25 min',\r\n            spiceLevel: 'Mild',\r\n            tags: ['Premium', 'Wagyu', 'Fine Dining'],\r\n            vegetarian: false,\r\n            artistic: true\r\n          },\r\n          {\r\n            id: 'mc-002',\r\n            name: 'Lobster Thermidor',\r\n            price: 'KES 3,200',\r\n            description: 'Fresh lobster in creamy thermidor sauce with saffron rice',\r\n            category: 'Main Courses',\r\n            image: '/images/food/lobster-thermidor.jpg',\r\n            isPromo: false,\r\n            calories: '520',\r\n            serves: '1 person',\r\n            allergens: ['Shellfish', 'Dairy', 'Gluten'],\r\n            preparationTime: '25-30 min',\r\n            spiceLevel: 'Mild',\r\n            tags: ['Seafood', 'French', 'Creamy'],\r\n            vegetarian: false,\r\n            artistic: true\r\n          },\r\n          {\r\n            id: 'mc-003',\r\n            name: 'Wild Mushroom Risotto',\r\n            price: 'KES 1,800',\r\n            description: 'Creamy risotto with wild mushrooms, parmesan, and truffle oil',\r\n            category: 'Main Courses',\r\n            image: '/images/food/wild-mushroom-risotto.jpg',\r\n            isPromo: false,\r\n            calories: '420',\r\n            serves: '1 person',\r\n            allergens: ['Dairy', 'Gluten'],\r\n            preparationTime: '18-22 min',\r\n            spiceLevel: 'Mild',\r\n            tags: ['Vegetarian', 'Italian', 'Creamy'],\r\n            vegetarian: true,\r\n            artistic: true\r\n          },\r\n          {\r\n            id: 'mc-004',\r\n            name: 'Pan-Seared Sea Bass',\r\n            price: 'KES 2,800',\r\n            description: 'Fresh sea bass with quinoa pilaf and citrus butter sauce',\r\n            category: 'Main Courses',\r\n            image: '/images/food/pan-seared-sea-bass.jpg',\r\n            isPromo: false,\r\n            calories: '380',\r\n            serves: '1 person',\r\n            allergens: ['Fish', 'Dairy'],\r\n            preparationTime: '20-25 min',\r\n            spiceLevel: 'Mild',\r\n            tags: ['Seafood', 'Healthy', 'Light'],\r\n            vegetarian: false,\r\n            artistic: true\r\n          }\r\n        ],\r\n        'Artistic Plates': [\r\n          {\r\n            id: 'ap-001',\r\n            name: 'Rainbow Sushi Platter',\r\n            price: 'KES 2,500',\r\n            description: 'Colorful sushi assortment with edible flowers and artistic presentation',\r\n            category: 'Artistic Plates',\r\n            image: '/images/food/rainbow-sushi-platter.jpg',\r\n            isPromo: true,\r\n            promoText: 'Instagram Famous',\r\n            calories: '480',\r\n            serves: '1 person',\r\n            allergens: ['Fish', 'Rice', 'Soy'],\r\n            preparationTime: '15-20 min',\r\n            spiceLevel: 'Mild',\r\n            tags: ['Japanese', 'Colorful', 'Artistic'],\r\n            vegetarian: false,\r\n            artistic: true\r\n          },\r\n          {\r\n            id: 'ap-002',\r\n            name: 'Garden Salad Canvas',\r\n            price: 'KES 1,600',\r\n            description: 'Edible garden salad arranged as an artistic canvas with edible flowers',\r\n            category: 'Artistic Plates',\r\n            image: '/images/food/garden-salad-canvas.jpg',\r\n            isPromo: false,\r\n            calories: '220',\r\n            serves: '1 person',\r\n            allergens: ['Nuts'],\r\n            preparationTime: '8-12 min',\r\n            spiceLevel: 'None',\r\n            tags: ['Vegetarian', 'Healthy', 'Artistic'],\r\n            vegetarian: true,\r\n            artistic: true\r\n          }\r\n        ],\r\n        'Pasta & Risotto': [\r\n          {\r\n            id: 'pr-001',\r\n            name: 'Truffle Tagliatelle',\r\n            price: 'KES 1,900',\r\n            description: 'Fresh tagliatelle with black truffle, parmesan, and butter sauce',\r\n            category: 'Pasta & Risotto',\r\n            image: '/images/food/truffle-tagliatelle.jpg',\r\n            isPromo: false,\r\n            calories: '520',\r\n            serves: '1 person',\r\n            allergens: ['Gluten', 'Dairy', 'Eggs'],\r\n            preparationTime: '15-20 min',\r\n            spiceLevel: 'Mild',\r\n            tags: ['Italian', 'Truffle', 'Creamy'],\r\n            vegetarian: true,\r\n            artistic: true\r\n          },\r\n          {\r\n            id: 'pr-002',\r\n            name: 'Seafood Linguine',\r\n            price: 'KES 2,200',\r\n            description: 'Linguine with prawns, calamari, and clams in white wine sauce',\r\n            category: 'Pasta & Risotto',\r\n            image: '/images/food/seafood-linguine.jpg',\r\n            isPromo: false,\r\n            calories: '580',\r\n            serves: '1 person',\r\n            allergens: ['Gluten', 'Shellfish', 'Fish'],\r\n            preparationTime: '18-22 min',\r\n            spiceLevel: 'Mild',\r\n            tags: ['Italian', 'Seafood', 'White Wine'],\r\n            vegetarian: false,\r\n            artistic: true\r\n          }\r\n        ],\r\n        'Desserts': [\r\n          {\r\n            id: 'ds-001',\r\n            name: 'Chocolate Art Canvas',\r\n            price: 'KES 1,200',\r\n            description: 'Chocolate dessert painted on a plate with edible gold leaf and berries',\r\n            category: 'Desserts',\r\n            image: '/images/food/chocolate-art-canvas.jpg',\r\n            isPromo: true,\r\n            promoText: 'Artistic Masterpiece',\r\n            calories: '380',\r\n            serves: '1 person',\r\n            allergens: ['Chocolate', 'Dairy', 'Eggs'],\r\n            preparationTime: '5-8 min',\r\n            spiceLevel: 'None',\r\n            tags: ['Chocolate', 'Artistic', 'Premium'],\r\n            vegetarian: true,\r\n            artistic: true\r\n          },\r\n          {\r\n            id: 'ds-002',\r\n            name: 'Lavender Panna Cotta',\r\n            price: 'KES 950',\r\n            description: 'Silky lavender-infused panna cotta with honey and edible flowers',\r\n            category: 'Desserts',\r\n            image: '/images/food/lavender-panna-cotta.jpg',\r\n            isPromo: false,\r\n            calories: '280',\r\n            serves: '1 person',\r\n            allergens: ['Dairy'],\r\n            preparationTime: '3-5 min',\r\n            spiceLevel: 'None',\r\n            tags: ['Lavender', 'Silky', 'Floral'],\r\n            vegetarian: true,\r\n            artistic: true\r\n          }\r\n        ],\r\n        'Creative Cocktails': [\r\n          {\r\n            id: 'cc-001',\r\n            name: 'Artistic Margarita',\r\n            price: 'KES 850',\r\n            description: 'Classic margarita with hand-painted glass rim and edible flower garnish',\r\n            category: 'Creative Cocktails',\r\n            image: '/images/food/artistic-margarita.jpg',\r\n            isPromo: false,\r\n            calories: '180',\r\n            serves: '1 person',\r\n            allergens: ['None'],\r\n            preparationTime: '5-8 min',\r\n            spiceLevel: 'None',\r\n            tags: ['Tequila', 'Artistic', 'Hand-Painted'],\r\n            alcoholic: true,\r\n            artistic: true\r\n          },\r\n          {\r\n            id: 'cc-002',\r\n            name: 'Rainbow Sangria',\r\n            price: 'KES 1,100',\r\n            description: 'Colorful sangria with fresh fruits and edible glitter',\r\n            category: 'Creative Cocktails',\r\n            image: '/images/food/rainbow-sangria.jpg',\r\n            isPromo: false,\r\n            calories: '220',\r\n            serves: '1 person',\r\n            allergens: ['Fruits'],\r\n            preparationTime: '8-12 min',\r\n            spiceLevel: 'None',\r\n            tags: ['Wine', 'Colorful', 'Fruity'],\r\n            alcoholic: true,\r\n            artistic: true\r\n          }\r\n        ]\r\n      },\r\n      promotions: [\r\n        {\r\n          id: 'promo-001',\r\n          title: 'Artistic Dining Experience',\r\n          description: '20% off on all artistic plates and creative cocktails',\r\n          discount: '20%',\r\n          validUntil: '2024-12-31',\r\n          code: 'ARTISTIC20',\r\n          timing: 'Available Daily'\r\n        },\r\n        {\r\n          id: 'promo-002',\r\n          title: 'Live Music Nights',\r\n          description: 'Free dessert with any main course on live music nights',\r\n          discount: 'Free Dessert',\r\n          validUntil: '2024-12-31',\r\n          code: 'LIVEMUSIC',\r\n          timing: 'Every Friday & Saturday'\r\n        },\r\n        {\r\n          id: 'promo-003',\r\n          title: 'Instagram Special',\r\n          description: '15% off when you post your meal with #ArtCafeExperience',\r\n          discount: '15%',\r\n          validUntil: '2024-12-31',\r\n          code: 'INSTAGRAM15',\r\n          requirements: 'Social media post required'\r\n        }\r\n      ],\r\n      deliveryInfo: {\r\n        available: true,\r\n        services: ['Jumia Food', 'Glovo', 'Uber Eats'],\r\n        deliveryTime: '30-45 minutes',\r\n        deliveryFee: 'KES 200',\r\n        minimumOrder: 'KES 1,500',\r\n        freeDeliveryThreshold: 'KES 3,000'\r\n      },\r\n      locations: [\r\n        'Westlands',\r\n        'CBD',\r\n        'Kilimani',\r\n        'Lavington',\r\n        'Karen',\r\n        'Mombasa Road',\r\n        'Thika Road'\r\n      ],\r\n      events: [\r\n        'Live Music Fridays',\r\n        'Art Exhibition Sundays',\r\n        'Wine Tasting Wednesdays',\r\n        'Chef\\'s Table Experience'\r\n      ],\r\n      liveMusic: {\r\n        available: true,\r\n        schedule: 'Fridays & Saturdays 7-11 PM',\r\n        genres: ['Jazz', 'Acoustic', 'Contemporary', 'World Music']\r\n      }\r\n    };\r\n  },\r\n\r\n  // Helper functions\r\n  findArtCafeId(searchData) {\r\n    // Logic to find ArtCafe's ID in search results\r\n    const artCafe = searchData.restaurants?.find(r => \r\n      r.name.toLowerCase().includes('artcafe') || r.name.toLowerCase().includes('art cafe')\r\n    );\r\n    return artCafe?.id;\r\n  },\r\n\r\n  transformDirectMenuData(data) {\r\n    // Transform direct API data to our format\r\n    return {\r\n      restaurant: ARTCAFE_CONFIG,\r\n      categories: data.categories || {},\r\n      promotions: data.promotions || [],\r\n      deliveryInfo: data.delivery || {},\r\n      locations: data.locations || [],\r\n      events: data.events || [],\r\n      liveMusic: data.liveMusic || {}\r\n    };\r\n  },\r\n\r\n  transformJumiaMenuData(data) {\r\n    // Transform Jumia Food data to our format\r\n    return {\r\n      restaurant: ARTCAFE_CONFIG,\r\n      categories: this.groupByCategory(data.menu || []),\r\n      promotions: data.promotions || [],\r\n      deliveryInfo: {\r\n        available: true,\r\n        services: ['Jumia Food'],\r\n        deliveryTime: data.deliveryTime || '30-45 minutes',\r\n        deliveryFee: data.deliveryFee || 'KES 200',\r\n        minimumOrder: data.minimumOrder || 'KES 1,500'\r\n      },\r\n      locations: data.locations || [],\r\n      events: data.events || [],\r\n      liveMusic: data.liveMusic || {}\r\n    };\r\n  },\r\n\r\n  transformGlovoMenuData(data) {\r\n    // Transform Glovo data to our format\r\n    return {\r\n      restaurant: ARTCAFE_CONFIG,\r\n      categories: this.groupByCategory(data.menu || []),\r\n      promotions: data.promotions || [],\r\n      deliveryInfo: {\r\n        available: true,\r\n        services: ['Glovo'],\r\n        deliveryTime: data.deliveryTime || '30-45 minutes',\r\n        deliveryFee: data.deliveryFee || 'KES 200',\r\n        minimumOrder: data.minimumOrder || 'KES 1,500'\r\n      },\r\n      locations: data.locations || [],\r\n      events: data.events || [],\r\n      liveMusic: data.liveMusic || {}\r\n    };\r\n  },\r\n\r\n  groupByCategory(menuItems) {\r\n    // Group menu items by category\r\n    const categories = {};\r\n    menuItems.forEach(item => {\r\n      if (!categories[item.category]) {\r\n        categories[item.category] = [];\r\n      }\r\n      categories[item.category].push(item);\r\n    });\r\n    return categories;\r\n  },\r\n\r\n  // Get restaurant information\r\n  getRestaurantInfo() {\r\n    return ARTCAFE_CONFIG;\r\n  },\r\n\r\n  // Get current promotions\r\n  async getPromotions() {\r\n    try {\r\n      const response = await fetch(`${ARTCAFE_DIRECT_API.baseURL}${ARTCAFE_DIRECT_API.endpoints.promotions}`);\r\n      if (response.ok) {\r\n        return await response.json();\r\n      }\r\n    } catch (error) {\r\n      console.log('Using mock promotions');\r\n    }\r\n    \r\n    return this.getEnhancedMockMenu().promotions;\r\n  },\r\n\r\n  // Check delivery availability\r\n  async checkDeliveryAvailability() {\r\n    try {\r\n      const response = await fetch(`${ARTCAFE_DIRECT_API.baseURL}${ARTCAFE_DIRECT_API.endpoints.delivery}`);\r\n      if (response.ok) {\r\n        return await response.json();\r\n      }\r\n    } catch (error) {\r\n      console.log('Using mock delivery info');\r\n    }\r\n    \r\n    return this.getEnhancedMockMenu().deliveryInfo;\r\n  },\r\n\r\n  // Get events\r\n  async getEvents() {\r\n    try {\r\n      const response = await fetch(`${ARTCAFE_DIRECT_API.baseURL}${ARTCAFE_DIRECT_API.endpoints.events}`);\r\n      if (response.ok) {\r\n        return await response.json();\r\n      }\r\n    } catch (error) {\r\n      console.log('Using mock events');\r\n    }\r\n    \r\n    return this.getEnhancedMockMenu().events;\r\n  },\r\n\r\n  // Get live music schedule\r\n  async getLiveMusic() {\r\n    try {\r\n      const response = await fetch(`${ARTCAFE_DIRECT_API.baseURL}${ARTCAFE_DIRECT_API.endpoints.liveMusic}`);\r\n      if (response.ok) {\r\n        return await response.json();\r\n      }\r\n    } catch (error) {\r\n      console.log('Using mock live music info');\r\n    }\r\n    \r\n    return this.getEnhancedMockMenu().liveMusic;\r\n  },\r\n\r\n  // Get all locations\r\n  async getLocations() {\r\n    try {\r\n      const response = await fetch(`${ARTCAFE_DIRECT_API.baseURL}${ARTCAFE_DIRECT_API.endpoints.locations}`);\r\n      if (response.ok) {\r\n        return await response.json();\r\n      }\r\n    } catch (error) {\r\n      console.log('Using mock locations');\r\n    }\r\n    \r\n    return this.getEnhancedMockMenu().locations;\r\n  }\r\n};\r\n\r\nexport default artCafeAPI;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}