{"ast":null,"code":"// Carnivore Restaurant API Integration Service\n// Using TheMealDB API for real beef dishes\n\n// Base configuration\nconst CARNIVORE_CONFIG = {\n  name: 'Carnivore Restaurant',\n  location: 'Langata Road, Nairobi',\n  phone: '+254 20 600 5923',\n  website: 'https://www.tamarind.co.ke/carnivore',\n  coordinates: {\n    lat: -1.3182,\n    lng: 36.8172\n  },\n  description: 'The ultimate meat lover\\'s paradise serving exotic meats from around the world',\n  founded: '1980',\n  branches: '1',\n  specialties: ['Exotic Meats', 'BBQ', 'Grilled Meats', 'African Cuisine'],\n  rating: 4.6,\n  deliveryTime: '30-45 min'\n};\n\n// TheMealDB API for real beef dishes\nconst THEMEALDB_API = {\n  baseURL: 'https://www.themealdb.com/api/json/v1/1',\n  endpoints: {\n    beef: '/filter.php?c=Beef'\n  }\n};\n\n// Main API functions\nexport const carnivoreAPI = {\n  // Get full menu with real-time data\n  async getFullMenu() {\n    try {\n      // Try TheMealDB API first for real beef data\n      const realBeefMenu = await this.getRealBeefMenu();\n      if (realBeefMenu) return realBeefMenu;\n\n      // Fallback to enhanced mock data\n      console.log('⚠️ Using enhanced mock data as fallback');\n      return this.getEnhancedMockMenu();\n    } catch (error) {\n      console.error('Error fetching Carnivore menu:', error);\n      return this.getEnhancedMockMenu();\n    }\n  },\n  // Get real beef data from TheMealDB API\n  async getRealBeefMenu() {\n    try {\n      console.log('🥩 Fetching real beef data from TheMealDB API...');\n      const response = await fetch(`${THEMEALDB_API.baseURL}${THEMEALDB_API.endpoints.beef}`);\n      if (!response.ok) {\n        throw new Error(`TheMealDB API request failed: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('✅ TheMealDB API response:', data);\n      if (data.meals && data.meals.length > 0) {\n        const beefDishes = data.meals.map((meal, index) => ({\n          id: meal.idMeal || `beef-${index}`,\n          name: meal.strMeal || 'Beef Dish',\n          description: this.generateDescription(meal.strMeal),\n          price: this.generatePrice(1200, 2500),\n          image: meal.strMealThumb || '/images/food/placeholder-food.jpg',\n          category: 'Beef',\n          calories: this.generateCalories(400, 900),\n          serves: '2-4 people',\n          preparationTime: '45-90 min',\n          isPromo: Math.random() > 0.7,\n          promoText: 'Chef\\'s Special!',\n          signature: Math.random() > 0.8,\n          vegetarian: false,\n          allergens: ['Gluten', 'Dairy', 'Eggs', 'Soy'],\n          tags: this.generateTags(meal.strMeal),\n          size: this.generateSize(),\n          crust: null,\n          spiceLevel: this.generateSpiceLevel(meal.strMeal),\n          originalPrice: null,\n          meatType: 'Beef',\n          cookingMethod: this.generateCookingMethod(meal.strMeal),\n          origin: this.detectOrigin(meal.strMeal)\n        }));\n        console.log('🥩 Transformed beef dishes:', beefDishes);\n        return {\n          restaurant: CARNIVORE_CONFIG,\n          menu: beefDishes,\n          categories: {\n            'Beef': beefDishes\n          },\n          customization: {\n            available: true,\n            options: {\n              doneness: ['Rare', 'Medium Rare', 'Medium', 'Medium Well', 'Well Done'],\n              cuts: ['Tenderloin', 'Ribeye', 'Sirloin', 'T-Bone', 'Porterhouse', 'Flank'],\n              sauces: ['Peppercorn', 'Mushroom', 'Red Wine', 'Béarnaise', 'Blue Cheese', 'Garlic Butter'],\n              sides: ['Roasted Potatoes', 'Grilled Vegetables', 'Mashed Potatoes', 'Rice', 'Salad'],\n              spices: ['Black Pepper', 'Garlic', 'Rosemary', 'Thyme', 'Oregano', 'Paprika']\n            }\n          },\n          deals: ['All-You-Can-Eat Beef Night on Fridays', 'Wine Pairing Special: 20% off selected wines', 'Group Dining: 4+ people get 15% off total bill'],\n          rewards: {\n            available: true,\n            program: 'Carnivore Club',\n            benefits: ['Earn points on every meat purchase', 'Free appetizer after 5 visits', 'Birthday month: Complimentary dessert', 'Exclusive access to rare meat cuts']\n          },\n          locations: ['Langata Road, Nairobi', 'Carnivore Gardens', 'Private Dining Rooms Available']\n        };\n      }\n      console.log('❌ No valid beef data found in TheMealDB response');\n      return null;\n    } catch (error) {\n      console.error('❌ Error fetching real beef data:', error);\n      return null;\n    }\n  },\n  // Generate description based on meal name\n  generateDescription(mealName) {\n    const descriptions = [`Premium ${mealName} - expertly prepared with the finest beef cuts`, `Gourmet ${mealName} - a carnivore's delight with rich flavors`, `Chef's special ${mealName} - slow-cooked to perfection`, `Traditional ${mealName} - authentic recipe with premium ingredients`, `Signature ${mealName} - our most popular beef dish`];\n    return descriptions[Math.floor(Math.random() * descriptions.length)];\n  },\n  // Generate random price between min and max\n  generatePrice(min, max) {\n    const price = Math.floor(Math.random() * (max - min + 1)) + min;\n    return `KES ${price.toLocaleString()}`;\n  },\n  // Generate random calories between min and max\n  generateCalories(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  },\n  // Generate tags based on beef dish name\n  generateTags(mealName) {\n    const tags = ['Premium Beef', 'Chef Special', 'Gourmet'];\n    if (mealName.toLowerCase().includes('pie')) tags.push('Pie', 'Comfort Food');\n    if (mealName.toLowerCase().includes('curry')) tags.push('Curry', 'Spicy');\n    if (mealName.toLowerCase().includes('stew')) tags.push('Stew', 'Slow Cooked');\n    if (mealName.toLowerCase().includes('grilled')) tags.push('Grilled', 'BBQ');\n    if (mealName.toLowerCase().includes('roast')) tags.push('Roasted', 'Traditional');\n    if (mealName.toLowerCase().includes('wellington')) tags.push('Wellington', 'Luxury');\n    if (mealName.toLowerCase().includes('stroganoff')) tags.push('Stroganoff', 'Creamy');\n    if (mealName.toLowerCase().includes('bolognese')) tags.push('Bolognese', 'Italian');\n    return tags.slice(0, 6); // Return max 6 tags\n  },\n  // Generate random size\n  generateSize() {\n    const sizes = ['Regular', 'Large', 'Family Size'];\n    return sizes[Math.floor(Math.random() * sizes.length)];\n  },\n  // Generate spice level based on meal name\n  generateSpiceLevel(mealName) {\n    const spicyKeywords = ['curry', 'chilli', 'spicy', 'hot', 'pepper'];\n    if (spicyKeywords.some(keyword => mealName.toLowerCase().includes(keyword))) {\n      return 'Medium-Hot';\n    }\n    return 'Mild';\n  },\n  // Generate cooking method based on meal name\n  generateCookingMethod(mealName) {\n    if (mealName.toLowerCase().includes('grilled')) return 'Grilled';\n    if (mealName.toLowerCase().includes('roast')) return 'Roasted';\n    if (mealName.toLowerCase().includes('stew')) return 'Slow Cooked';\n    if (mealName.toLowerCase().includes('pie')) return 'Baked';\n    if (mealName.toLowerCase().includes('curry')) return 'Curried';\n    if (mealName.toLowerCase().includes('stroganoff')) return 'Braised';\n    return 'Chef\\'s Choice';\n  },\n  // Detect origin/cuisine based on meal name\n  detectOrigin(mealName) {\n    if (mealName.toLowerCase().includes('bolognese')) return 'Italian';\n    if (mealName.toLowerCase().includes('wellington')) return 'British';\n    if (mealName.toLowerCase().includes('stroganoff')) return 'Russian';\n    if (mealName.toLowerCase().includes('curry')) return 'Asian';\n    if (mealName.toLowerCase().includes('pie')) return 'British';\n    if (mealName.toLowerCase().includes('stew')) return 'Traditional';\n    return 'International';\n  },\n  // Enhanced mock menu with realistic data\n  getEnhancedMockMenu() {\n    return {\n      restaurant: CARNIVORE_CONFIG,\n      categories: {\n        'Beast of a Feast': [{\n          id: 'bf-001',\n          name: 'Nyama Choma Platter',\n          price: 'KES 3,500',\n          originalPrice: 'KES 4,200',\n          description: 'Mixed grilled meats: beef, lamb, chicken, pork with unlimited sides',\n          category: 'Beast of a Feast',\n          image: '/images/food/nyama-choma.jpg',\n          isPromo: true,\n          promoText: 'Most Popular! -20% OFF',\n          calories: '1200-1500',\n          serves: '2-3 people',\n          allergens: ['None'],\n          preparationTime: '15-20 min',\n          spiceLevel: 'Medium',\n          tags: ['Popular', 'Best Seller', 'Shareable']\n        }, {\n          id: 'bf-002',\n          name: 'Carnivore Special',\n          price: 'KES 4,200',\n          description: 'Premium selection: ostrich, crocodile, beef, lamb with unlimited sides',\n          category: 'Beast of a Feast',\n          image: '/images/food/carnivore-special.jpg',\n          isPromo: true,\n          promoText: 'Chef\\'s Choice',\n          calories: '1500-2000',\n          serves: '3-4 people',\n          allergens: ['None'],\n          preparationTime: '20-25 min',\n          spiceLevel: 'Medium',\n          tags: ['Premium', 'Exotic', 'Chef Special']\n        }],\n        'Grilled Meats': [{\n          id: 'gm-001',\n          name: 'Beef Ribs',\n          price: 'KES 2,800',\n          description: 'Slow-cooked beef ribs with BBQ sauce',\n          category: 'Grilled Meats',\n          image: '/images/food/beef-ribs.jpg',\n          calories: '800',\n          serves: '1 person',\n          allergens: ['None'],\n          preparationTime: '10-15 min',\n          spiceLevel: 'Mild',\n          tags: ['BBQ', 'Slow Cooked', 'Tender']\n        }, {\n          id: 'gm-002',\n          name: 'Lamb Chops',\n          price: 'KES 2,500',\n          description: 'Grilled lamb chops with rosemary',\n          category: 'Grilled Meats',\n          image: '/images/food/lamb-chops.jpg',\n          calories: '650',\n          serves: '1 person',\n          allergens: ['None'],\n          preparationTime: '12-18 min',\n          spiceLevel: 'Mild',\n          tags: ['Herb Crusted', 'Premium', 'Tender']\n        }],\n        'Game Meats': [{\n          id: 'gm-003',\n          name: 'Ostrich Fillet',\n          price: 'KES 3,200',\n          description: 'Lean ostrich meat grilled to perfection',\n          category: 'Game Meats',\n          image: '/images/food/ostrich-fillet.jpg',\n          calories: '400',\n          serves: '1 person',\n          allergens: ['None'],\n          preparationTime: '8-12 min',\n          spiceLevel: 'Mild',\n          tags: ['Exotic', 'Lean', 'Healthy']\n        }]\n      },\n      promotions: [{\n        id: 'promo-001',\n        title: 'Beast of a Feast Special',\n        description: 'Get 20% off on all Beast of a Feast platters',\n        discount: '20%',\n        validUntil: '2024-12-31',\n        code: 'BEAST20'\n      }, {\n        id: 'promo-002',\n        title: 'Weekday Lunch Special',\n        description: '50% off on selected grilled meats (Mon-Fri, 12-3 PM)',\n        discount: '50%',\n        validUntil: '2024-12-31',\n        code: 'LUNCH50'\n      }],\n      deliveryInfo: {\n        available: true,\n        services: ['Jumia Food', 'Glovo', 'Uber Eats'],\n        deliveryTime: '30-45 minutes',\n        deliveryFee: 'KES 200',\n        minimumOrder: 'KES 1,500'\n      }\n    };\n  },\n  // Helper functions\n  findCarnivoreId(searchData) {\n    var _searchData$restauran;\n    // Logic to find Carnivore's ID in search results\n    const carnivore = (_searchData$restauran = searchData.restaurants) === null || _searchData$restauran === void 0 ? void 0 : _searchData$restauran.find(r => r.name.toLowerCase().includes('carnivore'));\n    return carnivore === null || carnivore === void 0 ? void 0 : carnivore.id;\n  },\n  // Get restaurant information\n  getRestaurantInfo() {\n    return CARNIVORE_CONFIG;\n  },\n  // Get current promotions\n  async getPromotions() {\n    // Return mock promotions directly since we're using Spoonacular for main menu\n    return ['All-you-can-eat meat buffet every Friday', 'Student discount: 20% off with valid ID', 'Happy Hour: 2-for-1 on drinks (5-7 PM)', 'Family package: 4 people for the price of 3'];\n  },\n  // Check delivery availability\n  async checkDeliveryAvailability() {\n    // Return mock delivery info directly\n    return {\n      available: true,\n      deliveryTime: '30-45 min',\n      minimumOrder: 'KES 500',\n      deliveryFee: 'KES 100',\n      freeDeliveryThreshold: 'KES 2000'\n    };\n  },\n  // Mock functions for new features (if not implemented in Spoonacular)\n  getDeals() {\n    return [{\n      id: 'deal-001',\n      title: 'Daily Special',\n      description: 'Get a free side with any main dish',\n      validUntil: '2024-12-31'\n    }, {\n      id: 'deal-002',\n      title: 'Lunch Combo',\n      description: 'Half price on all lunch specials',\n      validUntil: '2024-12-31'\n    }];\n  },\n  getRewards() {\n    return [{\n      id: 'reward-001',\n      title: 'Loyalty Card',\n      description: 'Earn points for every meal',\n      validUntil: '2024-12-31'\n    }, {\n      id: 'reward-002',\n      title: 'Free Dessert',\n      description: 'Get a free dessert with your 10th meal',\n      validUntil: '2024-12-31'\n    }];\n  },\n  getCustomization() {\n    return {\n      meatTypes: ['Beef'],\n      spiceLevels: ['Mild', 'Medium', 'Hot', 'Extra Hot'],\n      cookingStyles: ['Grilled', 'BBQ', 'Roasted', 'Smoked', 'Braised', 'Slow Cooked'],\n      sizes: ['Small', 'Medium', 'Large', 'Family Size']\n    };\n  },\n  getLocations() {\n    return [{\n      id: 'loc-001',\n      name: 'Main Branch',\n      address: 'Langata Road, Nairobi',\n      phone: '+254 20 600 5923'\n    }, {\n      id: 'loc-002',\n      name: 'Westlands Branch',\n      address: 'Westlands, Nairobi',\n      phone: '+254 20 600 5924'\n    }];\n  },\n  getMockSidesAndBeverages() {\n    const mockSides = [{\n      id: 'side-001',\n      name: 'Ugali',\n      price: 'KES 200',\n      description: 'Traditional Kenyan maize meal',\n      category: 'Sides',\n      image: '/images/food/ugali.jpg',\n      isPromo: false,\n      calories: '150',\n      serves: '1 person',\n      allergens: ['Gluten'],\n      preparationTime: '5 min',\n      spiceLevel: 'None',\n      tags: ['Traditional', 'Local'],\n      vegetarian: true,\n      signature: false\n    }, {\n      id: 'side-002',\n      name: 'Sukuma Wiki',\n      price: 'KES 150',\n      description: 'Collard greens with tomatoes and onions',\n      category: 'Sides',\n      image: '/images/food/sukuma-wiki.jpg',\n      isPromo: false,\n      calories: '80',\n      serves: '1 person',\n      allergens: ['None'],\n      preparationTime: '8 min',\n      spiceLevel: 'Mild',\n      tags: ['Vegetables', 'Healthy'],\n      vegetarian: true,\n      signature: false\n    }];\n    const mockBeverages = [{\n      id: 'bev-001',\n      name: 'Tusker Beer',\n      price: 'KES 300',\n      description: 'Local Kenyan beer',\n      category: 'Beverages',\n      image: '/images/food/tusker-beer.jpg',\n      isPromo: false,\n      calories: '150',\n      serves: '1 person',\n      allergens: ['Gluten'],\n      preparationTime: '2 min',\n      spiceLevel: 'None',\n      tags: ['Local', 'Beer'],\n      vegetarian: true,\n      signature: false\n    }, {\n      id: 'bev-002',\n      name: 'Fresh Fruit Juice',\n      price: 'KES 250',\n      description: 'Seasonal fruit juice',\n      category: 'Beverages',\n      image: '/images/food/fruit-juice.jpg',\n      isPromo: false,\n      calories: '120',\n      serves: '1 person',\n      allergens: ['None'],\n      preparationTime: '3 min',\n      spiceLevel: 'None',\n      tags: ['Fresh', 'Healthy'],\n      vegetarian: true,\n      signature: false\n    }];\n    return [...mockSides, ...mockBeverages];\n  }\n};\nexport default carnivoreAPI;","map":{"version":3,"names":["CARNIVORE_CONFIG","name","location","phone","website","coordinates","lat","lng","description","founded","branches","specialties","rating","deliveryTime","THEMEALDB_API","baseURL","endpoints","beef","carnivoreAPI","getFullMenu","realBeefMenu","getRealBeefMenu","console","log","getEnhancedMockMenu","error","response","fetch","ok","Error","status","data","json","meals","length","beefDishes","map","meal","index","id","idMeal","strMeal","generateDescription","price","generatePrice","image","strMealThumb","category","calories","generateCalories","serves","preparationTime","isPromo","Math","random","promoText","signature","vegetarian","allergens","tags","generateTags","size","generateSize","crust","spiceLevel","generateSpiceLevel","originalPrice","meatType","cookingMethod","generateCookingMethod","origin","detectOrigin","restaurant","menu","categories","customization","available","options","doneness","cuts","sauces","sides","spices","deals","rewards","program","benefits","locations","mealName","descriptions","floor","min","max","toLocaleString","toLowerCase","includes","push","slice","sizes","spicyKeywords","some","keyword","promotions","title","discount","validUntil","code","deliveryInfo","services","deliveryFee","minimumOrder","findCarnivoreId","searchData","_searchData$restauran","carnivore","restaurants","find","r","getRestaurantInfo","getPromotions","checkDeliveryAvailability","freeDeliveryThreshold","getDeals","getRewards","getCustomization","meatTypes","spiceLevels","cookingStyles","getLocations","address","getMockSidesAndBeverages","mockSides","mockBeverages"],"sources":["C:/Projects/gawa/frontend/src/api/carnivoreAPI.js"],"sourcesContent":["// Carnivore Restaurant API Integration Service\r\n// Using TheMealDB API for real beef dishes\r\n\r\n// Base configuration\r\nconst CARNIVORE_CONFIG = {\r\n  name: 'Carnivore Restaurant',\r\n  location: 'Langata Road, Nairobi',\r\n  phone: '+254 20 600 5923',\r\n  website: 'https://www.tamarind.co.ke/carnivore',\r\n  coordinates: { lat: -1.3182, lng: 36.8172 },\r\n  description: 'The ultimate meat lover\\'s paradise serving exotic meats from around the world',\r\n  founded: '1980',\r\n  branches: '1',\r\n  specialties: ['Exotic Meats', 'BBQ', 'Grilled Meats', 'African Cuisine'],\r\n  rating: 4.6,\r\n  deliveryTime: '30-45 min'\r\n};\r\n\r\n// TheMealDB API for real beef dishes\r\nconst THEMEALDB_API = {\r\n  baseURL: 'https://www.themealdb.com/api/json/v1/1',\r\n  endpoints: {\r\n    beef: '/filter.php?c=Beef'\r\n  }\r\n};\r\n\r\n// Main API functions\r\nexport const carnivoreAPI = {\r\n  // Get full menu with real-time data\r\n  async getFullMenu() {\r\n    try {\r\n      // Try TheMealDB API first for real beef data\r\n      const realBeefMenu = await this.getRealBeefMenu();\r\n      if (realBeefMenu) return realBeefMenu;\r\n\r\n      // Fallback to enhanced mock data\r\n      console.log('⚠️ Using enhanced mock data as fallback');\r\n      return this.getEnhancedMockMenu();\r\n    } catch (error) {\r\n      console.error('Error fetching Carnivore menu:', error);\r\n      return this.getEnhancedMockMenu();\r\n    }\r\n  },\r\n\r\n  // Get real beef data from TheMealDB API\r\n  async getRealBeefMenu() {\r\n    try {\r\n      console.log('🥩 Fetching real beef data from TheMealDB API...');\r\n      \r\n      const response = await fetch(`${THEMEALDB_API.baseURL}${THEMEALDB_API.endpoints.beef}`);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`TheMealDB API request failed: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log('✅ TheMealDB API response:', data);\r\n      \r\n      if (data.meals && data.meals.length > 0) {\r\n        const beefDishes = data.meals.map((meal, index) => ({\r\n          id: meal.idMeal || `beef-${index}`,\r\n          name: meal.strMeal || 'Beef Dish',\r\n          description: this.generateDescription(meal.strMeal),\r\n          price: this.generatePrice(1200, 2500),\r\n          image: meal.strMealThumb || '/images/food/placeholder-food.jpg',\r\n          category: 'Beef',\r\n          calories: this.generateCalories(400, 900),\r\n          serves: '2-4 people',\r\n          preparationTime: '45-90 min',\r\n          isPromo: Math.random() > 0.7,\r\n          promoText: 'Chef\\'s Special!',\r\n          signature: Math.random() > 0.8,\r\n          vegetarian: false,\r\n          allergens: ['Gluten', 'Dairy', 'Eggs', 'Soy'],\r\n          tags: this.generateTags(meal.strMeal),\r\n          size: this.generateSize(),\r\n          crust: null,\r\n          spiceLevel: this.generateSpiceLevel(meal.strMeal),\r\n          originalPrice: null,\r\n          meatType: 'Beef',\r\n          cookingMethod: this.generateCookingMethod(meal.strMeal),\r\n          origin: this.detectOrigin(meal.strMeal)\r\n        }));\r\n        \r\n        console.log('🥩 Transformed beef dishes:', beefDishes);\r\n        \r\n        return {\r\n          restaurant: CARNIVORE_CONFIG,\r\n          menu: beefDishes,\r\n          categories: {\r\n            'Beef': beefDishes\r\n          },\r\n          customization: {\r\n            available: true,\r\n            options: {\r\n              doneness: ['Rare', 'Medium Rare', 'Medium', 'Medium Well', 'Well Done'],\r\n              cuts: ['Tenderloin', 'Ribeye', 'Sirloin', 'T-Bone', 'Porterhouse', 'Flank'],\r\n              sauces: ['Peppercorn', 'Mushroom', 'Red Wine', 'Béarnaise', 'Blue Cheese', 'Garlic Butter'],\r\n              sides: ['Roasted Potatoes', 'Grilled Vegetables', 'Mashed Potatoes', 'Rice', 'Salad'],\r\n              spices: ['Black Pepper', 'Garlic', 'Rosemary', 'Thyme', 'Oregano', 'Paprika']\r\n            }\r\n          },\r\n          deals: [\r\n            'All-You-Can-Eat Beef Night on Fridays',\r\n            'Wine Pairing Special: 20% off selected wines',\r\n            'Group Dining: 4+ people get 15% off total bill'\r\n          ],\r\n          rewards: {\r\n            available: true,\r\n            program: 'Carnivore Club',\r\n            benefits: [\r\n              'Earn points on every meat purchase',\r\n              'Free appetizer after 5 visits',\r\n              'Birthday month: Complimentary dessert',\r\n              'Exclusive access to rare meat cuts'\r\n            ]\r\n          },\r\n          locations: [\r\n            'Langata Road, Nairobi',\r\n            'Carnivore Gardens',\r\n            'Private Dining Rooms Available'\r\n          ]\r\n        };\r\n      }\r\n      \r\n      console.log('❌ No valid beef data found in TheMealDB response');\r\n      return null;\r\n      \r\n    } catch (error) {\r\n      console.error('❌ Error fetching real beef data:', error);\r\n      return null;\r\n    }\r\n  },\r\n\r\n  // Generate description based on meal name\r\n  generateDescription(mealName) {\r\n    const descriptions = [\r\n      `Premium ${mealName} - expertly prepared with the finest beef cuts`,\r\n      `Gourmet ${mealName} - a carnivore's delight with rich flavors`,\r\n      `Chef's special ${mealName} - slow-cooked to perfection`,\r\n      `Traditional ${mealName} - authentic recipe with premium ingredients`,\r\n      `Signature ${mealName} - our most popular beef dish`\r\n    ];\r\n    return descriptions[Math.floor(Math.random() * descriptions.length)];\r\n  },\r\n\r\n  // Generate random price between min and max\r\n  generatePrice(min, max) {\r\n    const price = Math.floor(Math.random() * (max - min + 1)) + min;\r\n    return `KES ${price.toLocaleString()}`;\r\n  },\r\n\r\n  // Generate random calories between min and max\r\n  generateCalories(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  },\r\n\r\n  // Generate tags based on beef dish name\r\n  generateTags(mealName) {\r\n    const tags = ['Premium Beef', 'Chef Special', 'Gourmet'];\r\n    \r\n    if (mealName.toLowerCase().includes('pie')) tags.push('Pie', 'Comfort Food');\r\n    if (mealName.toLowerCase().includes('curry')) tags.push('Curry', 'Spicy');\r\n    if (mealName.toLowerCase().includes('stew')) tags.push('Stew', 'Slow Cooked');\r\n    if (mealName.toLowerCase().includes('grilled')) tags.push('Grilled', 'BBQ');\r\n    if (mealName.toLowerCase().includes('roast')) tags.push('Roasted', 'Traditional');\r\n    if (mealName.toLowerCase().includes('wellington')) tags.push('Wellington', 'Luxury');\r\n    if (mealName.toLowerCase().includes('stroganoff')) tags.push('Stroganoff', 'Creamy');\r\n    if (mealName.toLowerCase().includes('bolognese')) tags.push('Bolognese', 'Italian');\r\n    \r\n    return tags.slice(0, 6); // Return max 6 tags\r\n  },\r\n\r\n  // Generate random size\r\n  generateSize() {\r\n    const sizes = ['Regular', 'Large', 'Family Size'];\r\n    return sizes[Math.floor(Math.random() * sizes.length)];\r\n  },\r\n\r\n  // Generate spice level based on meal name\r\n  generateSpiceLevel(mealName) {\r\n    const spicyKeywords = ['curry', 'chilli', 'spicy', 'hot', 'pepper'];\r\n    if (spicyKeywords.some(keyword => mealName.toLowerCase().includes(keyword))) {\r\n      return 'Medium-Hot';\r\n    }\r\n    return 'Mild';\r\n  },\r\n\r\n  // Generate cooking method based on meal name\r\n  generateCookingMethod(mealName) {\r\n    if (mealName.toLowerCase().includes('grilled')) return 'Grilled';\r\n    if (mealName.toLowerCase().includes('roast')) return 'Roasted';\r\n    if (mealName.toLowerCase().includes('stew')) return 'Slow Cooked';\r\n    if (mealName.toLowerCase().includes('pie')) return 'Baked';\r\n    if (mealName.toLowerCase().includes('curry')) return 'Curried';\r\n    if (mealName.toLowerCase().includes('stroganoff')) return 'Braised';\r\n    return 'Chef\\'s Choice';\r\n  },\r\n\r\n  // Detect origin/cuisine based on meal name\r\n  detectOrigin(mealName) {\r\n    if (mealName.toLowerCase().includes('bolognese')) return 'Italian';\r\n    if (mealName.toLowerCase().includes('wellington')) return 'British';\r\n    if (mealName.toLowerCase().includes('stroganoff')) return 'Russian';\r\n    if (mealName.toLowerCase().includes('curry')) return 'Asian';\r\n    if (mealName.toLowerCase().includes('pie')) return 'British';\r\n    if (mealName.toLowerCase().includes('stew')) return 'Traditional';\r\n    return 'International';\r\n  },\r\n\r\n  // Enhanced mock menu with realistic data\r\n  getEnhancedMockMenu() {\r\n    return {\r\n      restaurant: CARNIVORE_CONFIG,\r\n      categories: {\r\n        'Beast of a Feast': [\r\n          {\r\n            id: 'bf-001',\r\n            name: 'Nyama Choma Platter',\r\n            price: 'KES 3,500',\r\n            originalPrice: 'KES 4,200',\r\n            description: 'Mixed grilled meats: beef, lamb, chicken, pork with unlimited sides',\r\n            category: 'Beast of a Feast',\r\n            image: '/images/food/nyama-choma.jpg',\r\n            isPromo: true,\r\n            promoText: 'Most Popular! -20% OFF',\r\n            calories: '1200-1500',\r\n            serves: '2-3 people',\r\n            allergens: ['None'],\r\n            preparationTime: '15-20 min',\r\n            spiceLevel: 'Medium',\r\n            tags: ['Popular', 'Best Seller', 'Shareable']\r\n          },\r\n          {\r\n            id: 'bf-002',\r\n            name: 'Carnivore Special',\r\n            price: 'KES 4,200',\r\n            description: 'Premium selection: ostrich, crocodile, beef, lamb with unlimited sides',\r\n            category: 'Beast of a Feast',\r\n            image: '/images/food/carnivore-special.jpg',\r\n            isPromo: true,\r\n            promoText: 'Chef\\'s Choice',\r\n            calories: '1500-2000',\r\n            serves: '3-4 people',\r\n            allergens: ['None'],\r\n            preparationTime: '20-25 min',\r\n            spiceLevel: 'Medium',\r\n            tags: ['Premium', 'Exotic', 'Chef Special']\r\n          }\r\n        ],\r\n        'Grilled Meats': [\r\n          {\r\n            id: 'gm-001',\r\n            name: 'Beef Ribs',\r\n            price: 'KES 2,800',\r\n            description: 'Slow-cooked beef ribs with BBQ sauce',\r\n            category: 'Grilled Meats',\r\n            image: '/images/food/beef-ribs.jpg',\r\n            calories: '800',\r\n            serves: '1 person',\r\n            allergens: ['None'],\r\n            preparationTime: '10-15 min',\r\n            spiceLevel: 'Mild',\r\n            tags: ['BBQ', 'Slow Cooked', 'Tender']\r\n          },\r\n          {\r\n            id: 'gm-002',\r\n            name: 'Lamb Chops',\r\n            price: 'KES 2,500',\r\n            description: 'Grilled lamb chops with rosemary',\r\n            category: 'Grilled Meats',\r\n            image: '/images/food/lamb-chops.jpg',\r\n            calories: '650',\r\n            serves: '1 person',\r\n            allergens: ['None'],\r\n            preparationTime: '12-18 min',\r\n            spiceLevel: 'Mild',\r\n            tags: ['Herb Crusted', 'Premium', 'Tender']\r\n          }\r\n        ],\r\n        'Game Meats': [\r\n          {\r\n            id: 'gm-003',\r\n            name: 'Ostrich Fillet',\r\n            price: 'KES 3,200',\r\n            description: 'Lean ostrich meat grilled to perfection',\r\n            category: 'Game Meats',\r\n            image: '/images/food/ostrich-fillet.jpg',\r\n            calories: '400',\r\n            serves: '1 person',\r\n            allergens: ['None'],\r\n            preparationTime: '8-12 min',\r\n            spiceLevel: 'Mild',\r\n            tags: ['Exotic', 'Lean', 'Healthy']\r\n          }\r\n        ]\r\n      },\r\n      promotions: [\r\n        {\r\n          id: 'promo-001',\r\n          title: 'Beast of a Feast Special',\r\n          description: 'Get 20% off on all Beast of a Feast platters',\r\n          discount: '20%',\r\n          validUntil: '2024-12-31',\r\n          code: 'BEAST20'\r\n        },\r\n        {\r\n          id: 'promo-002',\r\n          title: 'Weekday Lunch Special',\r\n          description: '50% off on selected grilled meats (Mon-Fri, 12-3 PM)',\r\n          discount: '50%',\r\n          validUntil: '2024-12-31',\r\n          code: 'LUNCH50'\r\n        }\r\n      ],\r\n      deliveryInfo: {\r\n        available: true,\r\n        services: ['Jumia Food', 'Glovo', 'Uber Eats'],\r\n        deliveryTime: '30-45 minutes',\r\n        deliveryFee: 'KES 200',\r\n        minimumOrder: 'KES 1,500'\r\n      }\r\n    };\r\n  },\r\n\r\n  // Helper functions\r\n  findCarnivoreId(searchData) {\r\n    // Logic to find Carnivore's ID in search results\r\n    const carnivore = searchData.restaurants?.find(r => \r\n      r.name.toLowerCase().includes('carnivore')\r\n    );\r\n    return carnivore?.id;\r\n  },\r\n\r\n  // Get restaurant information\r\n  getRestaurantInfo() {\r\n    return CARNIVORE_CONFIG;\r\n  },\r\n\r\n  // Get current promotions\r\n  async getPromotions() {\r\n    // Return mock promotions directly since we're using Spoonacular for main menu\r\n    return [\r\n      'All-you-can-eat meat buffet every Friday',\r\n      'Student discount: 20% off with valid ID',\r\n      'Happy Hour: 2-for-1 on drinks (5-7 PM)',\r\n      'Family package: 4 people for the price of 3'\r\n    ];\r\n  },\r\n\r\n  // Check delivery availability\r\n  async checkDeliveryAvailability() {\r\n    // Return mock delivery info directly\r\n    return {\r\n      available: true,\r\n      deliveryTime: '30-45 min',\r\n      minimumOrder: 'KES 500',\r\n      deliveryFee: 'KES 100',\r\n      freeDeliveryThreshold: 'KES 2000'\r\n    };\r\n  },\r\n\r\n  // Mock functions for new features (if not implemented in Spoonacular)\r\n  getDeals() {\r\n    return [\r\n      { id: 'deal-001', title: 'Daily Special', description: 'Get a free side with any main dish', validUntil: '2024-12-31' },\r\n      { id: 'deal-002', title: 'Lunch Combo', description: 'Half price on all lunch specials', validUntil: '2024-12-31' }\r\n    ];\r\n  },\r\n\r\n  getRewards() {\r\n    return [\r\n      { id: 'reward-001', title: 'Loyalty Card', description: 'Earn points for every meal', validUntil: '2024-12-31' },\r\n      { id: 'reward-002', title: 'Free Dessert', description: 'Get a free dessert with your 10th meal', validUntil: '2024-12-31' }\r\n    ];\r\n  },\r\n\r\n  getCustomization() {\r\n    return {\r\n      meatTypes: ['Beef'],\r\n      spiceLevels: ['Mild', 'Medium', 'Hot', 'Extra Hot'],\r\n      cookingStyles: ['Grilled', 'BBQ', 'Roasted', 'Smoked', 'Braised', 'Slow Cooked'],\r\n      sizes: ['Small', 'Medium', 'Large', 'Family Size']\r\n    };\r\n  },\r\n\r\n  getLocations() {\r\n    return [\r\n      { id: 'loc-001', name: 'Main Branch', address: 'Langata Road, Nairobi', phone: '+254 20 600 5923' },\r\n      { id: 'loc-002', name: 'Westlands Branch', address: 'Westlands, Nairobi', phone: '+254 20 600 5924' }\r\n    ];\r\n  },\r\n\r\n  getMockSidesAndBeverages() {\r\n    const mockSides = [\r\n      {\r\n        id: 'side-001',\r\n        name: 'Ugali',\r\n        price: 'KES 200',\r\n        description: 'Traditional Kenyan maize meal',\r\n        category: 'Sides',\r\n        image: '/images/food/ugali.jpg',\r\n        isPromo: false,\r\n        calories: '150',\r\n        serves: '1 person',\r\n        allergens: ['Gluten'],\r\n        preparationTime: '5 min',\r\n        spiceLevel: 'None',\r\n        tags: ['Traditional', 'Local'],\r\n        vegetarian: true,\r\n        signature: false\r\n      },\r\n      {\r\n        id: 'side-002',\r\n        name: 'Sukuma Wiki',\r\n        price: 'KES 150',\r\n        description: 'Collard greens with tomatoes and onions',\r\n        category: 'Sides',\r\n        image: '/images/food/sukuma-wiki.jpg',\r\n        isPromo: false,\r\n        calories: '80',\r\n        serves: '1 person',\r\n        allergens: ['None'],\r\n        preparationTime: '8 min',\r\n        spiceLevel: 'Mild',\r\n        tags: ['Vegetables', 'Healthy'],\r\n        vegetarian: true,\r\n        signature: false\r\n      }\r\n    ];\r\n\r\n    const mockBeverages = [\r\n      {\r\n        id: 'bev-001',\r\n        name: 'Tusker Beer',\r\n        price: 'KES 300',\r\n        description: 'Local Kenyan beer',\r\n        category: 'Beverages',\r\n        image: '/images/food/tusker-beer.jpg',\r\n        isPromo: false,\r\n        calories: '150',\r\n        serves: '1 person',\r\n        allergens: ['Gluten'],\r\n        preparationTime: '2 min',\r\n        spiceLevel: 'None',\r\n        tags: ['Local', 'Beer'],\r\n        vegetarian: true,\r\n        signature: false\r\n      },\r\n      {\r\n        id: 'bev-002',\r\n        name: 'Fresh Fruit Juice',\r\n        price: 'KES 250',\r\n        description: 'Seasonal fruit juice',\r\n        category: 'Beverages',\r\n        image: '/images/food/fruit-juice.jpg',\r\n        isPromo: false,\r\n        calories: '120',\r\n        serves: '1 person',\r\n        allergens: ['None'],\r\n        preparationTime: '3 min',\r\n        spiceLevel: 'None',\r\n        tags: ['Fresh', 'Healthy'],\r\n        vegetarian: true,\r\n        signature: false\r\n      }\r\n    ];\r\n\r\n    return [...mockSides, ...mockBeverages];\r\n  }\r\n};\r\n\r\nexport default carnivoreAPI;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}