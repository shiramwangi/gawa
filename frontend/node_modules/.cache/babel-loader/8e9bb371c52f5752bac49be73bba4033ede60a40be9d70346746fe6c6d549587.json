{"ast":null,"code":"// Java House Restaurant API Integration Service\n// This service provides multiple ways to get Java House's menu data\n\n// Base configuration\nconst JAVA_HOUSE_CONFIG = {\n  name: 'Java House',\n  location: 'Multiple locations across Kenya',\n  phone: '+254 20 444 4444',\n  website: 'https://www.javahouse.co.ke',\n  coordinates: {\n    lat: -1.2921,\n    lng: 36.8219\n  },\n  description: 'Kenya\\'s leading coffee house and restaurant chain',\n  founded: 1999,\n  branches: 80\n};\n\n// Option 1: Direct API endpoints (if Java House has them)\nconst JAVA_HOUSE_DIRECT_API = {\n  baseURL: 'https://api.javahouse.co.ke',\n  // Hypothetical API endpoint\n  endpoints: {\n    menu: '/api/v1/menu',\n    promotions: '/api/v1/promotions',\n    locations: '/api/v1/locations',\n    delivery: '/api/v1/delivery'\n  }\n};\n\n// Option 2: Jumia Food API integration\nconst JUMIA_FOOD_API = {\n  baseURL: 'https://food.jumia.co.ke/api',\n  endpoints: {\n    search: '/restaurants/search',\n    menu: '/restaurants/{id}/menu',\n    categories: '/categories'\n  },\n  headers: {\n    'Authorization': 'Bearer YOUR_JUMIA_API_KEY',\n    'Content-Type': 'application/json'\n  }\n};\n\n// Option 3: Glovo API integration\nconst GLOVO_API = {\n  baseURL: 'https://api.glovoapp.com',\n  endpoints: {\n    restaurants: '/v3/restaurants',\n    menu: '/v3/restaurants/{id}/menu',\n    categories: '/v3/categories'\n  },\n  headers: {\n    'Authorization': 'Bearer YOUR_GLOVO_API_KEY',\n    'Content-Type': 'application/json'\n  }\n};\n\n// Main API functions\nexport const javaHouseAPI = {\n  // Get full menu with real-time data\n  async getFullMenu() {\n    try {\n      // Try direct API first\n      const directMenu = await this.getDirectMenu();\n      if (directMenu) return directMenu;\n\n      // Try Jumia Food API\n      const jumiaMenu = await this.getJumiaMenu();\n      if (jumiaMenu) return jumiaMenu;\n\n      // Try Glovo API\n      const glovoMenu = await this.getGlovoMenu();\n      if (glovoMenu) return glovoMenu;\n\n      // Fallback to enhanced mock data\n      return this.getEnhancedMockMenu();\n    } catch (error) {\n      console.error('Error fetching Java House menu:', error);\n      return this.getEnhancedMockMenu();\n    }\n  },\n  // Try direct Java House API\n  async getDirectMenu() {\n    try {\n      const response = await fetch(`${JAVA_HOUSE_DIRECT_API.baseURL}${JAVA_HOUSE_DIRECT_API.endpoints.menu}`);\n      if (response.ok) {\n        const data = await response.json();\n        return this.transformDirectMenuData(data);\n      }\n    } catch (error) {\n      console.log('Direct API not available, trying alternatives...');\n    }\n    return null;\n  },\n  // Try Jumia Food API\n  async getJumiaMenu() {\n    try {\n      // Search for Java House on Jumia Food\n      const searchResponse = await fetch(`${JUMIA_FOOD_API.baseURL}${JUMIA_FOOD_API.endpoints.search}?q=java+house`, {\n        headers: JUMIA_FOOD_API.headers\n      });\n      if (searchResponse.ok) {\n        const searchData = await searchResponse.json();\n        const javaHouseId = this.findJavaHouseId(searchData);\n        if (javaHouseId) {\n          const menuResponse = await fetch(`${JUMIA_FOOD_API.baseURL}${JUMIA_FOOD_API.endpoints.menu.replace('{id}', javaHouseId)}`, {\n            headers: JUMIA_FOOD_API.headers\n          });\n          if (menuResponse.ok) {\n            const menuData = await menuResponse.json();\n            return this.transformJumiaMenuData(menuData);\n          }\n        }\n      }\n    } catch (error) {\n      console.log('Jumia Food API not available, trying alternatives...');\n    }\n    return null;\n  },\n  // Try Glovo API\n  async getGlovoMenu() {\n    try {\n      // Search for Java House on Glovo\n      const searchResponse = await fetch(`${GLOVO_API.baseURL}${GLOVO_API.endpoints.restaurants}?search=java+house`, {\n        headers: GLOVO_API.headers\n      });\n      if (searchResponse.ok) {\n        const searchData = await searchResponse.json();\n        const javaHouseId = this.findJavaHouseId(searchData);\n        if (javaHouseId) {\n          const menuResponse = await fetch(`${GLOVO_API.baseURL}${GLOVO_API.endpoints.menu.replace('{id}', javaHouseId)}`, {\n            headers: GLOVO_API.headers\n          });\n          if (menuResponse.ok) {\n            const menuData = await menuResponse.json();\n            return this.transformGlovoMenuData(menuData);\n          }\n        }\n      }\n    } catch (error) {\n      console.log('Glovo API not available, using fallback...');\n    }\n    return null;\n  },\n  // Enhanced mock menu with realistic Java House data\n  getEnhancedMockMenu() {\n    return {\n      restaurant: JAVA_HOUSE_CONFIG,\n      categories: {\n        'Coffee & Beverages': [{\n          id: 'cb-001',\n          name: 'Flat White',\n          price: 'KES 280',\n          description: 'Smooth espresso with velvety microfoam',\n          category: 'Coffee & Beverages',\n          image: '/images/food/flat-white.jpg',\n          isPromo: false,\n          calories: '120',\n          serves: '1 person',\n          allergens: ['Milk'],\n          preparationTime: '3-5 min',\n          spiceLevel: 'None',\n          tags: ['Popular', 'Barista Choice', 'Smooth'],\n          caffeine: 'Medium',\n          milkType: 'Full Cream'\n        }, {\n          id: 'cb-002',\n          name: 'Cappuccino',\n          price: 'KES 250',\n          description: 'Classic espresso with steamed milk and foam',\n          category: 'Coffee & Beverages',\n          image: '/images/food/cappuccino.jpg',\n          isPromo: false,\n          calories: '110',\n          serves: '1 person',\n          allergens: ['Milk'],\n          preparationTime: '3-5 min',\n          spiceLevel: 'None',\n          tags: ['Classic', 'Traditional', 'Creamy'],\n          caffeine: 'Medium',\n          milkType: 'Full Cream'\n        }, {\n          id: 'cb-003',\n          name: 'Americano',\n          price: 'KES 220',\n          description: 'Espresso with hot water for a bold taste',\n          category: 'Coffee & Beverages',\n          image: '/images/food/americano.jpg',\n          isPromo: false,\n          calories: '5',\n          serves: '1 person',\n          allergens: ['None'],\n          preparationTime: '2-3 min',\n          spiceLevel: 'None',\n          tags: ['Strong', 'Bold', 'Pure Coffee'],\n          caffeine: 'High',\n          milkType: 'None'\n        }, {\n          id: 'cb-004',\n          name: 'Mocha',\n          price: 'KES 320',\n          description: 'Espresso with chocolate and steamed milk',\n          category: 'Coffee & Beverages',\n          image: '/images/food/mocha.jpg',\n          isPromo: true,\n          promoText: 'Chocolate Lover\\'s Choice',\n          calories: '180',\n          serves: '1 person',\n          allergens: ['Milk', 'Chocolate'],\n          preparationTime: '4-6 min',\n          spiceLevel: 'None',\n          tags: ['Sweet', 'Chocolate', 'Indulgent'],\n          caffeine: 'Medium',\n          milkType: 'Full Cream'\n        }, {\n          id: 'cb-005',\n          name: 'Fresh Juice',\n          price: 'KES 400',\n          description: 'Seasonal fruit juice - orange, passion, or mango',\n          category: 'Coffee & Beverages',\n          image: '/images/food/fresh-juice.jpg',\n          isPromo: false,\n          calories: '120',\n          serves: '1 person',\n          allergens: ['Fruits'],\n          preparationTime: '2-3 min',\n          spiceLevel: 'None',\n          tags: ['Fresh', 'Healthy', 'Natural'],\n          caffeine: 'None',\n          milkType: 'None'\n        }],\n        'Breakfast': [{\n          id: 'bf-001',\n          name: 'Full English Breakfast',\n          price: 'KES 850',\n          description: 'Eggs, bacon, sausage, beans, mushrooms, and toast',\n          category: 'Breakfast',\n          image: '/images/food/full-english.jpg',\n          isPromo: true,\n          promoText: 'Most Popular!',\n          calories: '650',\n          serves: '1 person',\n          allergens: ['Eggs', 'Gluten', 'Dairy'],\n          preparationTime: '10-15 min',\n          spiceLevel: 'Mild',\n          tags: ['Hearty', 'Traditional', 'Filling'],\n          availableUntil: '11:00 AM',\n          vegetarian: false\n        }, {\n          id: 'bf-002',\n          name: 'Avocado Toast',\n          price: 'KES 450',\n          description: 'Sourdough bread with smashed avocado, cherry tomatoes, and microgreens',\n          category: 'Breakfast',\n          image: '/images/food/avocado-toast.jpg',\n          isPromo: false,\n          calories: '320',\n          serves: '1 person',\n          allergens: ['Gluten'],\n          preparationTime: '5-8 min',\n          spiceLevel: 'None',\n          tags: ['Healthy', 'Vegetarian', 'Instagram Worthy'],\n          availableUntil: '11:00 AM',\n          vegetarian: true\n        }, {\n          id: 'bf-003',\n          name: 'Pancakes with Maple Syrup',\n          price: 'KES 380',\n          description: 'Fluffy pancakes served with real maple syrup and butter',\n          category: 'Breakfast',\n          image: '/images/food/pancakes.jpg',\n          isPromo: false,\n          calories: '420',\n          serves: '1 person',\n          allergens: ['Gluten', 'Eggs', 'Dairy'],\n          preparationTime: '8-12 min',\n          spiceLevel: 'None',\n          tags: ['Sweet', 'Classic', 'Comfort Food'],\n          availableUntil: '11:00 AM',\n          vegetarian: true\n        }],\n        'Main Meals': [{\n          id: 'mm-001',\n          name: 'Chicken Burger',\n          price: 'KES 850',\n          description: 'Grilled chicken breast with lettuce, tomato, and special sauce',\n          category: 'Main Meals',\n          image: '/images/food/chicken-burger.jpg',\n          isPromo: false,\n          calories: '580',\n          serves: '1 person',\n          allergens: ['Gluten', 'Eggs'],\n          preparationTime: '12-18 min',\n          spiceLevel: 'Mild',\n          tags: ['Grilled', 'Healthy', 'Protein Rich'],\n          comesWith: 'French Fries',\n          vegetarian: false\n        }, {\n          id: 'mm-002',\n          name: 'Caesar Salad',\n          price: 'KES 650',\n          description: 'Fresh romaine lettuce, parmesan cheese, croutons with caesar dressing',\n          category: 'Main Meals',\n          image: '/images/food/caesar-salad.jpg',\n          isPromo: false,\n          calories: '280',\n          serves: '1 person',\n          allergens: ['Gluten', 'Dairy'],\n          preparationTime: '8-10 min',\n          spiceLevel: 'None',\n          tags: ['Fresh', 'Light', 'Healthy'],\n          comesWith: 'Dressing on the side',\n          vegetarian: false\n        }, {\n          id: 'mm-003',\n          name: 'Chicken Pasta',\n          price: 'KES 750',\n          description: 'Fettuccine with grilled chicken in creamy alfredo sauce',\n          category: 'Main Meals',\n          image: '/images/food/chicken-pasta.jpg',\n          isPromo: false,\n          calories: '720',\n          serves: '1 person',\n          allergens: ['Gluten', 'Dairy'],\n          preparationTime: '15-20 min',\n          spiceLevel: 'Mild',\n          tags: ['Creamy', 'Comfort Food', 'Italian'],\n          comesWith: 'Garden salad',\n          vegetarian: false\n        }, {\n          id: 'mm-004',\n          name: 'Beef Stir Fry',\n          price: 'KES 950',\n          description: 'Tender beef strips with mixed vegetables in soy-ginger sauce',\n          category: 'Main Meals',\n          image: '/images/food/beef-stir-fry.jpg',\n          isPromo: true,\n          promoText: 'Chef\\'s Special',\n          calories: '680',\n          serves: '1 person',\n          allergens: ['Soy', 'Gluten'],\n          preparationTime: '12-15 min',\n          spiceLevel: 'Medium',\n          tags: ['Asian', 'Spicy', 'Quick'],\n          comesWith: 'Steamed rice',\n          vegetarian: false\n        }],\n        'Snacks & Sides': [{\n          id: 'ss-001',\n          name: 'French Fries',\n          price: 'KES 250',\n          description: 'Crispy golden fries with sea salt',\n          category: 'Snacks & Sides',\n          image: '/images/food/french-fries.jpg',\n          isPromo: false,\n          calories: '320',\n          serves: '1 person',\n          allergens: ['Gluten'],\n          preparationTime: '8-10 min',\n          spiceLevel: 'None',\n          tags: ['Crispy', 'Classic', 'Shareable'],\n          size: 'Regular',\n          vegetarian: true\n        }, {\n          id: 'ss-002',\n          name: 'Onion Rings',\n          price: 'KES 280',\n          description: 'Beer-battered onion rings with ranch dipping sauce',\n          category: 'Snacks & Sides',\n          image: '/images/food/onion-rings.jpg',\n          isPromo: false,\n          calories: '380',\n          serves: '1 person',\n          allergens: ['Gluten', 'Dairy'],\n          preparationTime: '6-8 min',\n          spiceLevel: 'None',\n          tags: ['Crispy', 'Beer Battered', 'Dipping Sauce'],\n          size: 'Regular',\n          vegetarian: true\n        }, {\n          id: 'ss-003',\n          name: 'Garlic Bread',\n          price: '200',\n          description: 'Fresh baked bread with garlic butter and herbs',\n          category: 'Snacks & Sides',\n          image: '/images/food/garlic-bread.jpg',\n          isPromo: false,\n          calories: '180',\n          serves: '1 person',\n          allergens: ['Gluten', 'Dairy'],\n          preparationTime: '3-5 min',\n          spiceLevel: 'None',\n          tags: ['Fresh Baked', 'Garlic', 'Herbs'],\n          size: '2 pieces',\n          vegetarian: true\n        }],\n        'Desserts': [{\n          id: 'ds-001',\n          name: 'Chocolate Fudge Cake',\n          price: 'KES 350',\n          description: 'Rich chocolate cake with fudge frosting and chocolate shavings',\n          category: 'Desserts',\n          image: '/images/food/chocolate-fudge-cake.jpg',\n          isPromo: false,\n          calories: '420',\n          serves: '1 person',\n          allergens: ['Gluten', 'Eggs', 'Dairy'],\n          preparationTime: '2-3 min',\n          spiceLevel: 'None',\n          tags: ['Chocolate', 'Rich', 'Indulgent'],\n          size: 'Large slice',\n          vegetarian: true\n        }, {\n          id: 'ds-002',\n          name: 'Cheesecake',\n          price: 'KES 380',\n          description: 'New York style cheesecake with berry compote',\n          category: 'Desserts',\n          image: '/images/food/cheesecake.jpg',\n          isPromo: false,\n          calories: '380',\n          serves: '1 person',\n          allergens: ['Gluten', 'Dairy'],\n          preparationTime: '2-3 min',\n          spiceLevel: 'None',\n          tags: ['Creamy', 'Classic', 'Berry Topped'],\n          size: 'Large slice',\n          vegetarian: true\n        }, {\n          id: 'ds-003',\n          name: 'Ice Cream Sundae',\n          price: 'KES 320',\n          description: 'Vanilla ice cream with chocolate sauce, nuts, and cherry',\n          category: 'Desserts',\n          image: '/images/food/ice-cream-sundae.jpg',\n          isPromo: false,\n          calories: '450',\n          serves: '1 person',\n          allergens: ['Dairy', 'Nuts'],\n          preparationTime: '3-5 min',\n          spiceLevel: 'None',\n          tags: ['Cold', 'Sweet', 'Toppings'],\n          size: 'Regular',\n          vegetarian: true\n        }]\n      },\n      promotions: [{\n        id: 'promo-001',\n        title: 'Coffee Happy Hour',\n        description: '50% off on all coffee beverages (2-5 PM daily)',\n        discount: '50%',\n        validUntil: '2024-12-31',\n        code: 'COFFEE50',\n        timing: '2:00 PM - 5:00 PM Daily'\n      }, {\n        id: 'promo-002',\n        title: 'Breakfast Bundle',\n        description: 'Get any breakfast item + coffee for just KES 50 extra',\n        discount: 'KES 50',\n        validUntil: '2024-12-31',\n        code: 'BREAKFAST50',\n        timing: '7:00 AM - 11:00 AM Daily'\n      }, {\n        id: 'promo-003',\n        title: 'Student Discount',\n        description: '20% off for students with valid ID',\n        discount: '20%',\n        validUntil: '2024-12-31',\n        code: 'STUDENT20',\n        requirements: 'Valid student ID required'\n      }],\n      deliveryInfo: {\n        available: true,\n        services: ['Jumia Food', 'Glovo', 'Uber Eats', 'Bolt Food'],\n        deliveryTime: '25-40 minutes',\n        deliveryFee: 'KES 150',\n        minimumOrder: 'KES 500',\n        freeDeliveryThreshold: 'KES 1,500'\n      },\n      locations: ['Westlands', 'CBD', 'Kilimani', 'Lavington', 'Karen', 'Mombasa Road', 'Thika Road', 'Kiambu Road']\n    };\n  },\n  // Helper functions\n  findJavaHouseId(searchData) {\n    var _searchData$restauran;\n    // Logic to find Java House's ID in search results\n    const javaHouse = (_searchData$restauran = searchData.restaurants) === null || _searchData$restauran === void 0 ? void 0 : _searchData$restauran.find(r => r.name.toLowerCase().includes('java house') || r.name.toLowerCase().includes('javahouse'));\n    return javaHouse === null || javaHouse === void 0 ? void 0 : javaHouse.id;\n  },\n  transformDirectMenuData(data) {\n    // Transform direct API data to our format\n    return {\n      restaurant: JAVA_HOUSE_CONFIG,\n      categories: data.categories || {},\n      promotions: data.promotions || [],\n      deliveryInfo: data.delivery || {},\n      locations: data.locations || []\n    };\n  },\n  transformJumiaMenuData(data) {\n    // Transform Jumia Food data to our format\n    return {\n      restaurant: JAVA_HOUSE_CONFIG,\n      categories: this.groupByCategory(data.menu || []),\n      promotions: data.promotions || [],\n      deliveryInfo: {\n        available: true,\n        services: ['Jumia Food'],\n        deliveryTime: data.deliveryTime || '25-40 minutes',\n        deliveryFee: data.deliveryFee || 'KES 150',\n        minimumOrder: data.minimumOrder || 'KES 500'\n      },\n      locations: data.locations || []\n    };\n  },\n  transformGlovoMenuData(data) {\n    // Transform Glovo data to our format\n    return {\n      restaurant: JAVA_HOUSE_CONFIG,\n      categories: this.groupByCategory(data.menu || []),\n      promotions: data.promotions || [],\n      deliveryInfo: {\n        available: true,\n        services: ['Glovo'],\n        deliveryTime: data.deliveryTime || '25-40 minutes',\n        deliveryFee: data.deliveryFee || 'KES 150',\n        minimumOrder: data.minimumOrder || 'KES 500'\n      },\n      locations: data.locations || []\n    };\n  },\n  groupByCategory(menuItems) {\n    // Group menu items by category\n    const categories = {};\n    menuItems.forEach(item => {\n      if (!categories[item.category]) {\n        categories[item.category] = [];\n      }\n      categories[item.category].push(item);\n    });\n    return categories;\n  },\n  // Get restaurant information\n  getRestaurantInfo() {\n    return JAVA_HOUSE_CONFIG;\n  },\n  // Get current promotions\n  async getPromotions() {\n    try {\n      const response = await fetch(`${JAVA_HOUSE_DIRECT_API.baseURL}${JAVA_HOUSE_DIRECT_API.endpoints.promotions}`);\n      if (response.ok) {\n        return await response.json();\n      }\n    } catch (error) {\n      console.log('Using mock promotions');\n    }\n    return this.getEnhancedMockMenu().promotions;\n  },\n  // Check delivery availability\n  async checkDeliveryAvailability() {\n    try {\n      const response = await fetch(`${JAVA_HOUSE_DIRECT_API.baseURL}${JAVA_HOUSE_DIRECT_API.endpoints.delivery}`);\n      if (response.ok) {\n        return await response.json();\n      }\n    } catch (error) {\n      console.log('Using mock delivery info');\n    }\n    return this.getEnhancedMockMenu().deliveryInfo;\n  },\n  // Get all locations\n  async getLocations() {\n    try {\n      const response = await fetch(`${JAVA_HOUSE_DIRECT_API.baseURL}${JAVA_HOUSE_DIRECT_API.endpoints.locations}`);\n      if (response.ok) {\n        return await response.json();\n      }\n    } catch (error) {\n      console.log('Using mock locations');\n    }\n    return this.getEnhancedMockMenu().locations;\n  }\n};\nexport default javaHouseAPI;","map":{"version":3,"names":["JAVA_HOUSE_CONFIG","name","location","phone","website","coordinates","lat","lng","description","founded","branches","JAVA_HOUSE_DIRECT_API","baseURL","endpoints","menu","promotions","locations","delivery","JUMIA_FOOD_API","search","categories","headers","GLOVO_API","restaurants","javaHouseAPI","getFullMenu","directMenu","getDirectMenu","jumiaMenu","getJumiaMenu","glovoMenu","getGlovoMenu","getEnhancedMockMenu","error","console","response","fetch","ok","data","json","transformDirectMenuData","log","searchResponse","searchData","javaHouseId","findJavaHouseId","menuResponse","replace","menuData","transformJumiaMenuData","transformGlovoMenuData","restaurant","id","price","category","image","isPromo","calories","serves","allergens","preparationTime","spiceLevel","tags","caffeine","milkType","promoText","availableUntil","vegetarian","comesWith","size","title","discount","validUntil","code","timing","requirements","deliveryInfo","available","services","deliveryTime","deliveryFee","minimumOrder","freeDeliveryThreshold","_searchData$restauran","javaHouse","find","r","toLowerCase","includes","groupByCategory","menuItems","forEach","item","push","getRestaurantInfo","getPromotions","checkDeliveryAvailability","getLocations"],"sources":["C:/Projects/gawa/frontend/src/api/javaHouseAPI.js"],"sourcesContent":["// Java House Restaurant API Integration Service\r\n// This service provides multiple ways to get Java House's menu data\r\n\r\n// Base configuration\r\nconst JAVA_HOUSE_CONFIG = {\r\n  name: 'Java House',\r\n  location: 'Multiple locations across Kenya',\r\n  phone: '+254 20 444 4444',\r\n  website: 'https://www.javahouse.co.ke',\r\n  coordinates: { lat: -1.2921, lng: 36.8219 },\r\n  description: 'Kenya\\'s leading coffee house and restaurant chain',\r\n  founded: 1999,\r\n  branches: 80\r\n};\r\n\r\n// Option 1: Direct API endpoints (if Java House has them)\r\nconst JAVA_HOUSE_DIRECT_API = {\r\n  baseURL: 'https://api.javahouse.co.ke', // Hypothetical API endpoint\r\n  endpoints: {\r\n    menu: '/api/v1/menu',\r\n    promotions: '/api/v1/promotions',\r\n    locations: '/api/v1/locations',\r\n    delivery: '/api/v1/delivery'\r\n  }\r\n};\r\n\r\n// Option 2: Jumia Food API integration\r\nconst JUMIA_FOOD_API = {\r\n  baseURL: 'https://food.jumia.co.ke/api',\r\n  endpoints: {\r\n    search: '/restaurants/search',\r\n    menu: '/restaurants/{id}/menu',\r\n    categories: '/categories'\r\n  },\r\n  headers: {\r\n    'Authorization': 'Bearer YOUR_JUMIA_API_KEY',\r\n    'Content-Type': 'application/json'\r\n  }\r\n};\r\n\r\n// Option 3: Glovo API integration\r\nconst GLOVO_API = {\r\n  baseURL: 'https://api.glovoapp.com',\r\n  endpoints: {\r\n    restaurants: '/v3/restaurants',\r\n    menu: '/v3/restaurants/{id}/menu',\r\n    categories: '/v3/categories'\r\n  },\r\n  headers: {\r\n    'Authorization': 'Bearer YOUR_GLOVO_API_KEY',\r\n    'Content-Type': 'application/json'\r\n  }\r\n};\r\n\r\n// Main API functions\r\nexport const javaHouseAPI = {\r\n  // Get full menu with real-time data\r\n  async getFullMenu() {\r\n    try {\r\n      // Try direct API first\r\n      const directMenu = await this.getDirectMenu();\r\n      if (directMenu) return directMenu;\r\n\r\n      // Try Jumia Food API\r\n      const jumiaMenu = await this.getJumiaMenu();\r\n      if (jumiaMenu) return jumiaMenu;\r\n\r\n      // Try Glovo API\r\n      const glovoMenu = await this.getGlovoMenu();\r\n      if (glovoMenu) return glovoMenu;\r\n\r\n      // Fallback to enhanced mock data\r\n      return this.getEnhancedMockMenu();\r\n    } catch (error) {\r\n      console.error('Error fetching Java House menu:', error);\r\n      return this.getEnhancedMockMenu();\r\n    }\r\n  },\r\n\r\n  // Try direct Java House API\r\n  async getDirectMenu() {\r\n    try {\r\n      const response = await fetch(`${JAVA_HOUSE_DIRECT_API.baseURL}${JAVA_HOUSE_DIRECT_API.endpoints.menu}`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        return this.transformDirectMenuData(data);\r\n      }\r\n    } catch (error) {\r\n      console.log('Direct API not available, trying alternatives...');\r\n    }\r\n    return null;\r\n  },\r\n\r\n  // Try Jumia Food API\r\n  async getJumiaMenu() {\r\n    try {\r\n      // Search for Java House on Jumia Food\r\n      const searchResponse = await fetch(`${JUMIA_FOOD_API.baseURL}${JUMIA_FOOD_API.endpoints.search}?q=java+house`, {\r\n        headers: JUMIA_FOOD_API.headers\r\n      });\r\n      \r\n      if (searchResponse.ok) {\r\n        const searchData = await searchResponse.json();\r\n        const javaHouseId = this.findJavaHouseId(searchData);\r\n        \r\n        if (javaHouseId) {\r\n          const menuResponse = await fetch(`${JUMIA_FOOD_API.baseURL}${JUMIA_FOOD_API.endpoints.menu.replace('{id}', javaHouseId)}`, {\r\n            headers: JUMIA_FOOD_API.headers\r\n          });\r\n          \r\n          if (menuResponse.ok) {\r\n            const menuData = await menuResponse.json();\r\n            return this.transformJumiaMenuData(menuData);\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log('Jumia Food API not available, trying alternatives...');\r\n    }\r\n    return null;\r\n  },\r\n\r\n  // Try Glovo API\r\n  async getGlovoMenu() {\r\n    try {\r\n      // Search for Java House on Glovo\r\n      const searchResponse = await fetch(`${GLOVO_API.baseURL}${GLOVO_API.endpoints.restaurants}?search=java+house`, {\r\n        headers: GLOVO_API.headers\r\n      });\r\n      \r\n      if (searchResponse.ok) {\r\n        const searchData = await searchResponse.json();\r\n        const javaHouseId = this.findJavaHouseId(searchData);\r\n        \r\n        if (javaHouseId) {\r\n          const menuResponse = await fetch(`${GLOVO_API.baseURL}${GLOVO_API.endpoints.menu.replace('{id}', javaHouseId)}`, {\r\n            headers: GLOVO_API.headers\r\n          });\r\n          \r\n          if (menuResponse.ok) {\r\n            const menuData = await menuResponse.json();\r\n            return this.transformGlovoMenuData(menuData);\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log('Glovo API not available, using fallback...');\r\n    }\r\n    return null;\r\n  },\r\n\r\n  // Enhanced mock menu with realistic Java House data\r\n  getEnhancedMockMenu() {\r\n    return {\r\n      restaurant: JAVA_HOUSE_CONFIG,\r\n      categories: {\r\n        'Coffee & Beverages': [\r\n          {\r\n            id: 'cb-001',\r\n            name: 'Flat White',\r\n            price: 'KES 280',\r\n            description: 'Smooth espresso with velvety microfoam',\r\n            category: 'Coffee & Beverages',\r\n            image: '/images/food/flat-white.jpg',\r\n            isPromo: false,\r\n            calories: '120',\r\n            serves: '1 person',\r\n            allergens: ['Milk'],\r\n            preparationTime: '3-5 min',\r\n            spiceLevel: 'None',\r\n            tags: ['Popular', 'Barista Choice', 'Smooth'],\r\n            caffeine: 'Medium',\r\n            milkType: 'Full Cream'\r\n          },\r\n          {\r\n            id: 'cb-002',\r\n            name: 'Cappuccino',\r\n            price: 'KES 250',\r\n            description: 'Classic espresso with steamed milk and foam',\r\n            category: 'Coffee & Beverages',\r\n            image: '/images/food/cappuccino.jpg',\r\n            isPromo: false,\r\n            calories: '110',\r\n            serves: '1 person',\r\n            allergens: ['Milk'],\r\n            preparationTime: '3-5 min',\r\n            spiceLevel: 'None',\r\n            tags: ['Classic', 'Traditional', 'Creamy'],\r\n            caffeine: 'Medium',\r\n            milkType: 'Full Cream'\r\n          },\r\n          {\r\n            id: 'cb-003',\r\n            name: 'Americano',\r\n            price: 'KES 220',\r\n            description: 'Espresso with hot water for a bold taste',\r\n            category: 'Coffee & Beverages',\r\n            image: '/images/food/americano.jpg',\r\n            isPromo: false,\r\n            calories: '5',\r\n            serves: '1 person',\r\n            allergens: ['None'],\r\n            preparationTime: '2-3 min',\r\n            spiceLevel: 'None',\r\n            tags: ['Strong', 'Bold', 'Pure Coffee'],\r\n            caffeine: 'High',\r\n            milkType: 'None'\r\n          },\r\n          {\r\n            id: 'cb-004',\r\n            name: 'Mocha',\r\n            price: 'KES 320',\r\n            description: 'Espresso with chocolate and steamed milk',\r\n            category: 'Coffee & Beverages',\r\n            image: '/images/food/mocha.jpg',\r\n            isPromo: true,\r\n            promoText: 'Chocolate Lover\\'s Choice',\r\n            calories: '180',\r\n            serves: '1 person',\r\n            allergens: ['Milk', 'Chocolate'],\r\n            preparationTime: '4-6 min',\r\n            spiceLevel: 'None',\r\n            tags: ['Sweet', 'Chocolate', 'Indulgent'],\r\n            caffeine: 'Medium',\r\n            milkType: 'Full Cream'\r\n          },\r\n          {\r\n            id: 'cb-005',\r\n            name: 'Fresh Juice',\r\n            price: 'KES 400',\r\n            description: 'Seasonal fruit juice - orange, passion, or mango',\r\n            category: 'Coffee & Beverages',\r\n            image: '/images/food/fresh-juice.jpg',\r\n            isPromo: false,\r\n            calories: '120',\r\n            serves: '1 person',\r\n            allergens: ['Fruits'],\r\n            preparationTime: '2-3 min',\r\n            spiceLevel: 'None',\r\n            tags: ['Fresh', 'Healthy', 'Natural'],\r\n            caffeine: 'None',\r\n            milkType: 'None'\r\n          }\r\n        ],\r\n        'Breakfast': [\r\n          {\r\n            id: 'bf-001',\r\n            name: 'Full English Breakfast',\r\n            price: 'KES 850',\r\n            description: 'Eggs, bacon, sausage, beans, mushrooms, and toast',\r\n            category: 'Breakfast',\r\n            image: '/images/food/full-english.jpg',\r\n            isPromo: true,\r\n            promoText: 'Most Popular!',\r\n            calories: '650',\r\n            serves: '1 person',\r\n            allergens: ['Eggs', 'Gluten', 'Dairy'],\r\n            preparationTime: '10-15 min',\r\n            spiceLevel: 'Mild',\r\n            tags: ['Hearty', 'Traditional', 'Filling'],\r\n            availableUntil: '11:00 AM',\r\n            vegetarian: false\r\n          },\r\n          {\r\n            id: 'bf-002',\r\n            name: 'Avocado Toast',\r\n            price: 'KES 450',\r\n            description: 'Sourdough bread with smashed avocado, cherry tomatoes, and microgreens',\r\n            category: 'Breakfast',\r\n            image: '/images/food/avocado-toast.jpg',\r\n            isPromo: false,\r\n            calories: '320',\r\n            serves: '1 person',\r\n            allergens: ['Gluten'],\r\n            preparationTime: '5-8 min',\r\n            spiceLevel: 'None',\r\n            tags: ['Healthy', 'Vegetarian', 'Instagram Worthy'],\r\n            availableUntil: '11:00 AM',\r\n            vegetarian: true\r\n          },\r\n          {\r\n            id: 'bf-003',\r\n            name: 'Pancakes with Maple Syrup',\r\n            price: 'KES 380',\r\n            description: 'Fluffy pancakes served with real maple syrup and butter',\r\n            category: 'Breakfast',\r\n            image: '/images/food/pancakes.jpg',\r\n            isPromo: false,\r\n            calories: '420',\r\n            serves: '1 person',\r\n            allergens: ['Gluten', 'Eggs', 'Dairy'],\r\n            preparationTime: '8-12 min',\r\n            spiceLevel: 'None',\r\n            tags: ['Sweet', 'Classic', 'Comfort Food'],\r\n            availableUntil: '11:00 AM',\r\n            vegetarian: true\r\n          }\r\n        ],\r\n        'Main Meals': [\r\n          {\r\n            id: 'mm-001',\r\n            name: 'Chicken Burger',\r\n            price: 'KES 850',\r\n            description: 'Grilled chicken breast with lettuce, tomato, and special sauce',\r\n            category: 'Main Meals',\r\n            image: '/images/food/chicken-burger.jpg',\r\n            isPromo: false,\r\n            calories: '580',\r\n            serves: '1 person',\r\n            allergens: ['Gluten', 'Eggs'],\r\n            preparationTime: '12-18 min',\r\n            spiceLevel: 'Mild',\r\n            tags: ['Grilled', 'Healthy', 'Protein Rich'],\r\n            comesWith: 'French Fries',\r\n            vegetarian: false\r\n          },\r\n          {\r\n            id: 'mm-002',\r\n            name: 'Caesar Salad',\r\n            price: 'KES 650',\r\n            description: 'Fresh romaine lettuce, parmesan cheese, croutons with caesar dressing',\r\n            category: 'Main Meals',\r\n            image: '/images/food/caesar-salad.jpg',\r\n            isPromo: false,\r\n            calories: '280',\r\n            serves: '1 person',\r\n            allergens: ['Gluten', 'Dairy'],\r\n            preparationTime: '8-10 min',\r\n            spiceLevel: 'None',\r\n            tags: ['Fresh', 'Light', 'Healthy'],\r\n            comesWith: 'Dressing on the side',\r\n            vegetarian: false\r\n          },\r\n          {\r\n            id: 'mm-003',\r\n            name: 'Chicken Pasta',\r\n            price: 'KES 750',\r\n            description: 'Fettuccine with grilled chicken in creamy alfredo sauce',\r\n            category: 'Main Meals',\r\n            image: '/images/food/chicken-pasta.jpg',\r\n            isPromo: false,\r\n            calories: '720',\r\n            serves: '1 person',\r\n            allergens: ['Gluten', 'Dairy'],\r\n            preparationTime: '15-20 min',\r\n            spiceLevel: 'Mild',\r\n            tags: ['Creamy', 'Comfort Food', 'Italian'],\r\n            comesWith: 'Garden salad',\r\n            vegetarian: false\r\n          },\r\n          {\r\n            id: 'mm-004',\r\n            name: 'Beef Stir Fry',\r\n            price: 'KES 950',\r\n            description: 'Tender beef strips with mixed vegetables in soy-ginger sauce',\r\n            category: 'Main Meals',\r\n            image: '/images/food/beef-stir-fry.jpg',\r\n            isPromo: true,\r\n            promoText: 'Chef\\'s Special',\r\n            calories: '680',\r\n            serves: '1 person',\r\n            allergens: ['Soy', 'Gluten'],\r\n            preparationTime: '12-15 min',\r\n            spiceLevel: 'Medium',\r\n            tags: ['Asian', 'Spicy', 'Quick'],\r\n            comesWith: 'Steamed rice',\r\n            vegetarian: false\r\n          }\r\n        ],\r\n        'Snacks & Sides': [\r\n          {\r\n            id: 'ss-001',\r\n            name: 'French Fries',\r\n            price: 'KES 250',\r\n            description: 'Crispy golden fries with sea salt',\r\n            category: 'Snacks & Sides',\r\n            image: '/images/food/french-fries.jpg',\r\n            isPromo: false,\r\n            calories: '320',\r\n            serves: '1 person',\r\n            allergens: ['Gluten'],\r\n            preparationTime: '8-10 min',\r\n            spiceLevel: 'None',\r\n            tags: ['Crispy', 'Classic', 'Shareable'],\r\n            size: 'Regular',\r\n            vegetarian: true\r\n          },\r\n          {\r\n            id: 'ss-002',\r\n            name: 'Onion Rings',\r\n            price: 'KES 280',\r\n            description: 'Beer-battered onion rings with ranch dipping sauce',\r\n            category: 'Snacks & Sides',\r\n            image: '/images/food/onion-rings.jpg',\r\n            isPromo: false,\r\n            calories: '380',\r\n            serves: '1 person',\r\n            allergens: ['Gluten', 'Dairy'],\r\n            preparationTime: '6-8 min',\r\n            spiceLevel: 'None',\r\n            tags: ['Crispy', 'Beer Battered', 'Dipping Sauce'],\r\n            size: 'Regular',\r\n            vegetarian: true\r\n          },\r\n          {\r\n            id: 'ss-003',\r\n            name: 'Garlic Bread',\r\n            price: '200',\r\n            description: 'Fresh baked bread with garlic butter and herbs',\r\n            category: 'Snacks & Sides',\r\n            image: '/images/food/garlic-bread.jpg',\r\n            isPromo: false,\r\n            calories: '180',\r\n            serves: '1 person',\r\n            allergens: ['Gluten', 'Dairy'],\r\n            preparationTime: '3-5 min',\r\n            spiceLevel: 'None',\r\n            tags: ['Fresh Baked', 'Garlic', 'Herbs'],\r\n            size: '2 pieces',\r\n            vegetarian: true\r\n          }\r\n        ],\r\n        'Desserts': [\r\n          {\r\n            id: 'ds-001',\r\n            name: 'Chocolate Fudge Cake',\r\n            price: 'KES 350',\r\n            description: 'Rich chocolate cake with fudge frosting and chocolate shavings',\r\n            category: 'Desserts',\r\n            image: '/images/food/chocolate-fudge-cake.jpg',\r\n            isPromo: false,\r\n            calories: '420',\r\n            serves: '1 person',\r\n            allergens: ['Gluten', 'Eggs', 'Dairy'],\r\n            preparationTime: '2-3 min',\r\n            spiceLevel: 'None',\r\n            tags: ['Chocolate', 'Rich', 'Indulgent'],\r\n            size: 'Large slice',\r\n            vegetarian: true\r\n          },\r\n          {\r\n            id: 'ds-002',\r\n            name: 'Cheesecake',\r\n            price: 'KES 380',\r\n            description: 'New York style cheesecake with berry compote',\r\n            category: 'Desserts',\r\n            image: '/images/food/cheesecake.jpg',\r\n            isPromo: false,\r\n            calories: '380',\r\n            serves: '1 person',\r\n            allergens: ['Gluten', 'Dairy'],\r\n            preparationTime: '2-3 min',\r\n            spiceLevel: 'None',\r\n            tags: ['Creamy', 'Classic', 'Berry Topped'],\r\n            size: 'Large slice',\r\n            vegetarian: true\r\n          },\r\n          {\r\n            id: 'ds-003',\r\n            name: 'Ice Cream Sundae',\r\n            price: 'KES 320',\r\n            description: 'Vanilla ice cream with chocolate sauce, nuts, and cherry',\r\n            category: 'Desserts',\r\n            image: '/images/food/ice-cream-sundae.jpg',\r\n            isPromo: false,\r\n            calories: '450',\r\n            serves: '1 person',\r\n            allergens: ['Dairy', 'Nuts'],\r\n            preparationTime: '3-5 min',\r\n            spiceLevel: 'None',\r\n            tags: ['Cold', 'Sweet', 'Toppings'],\r\n            size: 'Regular',\r\n            vegetarian: true\r\n          }\r\n        ]\r\n      },\r\n      promotions: [\r\n        {\r\n          id: 'promo-001',\r\n          title: 'Coffee Happy Hour',\r\n          description: '50% off on all coffee beverages (2-5 PM daily)',\r\n          discount: '50%',\r\n          validUntil: '2024-12-31',\r\n          code: 'COFFEE50',\r\n          timing: '2:00 PM - 5:00 PM Daily'\r\n        },\r\n        {\r\n          id: 'promo-002',\r\n          title: 'Breakfast Bundle',\r\n          description: 'Get any breakfast item + coffee for just KES 50 extra',\r\n          discount: 'KES 50',\r\n          validUntil: '2024-12-31',\r\n          code: 'BREAKFAST50',\r\n          timing: '7:00 AM - 11:00 AM Daily'\r\n        },\r\n        {\r\n          id: 'promo-003',\r\n          title: 'Student Discount',\r\n          description: '20% off for students with valid ID',\r\n          discount: '20%',\r\n          validUntil: '2024-12-31',\r\n          code: 'STUDENT20',\r\n          requirements: 'Valid student ID required'\r\n        }\r\n      ],\r\n      deliveryInfo: {\r\n        available: true,\r\n        services: ['Jumia Food', 'Glovo', 'Uber Eats', 'Bolt Food'],\r\n        deliveryTime: '25-40 minutes',\r\n        deliveryFee: 'KES 150',\r\n        minimumOrder: 'KES 500',\r\n        freeDeliveryThreshold: 'KES 1,500'\r\n      },\r\n      locations: [\r\n        'Westlands',\r\n        'CBD',\r\n        'Kilimani',\r\n        'Lavington',\r\n        'Karen',\r\n        'Mombasa Road',\r\n        'Thika Road',\r\n        'Kiambu Road'\r\n      ]\r\n    };\r\n  },\r\n\r\n  // Helper functions\r\n  findJavaHouseId(searchData) {\r\n    // Logic to find Java House's ID in search results\r\n    const javaHouse = searchData.restaurants?.find(r => \r\n      r.name.toLowerCase().includes('java house') || \r\n      r.name.toLowerCase().includes('javahouse')\r\n    );\r\n    return javaHouse?.id;\r\n  },\r\n\r\n  transformDirectMenuData(data) {\r\n    // Transform direct API data to our format\r\n    return {\r\n      restaurant: JAVA_HOUSE_CONFIG,\r\n      categories: data.categories || {},\r\n      promotions: data.promotions || [],\r\n      deliveryInfo: data.delivery || {},\r\n      locations: data.locations || []\r\n    };\r\n  },\r\n\r\n  transformJumiaMenuData(data) {\r\n    // Transform Jumia Food data to our format\r\n    return {\r\n      restaurant: JAVA_HOUSE_CONFIG,\r\n      categories: this.groupByCategory(data.menu || []),\r\n      promotions: data.promotions || [],\r\n      deliveryInfo: {\r\n        available: true,\r\n        services: ['Jumia Food'],\r\n        deliveryTime: data.deliveryTime || '25-40 minutes',\r\n        deliveryFee: data.deliveryFee || 'KES 150',\r\n        minimumOrder: data.minimumOrder || 'KES 500'\r\n      },\r\n      locations: data.locations || []\r\n    };\r\n  },\r\n\r\n  transformGlovoMenuData(data) {\r\n    // Transform Glovo data to our format\r\n    return {\r\n      restaurant: JAVA_HOUSE_CONFIG,\r\n      categories: this.groupByCategory(data.menu || []),\r\n      promotions: data.promotions || [],\r\n      deliveryInfo: {\r\n        available: true,\r\n        services: ['Glovo'],\r\n        deliveryTime: data.deliveryTime || '25-40 minutes',\r\n        deliveryFee: data.deliveryFee || 'KES 150',\r\n        minimumOrder: data.minimumOrder || 'KES 500'\r\n      },\r\n      locations: data.locations || []\r\n    };\r\n  },\r\n\r\n  groupByCategory(menuItems) {\r\n    // Group menu items by category\r\n    const categories = {};\r\n    menuItems.forEach(item => {\r\n      if (!categories[item.category]) {\r\n        categories[item.category] = [];\r\n      }\r\n      categories[item.category].push(item);\r\n    });\r\n    return categories;\r\n  },\r\n\r\n  // Get restaurant information\r\n  getRestaurantInfo() {\r\n    return JAVA_HOUSE_CONFIG;\r\n  },\r\n\r\n  // Get current promotions\r\n  async getPromotions() {\r\n    try {\r\n      const response = await fetch(`${JAVA_HOUSE_DIRECT_API.baseURL}${JAVA_HOUSE_DIRECT_API.endpoints.promotions}`);\r\n      if (response.ok) {\r\n        return await response.json();\r\n      }\r\n    } catch (error) {\r\n      console.log('Using mock promotions');\r\n    }\r\n    \r\n    return this.getEnhancedMockMenu().promotions;\r\n  },\r\n\r\n  // Check delivery availability\r\n  async checkDeliveryAvailability() {\r\n    try {\r\n      const response = await fetch(`${JAVA_HOUSE_DIRECT_API.baseURL}${JAVA_HOUSE_DIRECT_API.endpoints.delivery}`);\r\n      if (response.ok) {\r\n        return await response.json();\r\n      }\r\n    } catch (error) {\r\n      console.log('Using mock delivery info');\r\n    }\r\n    \r\n    return this.getEnhancedMockMenu().deliveryInfo;\r\n  },\r\n\r\n  // Get all locations\r\n  async getLocations() {\r\n    try {\r\n      const response = await fetch(`${JAVA_HOUSE_DIRECT_API.baseURL}${JAVA_HOUSE_DIRECT_API.endpoints.locations}`);\r\n      if (response.ok) {\r\n        return await response.json();\r\n      }\r\n    } catch (error) {\r\n      console.log('Using mock locations');\r\n    }\r\n    \r\n    return this.getEnhancedMockMenu().locations;\r\n  }\r\n};\r\n\r\nexport default javaHouseAPI;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}