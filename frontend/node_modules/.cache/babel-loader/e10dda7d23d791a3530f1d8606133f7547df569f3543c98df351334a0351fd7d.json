{"ast":null,"code":"// KFC Restaurant API Integration Service\n// This service provides multiple ways to get KFC's menu data\n\n// Base configuration\nconst KFC_CONFIG = {\n  name: 'KFC',\n  location: 'Multiple locations across Kenya',\n  phone: '+254 20 666 6666',\n  website: 'https://www.kfc.co.ke',\n  coordinates: {\n    lat: -1.2921,\n    lng: 36.8219\n  },\n  // Nairobi location\n  description: 'World-famous fried chicken restaurant serving crispy, flavorful chicken with signature herbs and spices',\n  founded: 1930,\n  branches: 25,\n  specialties: ['Fried Chicken', 'Chicken Burgers', 'Chicken Wings', 'Sides', 'Desserts', 'Beverages']\n};\n\n// Option 1: Direct API endpoints (if KFC has them)\nconst KFC_DIRECT_API = {\n  baseURL: 'https://api.kfc.co.ke',\n  // Hypothetical API endpoint\n  endpoints: {\n    menu: '/api/v1/menu',\n    promotions: '/api/v1/promotions',\n    locations: '/api/v1/locations',\n    delivery: '/api/v1/delivery',\n    deals: '/api/v1/deals',\n    rewards: '/api/v1/rewards'\n  }\n};\n\n// Option 2: Jumia Food API integration\nconst JUMIA_FOOD_API = {\n  baseURL: 'https://food.jumia.co.ke/api',\n  endpoints: {\n    search: '/restaurants/search',\n    menu: '/restaurants/{id}/menu',\n    categories: '/categories'\n  },\n  headers: {\n    'Authorization': 'Bearer YOUR_JUMIA_API_KEY',\n    'Content-Type': 'application/json'\n  }\n};\n\n// Option 3: Glovo API integration\nconst GLOVO_API = {\n  baseURL: 'https://api.glovoapp.com',\n  endpoints: {\n    restaurants: '/v3/restaurants',\n    menu: '/v3/restaurants/{id}/menu',\n    categories: '/v3/categories'\n  },\n  headers: {\n    'Authorization': 'Bearer YOUR_GLOVO_API_KEY',\n    'Content-Type': 'application/json'\n  }\n};\n\n// Main API functions\nexport const kfcAPI = {\n  // Get full menu with real-time data\n  async getFullMenu() {\n    try {\n      // Try to get real chicken data first from Spoonacular\n      const realMenu = await this.getRealChickenMenu();\n      if (realMenu && realMenu.length > 0) {\n        console.log('‚úÖ Real chicken data loaded successfully from Spoonacular');\n        return {\n          restaurant: KFC_CONFIG,\n          menu: realMenu,\n          promotions: this.getPromotions(),\n          deals: this.getDeals(),\n          rewards: this.getRewards(),\n          customization: this.getCustomization(),\n          locations: this.getLocations()\n        };\n      }\n\n      // Fallback to enhanced mock data\n      console.log('‚ö†Ô∏è Using enhanced mock data as fallback');\n      return this.getEnhancedMockMenu();\n    } catch (error) {\n      console.error('Error fetching KFC menu:', error);\n      return this.getEnhancedMockMenu();\n    }\n  },\n  // Get real chicken data from Spoonacular API\n  async getRealChickenMenu() {\n    try {\n      console.log('üçó Fetching from Spoonacular Chicken API...');\n\n      // Use the working Spoonacular API endpoint for chicken\n      const chickenResponse = await fetch('https://api.spoonacular.com/recipes/complexSearch?query=chicken&number=20&apiKey=0264506281e5448c81a956ff1f4f1d82');\n      console.log('üì° Chicken API Response status:', chickenResponse.status);\n      if (!chickenResponse.ok) {\n        throw new Error(`Chicken API request failed: ${chickenResponse.status}`);\n      }\n      const chickenData = await chickenResponse.json();\n      console.log('‚úÖ Successfully fetched chicken data from Spoonacular:', chickenData);\n\n      // Also get sides and drinks\n      const sidesResponse = await fetch('https://api.spoonacular.com/recipes/complexSearch?query=side&number=10&apiKey=0264506281e5448c81a956ff1f4f1d82');\n      console.log('üì° Sides API Response status:', sidesResponse.status);\n      let sidesData = null;\n      if (sidesResponse.ok) {\n        sidesData = await sidesResponse.json();\n        console.log('‚úÖ Successfully fetched sides data from Spoonacular:', sidesData);\n      }\n\n      // Transform real data to our format\n      const transformedMenu = [];\n\n      // Add real chicken dishes from Spoonacular\n      if (chickenData.results && chickenData.results.length > 0) {\n        console.log(`üçó Found ${chickenData.results.length} chicken dishes from Spoonacular API`);\n\n        // Show ALL chicken dishes from the API\n        for (let i = 0; i < chickenData.results.length; i++) {\n          const chicken = chickenData.results[i];\n          console.log(`üçó Processing chicken dish ${i + 1}:`, chicken.title);\n          transformedMenu.push({\n            id: `chicken-${chicken.id}`,\n            name: chicken.title,\n            description: 'Delicious chicken dish made with KFC\\'s signature herbs and spices',\n            price: this.generateChickenPrice(),\n            category: 'Chicken',\n            image: chicken.image || '/images/food/placeholder-food.jpg',\n            calories: Math.floor(Math.random() * 400) + 300,\n            serves: '1 person',\n            preparationTime: '15-25 min',\n            isPromo: Math.random() > 0.7,\n            promoText: 'Hot Deal!',\n            signature: Math.random() > 0.8,\n            size: ['Small', 'Medium', 'Large'][Math.floor(Math.random() * 3)],\n            spiceLevel: ['Mild', 'Medium', 'Hot', 'Extra Hot'][Math.floor(Math.random() * 4)],\n            tags: ['Fresh', 'Crispy', 'Spicy'],\n            allergens: ['Gluten', 'Dairy'],\n            type: ['Fried', 'Grilled', 'Baked'][Math.floor(Math.random() * 3)]\n          });\n        }\n      } else {\n        console.warn('‚ö†Ô∏è No chicken data found from Spoonacular API');\n      }\n\n      // Add real sides if we have any\n      if (sidesData && sidesData.results && sidesData.results.length > 0) {\n        console.log(`ü•î Found ${sidesData.results.length} sides from Spoonacular API`);\n\n        // Show ALL sides from the API\n        for (let i = 0; i < sidesData.results.length; i++) {\n          const side = sidesData.results[i];\n          console.log(`ü•î Processing side ${i + 1}:`, side.title);\n          transformedMenu.push({\n            id: `side-${side.id}`,\n            name: side.title,\n            description: 'Delicious side dish to complement your chicken meal',\n            price: this.generateSidePrice(),\n            category: 'Sides',\n            image: side.image || '/images/food/placeholder-food.jpg',\n            calories: Math.floor(Math.random() * 200) + 100,\n            serves: '1 person',\n            preparationTime: '5-10 min',\n            isPromo: Math.random() > 0.8,\n            promoText: 'Combo Deal!',\n            tags: ['Fresh', 'Hot'],\n            allergens: ['Gluten'],\n            spiceLevel: 'None'\n          });\n        }\n      } else {\n        console.warn('‚ö†Ô∏è No sides data found from Spoonacular API');\n      }\n\n      // Add some mock desserts and beverages to complete the menu\n      transformedMenu.push(...this.getMockDessertsAndBeverages());\n      console.log(`‚úÖ Successfully transformed ${transformedMenu.length} menu items`);\n      return transformedMenu;\n    } catch (error) {\n      console.error('‚ùå Error fetching real chicken data from Spoonacular:', error);\n      console.log('üîÑ Falling back to mock data...');\n      return null;\n    }\n  },\n  // Try direct KFC API\n  async getDirectMenu() {\n    try {\n      const response = await fetch(`${KFC_DIRECT_API.baseURL}${KFC_DIRECT_API.endpoints.menu}`);\n      if (response.ok) {\n        const data = await response.json();\n        return this.transformDirectMenuData(data);\n      }\n    } catch (error) {\n      console.log('Direct API not available, trying alternatives...');\n    }\n    return null;\n  },\n  // Try Jumia Food API\n  async getJumiaMenu() {\n    try {\n      // Search for KFC on Jumia Food\n      const searchResponse = await fetch(`${JUMIA_FOOD_API.baseURL}${JUMIA_FOOD_API.endpoints.search}?q=kfc`, {\n        headers: JUMIA_FOOD_API.headers\n      });\n      if (searchResponse.ok) {\n        const searchData = await searchResponse.json();\n        const kfcId = this.findKFCId(searchData);\n        if (kfcId) {\n          const menuResponse = await fetch(`${JUMIA_FOOD_API.baseURL}${JUMIA_FOOD_API.endpoints.menu.replace('{id}', kfcId)}`, {\n            headers: JUMIA_FOOD_API.headers\n          });\n          if (menuResponse.ok) {\n            const menuData = await menuResponse.json();\n            return this.transformJumiaMenuData(menuData);\n          }\n        }\n      }\n    } catch (error) {\n      console.log('Jumia Food API not available, trying alternatives...');\n    }\n    return null;\n  },\n  // Try Glovo API\n  async getGlovoMenu() {\n    try {\n      // Search for KFC on Glovo\n      const searchResponse = await fetch(`${GLOVO_API.baseURL}${GLOVO_API.endpoints.restaurants}?search=kfc`, {\n        headers: GLOVO_API.headers\n      });\n      if (searchResponse.ok) {\n        const searchData = await searchResponse.json();\n        const kfcId = this.findKFCId(searchData);\n        if (kfcId) {\n          const menuResponse = await fetch(`${GLOVO_API.baseURL}${GLOVO_API.endpoints.menu.replace('{id}', kfcId)}`, {\n            headers: GLOVO_API.headers\n          });\n          if (menuResponse.ok) {\n            const menuData = await menuResponse.json();\n            return this.transformGlovoMenuData(menuData);\n          }\n        }\n      }\n    } catch (error) {\n      console.log('Glovo API not available, using fallback...');\n    }\n    return null;\n  },\n  // Enhanced mock menu with realistic KFC data\n  getEnhancedMockMenu() {\n    return {\n      restaurant: KFC_CONFIG,\n      categories: {\n        'Signature Fried Chicken': [{\n          id: 'sfc-001',\n          name: 'Original Recipe Chicken (2 Pcs)',\n          price: 'KES 450',\n          description: 'KFC\\'s world-famous fried chicken with 11 herbs and spices',\n          category: 'Signature Fried Chicken',\n          image: '/images/food/kfc-original-chicken.jpg',\n          isPromo: true,\n          promoText: 'Most Popular!',\n          calories: '320',\n          serves: '1 person',\n          allergens: ['Chicken', 'Gluten', 'Soy'],\n          preparationTime: '8-12 min',\n          spiceLevel: 'Mild',\n          tags: ['Signature', 'Original Recipe', 'Crispy'],\n          vegetarian: false,\n          signature: true\n        }, {\n          id: 'sfc-002',\n          name: 'Original Recipe Chicken (8 Pcs)',\n          price: 'KES 1,200',\n          description: 'Family pack of KFC\\'s signature fried chicken',\n          category: 'Signature Fried Chicken',\n          image: '/images/food/kfc-8pc-chicken.jpg',\n          isPromo: false,\n          calories: '1,280',\n          serves: '4 people',\n          allergens: ['Chicken', 'Gluten', 'Soy'],\n          preparationTime: '10-15 min',\n          spiceLevel: 'Mild',\n          tags: ['Family Pack', 'Original Recipe', 'Shareable'],\n          vegetarian: false,\n          signature: true\n        }, {\n          id: 'sfc-003',\n          name: 'Spicy Fried Chicken (2 Pcs)',\n          price: 'KES 480',\n          description: 'Extra spicy fried chicken with hot sauce coating',\n          category: 'Signature Fried Chicken',\n          image: '/images/food/kfc-spicy-chicken.jpg',\n          isPromo: false,\n          calories: '340',\n          serves: '1 person',\n          allergens: ['Chicken', 'Gluten', 'Soy'],\n          preparationTime: '8-12 min',\n          spiceLevel: 'Hot',\n          tags: ['Spicy', 'Hot Sauce', 'Crispy'],\n          vegetarian: false,\n          signature: true\n        }],\n        'Chicken Burgers': [{\n          id: 'cb-001',\n          name: 'Zinger Burger',\n          price: 'KES 380',\n          description: 'Crispy chicken fillet with lettuce, mayo, and spicy sauce',\n          category: 'Chicken Burgers',\n          image: '/images/food/kfc-zinger-burger.jpg',\n          isPromo: true,\n          promoText: 'Best Seller',\n          calories: '420',\n          serves: '1 person',\n          allergens: ['Chicken', 'Gluten', 'Eggs', 'Mayo'],\n          preparationTime: '5-8 min',\n          spiceLevel: 'Medium',\n          tags: ['Burger', 'Spicy', 'Crispy'],\n          vegetarian: false,\n          signature: true\n        }, {\n          id: 'cb-002',\n          name: 'Chicken Fillet Burger',\n          price: 'KES 350',\n          description: 'Grilled chicken fillet with fresh lettuce and mayo',\n          category: 'Chicken Burgers',\n          image: '/images/food/kfc-chicken-fillet.jpg',\n          isPromo: false,\n          calories: '380',\n          serves: '1 person',\n          allergens: ['Chicken', 'Gluten', 'Mayo'],\n          preparationTime: '5-8 min',\n          spiceLevel: 'Mild',\n          tags: ['Burger', 'Grilled', 'Healthy'],\n          vegetarian: false,\n          signature: false\n        }, {\n          id: 'cb-003',\n          name: 'Double Down',\n          price: 'KES 550',\n          description: 'Two chicken fillets with cheese and bacon, no bun',\n          category: 'Chicken Burgers',\n          image: '/images/food/kfc-double-down.jpg',\n          isPromo: false,\n          calories: '680',\n          serves: '1 person',\n          allergens: ['Chicken', 'Cheese', 'Bacon'],\n          preparationTime: '8-12 min',\n          spiceLevel: 'Mild',\n          tags: ['No Bun', 'Cheese', 'Bacon'],\n          vegetarian: false,\n          signature: true\n        }],\n        'Chicken Wings & Tenders': [{\n          id: 'cwt-001',\n          name: 'Hot Wings (6 Pcs)',\n          price: 'KES 320',\n          description: 'Spicy chicken wings with hot sauce',\n          category: 'Chicken Wings & Tenders',\n          image: '/images/food/kfc-hot-wings.jpg',\n          isPromo: false,\n          calories: '280',\n          serves: '1 person',\n          allergens: ['Chicken', 'Gluten', 'Hot Sauce'],\n          preparationTime: '6-8 min',\n          spiceLevel: 'Hot',\n          tags: ['Wings', 'Spicy', 'Hot Sauce'],\n          vegetarian: false,\n          signature: false\n        }, {\n          id: 'cwt-002',\n          name: 'Chicken Tenders (4 Pcs)',\n          price: 'KES 280',\n          description: 'Breaded chicken tenders with dipping sauce',\n          category: 'Chicken Wings & Tenders',\n          image: '/images/food/kfc-chicken-tenders.jpg',\n          isPromo: false,\n          calories: '240',\n          serves: '1 person',\n          allergens: ['Chicken', 'Gluten'],\n          preparationTime: '5-8 min',\n          spiceLevel: 'Mild',\n          tags: ['Tenders', 'Breaded', 'Dipping Sauce'],\n          vegetarian: false,\n          signature: false\n        }],\n        'Sides & Snacks': [{\n          id: 'ss-001',\n          name: 'French Fries',\n          price: 'KES 180',\n          description: 'Crispy golden fries seasoned with salt',\n          category: 'Sides & Snacks',\n          image: '/images/food/kfc-french-fries.jpg',\n          isPromo: false,\n          calories: '220',\n          serves: '1 person',\n          allergens: ['Potatoes'],\n          preparationTime: '3-5 min',\n          spiceLevel: 'None',\n          tags: ['Fries', 'Crispy', 'Golden'],\n          vegetarian: true,\n          signature: false\n        }, {\n          id: 'ss-002',\n          name: 'Coleslaw',\n          price: 'KES 150',\n          description: 'Fresh cabbage salad with creamy dressing',\n          category: 'Sides & Snacks',\n          image: '/images/food/kfc-coleslaw.jpg',\n          isPromo: false,\n          calories: '120',\n          serves: '1 person',\n          allergens: ['Mayo', 'Dairy'],\n          preparationTime: '2-3 min',\n          spiceLevel: 'None',\n          tags: ['Salad', 'Creamy', 'Fresh'],\n          vegetarian: true,\n          signature: false\n        }, {\n          id: 'ss-003',\n          name: 'Mashed Potatoes & Gravy',\n          price: 'KES 200',\n          description: 'Creamy mashed potatoes with rich chicken gravy',\n          category: 'Sides & Snacks',\n          image: '/images/food/kfc-mashed-potatoes.jpg',\n          isPromo: false,\n          calories: '180',\n          serves: '1 person',\n          allergens: ['Dairy', 'Gluten'],\n          preparationTime: '3-5 min',\n          spiceLevel: 'None',\n          tags: ['Mashed', 'Gravy', 'Creamy'],\n          vegetarian: false,\n          signature: false\n        }, {\n          id: 'ss-004',\n          name: 'Popcorn Chicken',\n          price: 'KES 250',\n          description: 'Bite-sized crispy chicken pieces',\n          category: 'Sides & Snacks',\n          image: '/images/food/kfc-popcorn-chicken.jpg',\n          isPromo: false,\n          calories: '320',\n          serves: '1 person',\n          allergens: ['Chicken', 'Gluten'],\n          preparationTime: '4-6 min',\n          spiceLevel: 'Mild',\n          tags: ['Bite-sized', 'Crispy', 'Snack'],\n          vegetarian: false,\n          signature: false\n        }],\n        'Desserts': [{\n          id: 'ds-001',\n          name: 'Chocolate Fudge Cake',\n          price: 'KES 350',\n          description: 'Rich chocolate cake with fudge frosting',\n          category: 'Desserts',\n          image: '/images/food/kfc-chocolate-cake.jpg',\n          isPromo: false,\n          calories: '380',\n          serves: '1 person',\n          allergens: ['Chocolate', 'Gluten', 'Eggs'],\n          preparationTime: '2-3 min',\n          spiceLevel: 'None',\n          tags: ['Chocolate', 'Fudge', 'Rich'],\n          vegetarian: true,\n          signature: false\n        }, {\n          id: 'ds-002',\n          name: 'Ice Cream Sundae',\n          price: 'KES 280',\n          description: 'Vanilla ice cream with chocolate sauce and sprinkles',\n          category: 'Desserts',\n          image: '/images/food/kfc-ice-cream.jpg',\n          isPromo: false,\n          calories: '280',\n          serves: '1 person',\n          allergens: ['Dairy', 'Chocolate'],\n          preparationTime: '2-3 min',\n          spiceLevel: 'None',\n          tags: ['Ice Cream', 'Chocolate', 'Sweet'],\n          vegetarian: true,\n          signature: false\n        }],\n        'Beverages': [{\n          id: 'bv-001',\n          name: 'Coca Cola (500ml)',\n          price: 'KES 120',\n          description: 'Refreshing Coca Cola soft drink',\n          category: 'Beverages',\n          image: '/images/food/kfc-coca-cola.jpg',\n          isPromo: false,\n          calories: '210',\n          serves: '1 person',\n          allergens: ['None'],\n          preparationTime: '1-2 min',\n          spiceLevel: 'None',\n          tags: ['Soft Drink', 'Refreshing', 'Classic'],\n          vegetarian: true,\n          signature: false\n        }, {\n          id: 'bv-002',\n          name: 'Sprite (500ml)',\n          price: 'KES 120',\n          description: 'Clear lemon-lime soft drink',\n          category: 'Beverages',\n          image: '/images/food/kfc-sprite.jpg',\n          isPromo: false,\n          calories: '200',\n          serves: '1 person',\n          allergens: ['None'],\n          preparationTime: '1-2 min',\n          spiceLevel: 'None',\n          tags: ['Soft Drink', 'Lemon-Lime', 'Clear'],\n          vegetarian: true,\n          signature: false\n        }, {\n          id: 'bv-003',\n          name: 'Fanta Orange (500ml)',\n          price: 'KES 120',\n          description: 'Orange flavored soft drink',\n          category: 'Beverages',\n          image: '/images/food/kfc-fanta.jpg',\n          isPromo: false,\n          calories: '200',\n          serves: '1 person',\n          allergens: ['None'],\n          preparationTime: '1-2 min',\n          spiceLevel: 'None',\n          tags: ['Soft Drink', 'Orange', 'Fruity'],\n          vegetarian: true,\n          signature: false\n        }]\n      },\n      promotions: [{\n        id: 'promo-001',\n        title: 'Family Bucket Deal',\n        description: '8 pieces of chicken + 2 large sides + 4 drinks for only KES 2,500',\n        discount: 'Save KES 500',\n        validUntil: '2024-12-31',\n        code: 'FAMILYBUCKET',\n        timing: 'Available Daily'\n      }, {\n        id: 'promo-002',\n        title: 'Zinger Tuesday',\n        description: 'Buy any Zinger burger, get free fries every Tuesday',\n        discount: 'Free Fries',\n        validUntil: '2024-12-31',\n        code: 'ZINGERTUESDAY',\n        timing: 'Every Tuesday'\n      }, {\n        id: 'promo-003',\n        title: 'Student Discount',\n        description: '15% off on all orders with valid student ID',\n        discount: '15%',\n        validUntil: '2024-12-31',\n        code: 'STUDENT15',\n        requirements: 'Valid student ID required'\n      }],\n      deliveryInfo: {\n        available: true,\n        services: ['Jumia Food', 'Glovo', 'Uber Eats', 'Own Delivery'],\n        deliveryTime: '25-40 minutes',\n        deliveryFee: 'KES 150',\n        minimumOrder: 'KES 800',\n        freeDeliveryThreshold: 'KES 2,000'\n      },\n      locations: ['Westlands', 'CBD', 'Kilimani', 'Lavington', 'Karen', 'Mombasa Road', 'Thika Road', 'Nakuru', 'Mombasa', 'Kisumu'],\n      deals: ['Family Bucket Deal', 'Zinger Tuesday', 'Student Discount', 'Lunch Special', 'Happy Hour'],\n      rewards: {\n        available: true,\n        program: 'KFC Rewards',\n        benefits: ['Points on every order', 'Free items', 'Birthday treats', 'Exclusive offers']\n      }\n    };\n  },\n  // Helper functions\n  findKFCId(searchData) {\n    var _searchData$restauran;\n    // Logic to find KFC's ID in search results\n    const kfc = (_searchData$restauran = searchData.restaurants) === null || _searchData$restauran === void 0 ? void 0 : _searchData$restauran.find(r => r.name.toLowerCase().includes('kfc') || r.name.toLowerCase().includes('kentucky fried chicken'));\n    return kfc === null || kfc === void 0 ? void 0 : kfc.id;\n  },\n  transformDirectMenuData(data) {\n    // Transform direct API data to our format\n    return {\n      restaurant: KFC_CONFIG,\n      categories: data.categories || {},\n      promotions: data.promotions || [],\n      deliveryInfo: data.delivery || {},\n      locations: data.locations || [],\n      deals: data.deals || [],\n      rewards: data.rewards || {}\n    };\n  },\n  transformJumiaMenuData(data) {\n    // Transform Jumia Food data to our format\n    return {\n      restaurant: KFC_CONFIG,\n      categories: this.groupByCategory(data.menu || []),\n      promotions: data.promotions || [],\n      deliveryInfo: {\n        available: true,\n        services: ['Jumia Food'],\n        deliveryTime: data.deliveryTime || '25-40 minutes',\n        deliveryFee: data.deliveryFee || 'KES 150',\n        minimumOrder: data.minimumOrder || 'KES 800'\n      },\n      locations: data.locations || [],\n      deals: data.deals || [],\n      rewards: data.rewards || {}\n    };\n  },\n  transformGlovoMenuData(data) {\n    // Transform Glovo data to our format\n    return {\n      restaurant: KFC_CONFIG,\n      categories: this.groupByCategory(data.menu || []),\n      promotions: data.promotions || [],\n      deliveryInfo: {\n        available: true,\n        services: ['Glovo'],\n        deliveryTime: data.deliveryTime || '25-40 minutes',\n        deliveryFee: data.deliveryFee || 'KES 150',\n        minimumOrder: data.minimumOrder || 'KES 800'\n      },\n      locations: data.locations || [],\n      deals: data.deals || [],\n      rewards: data.rewards || {}\n    };\n  },\n  groupByCategory(menuItems) {\n    // Group menu items by category\n    const categories = {};\n    menuItems.forEach(item => {\n      if (!categories[item.category]) {\n        categories[item.category] = [];\n      }\n      categories[item.category].push(item);\n    });\n    return categories;\n  },\n  // Get restaurant information\n  getRestaurantInfo() {\n    return KFC_CONFIG;\n  },\n  // Get current promotions\n  async getPromotions() {\n    try {\n      const response = await fetch(`${KFC_DIRECT_API.baseURL}${KFC_DIRECT_API.endpoints.promotions}`);\n      if (response.ok) {\n        return await response.json();\n      }\n    } catch (error) {\n      console.log('Using mock promotions');\n    }\n    return this.getEnhancedMockMenu().promotions;\n  },\n  // Check delivery availability\n  async checkDeliveryAvailability() {\n    try {\n      const response = await fetch(`${KFC_DIRECT_API.baseURL}${KFC_DIRECT_API.endpoints.delivery}`);\n      if (response.ok) {\n        return await response.json();\n      }\n    } catch (error) {\n      console.log('Using mock delivery info');\n    }\n    return this.getEnhancedMockMenu().deliveryInfo;\n  },\n  // Get deals\n  async getDeals() {\n    try {\n      const response = await fetch(`${KFC_DIRECT_API.baseURL}${KFC_DIRECT_API.endpoints.deals}`);\n      if (response.ok) {\n        return await response.json();\n      }\n    } catch (error) {\n      console.log('Using mock deals');\n    }\n    return this.getEnhancedMockMenu().deals;\n  },\n  // Get rewards info\n  async getRewards() {\n    try {\n      const response = await fetch(`${KFC_DIRECT_API.baseURL}${KFC_DIRECT_API.endpoints.rewards}`);\n      if (response.ok) {\n        return await response.json();\n      }\n    } catch (error) {\n      console.log('Using mock rewards info');\n    }\n    return this.getEnhancedMockMenu().rewards;\n  },\n  // Get all locations\n  async getLocations() {\n    try {\n      const response = await fetch(`${KFC_DIRECT_API.baseURL}${KFC_DIRECT_API.endpoints.locations}`);\n      if (response.ok) {\n        return await response.json();\n      }\n    } catch (error) {\n      console.log('Using mock locations');\n    }\n    return this.getEnhancedMockMenu().locations;\n  },\n  // Generate random prices for chicken dishes\n  generateChickenPrice() {\n    const basePrice = 300; // Base price for small chicken\n    const randomFactor = Math.random() * 1.5 + 0.5; // Random factor between 0.5 and 2.0\n    return `KES ${Math.round(basePrice * randomFactor)}`;\n  },\n  // Generate random prices for sides\n  generateSidePrice() {\n    const basePrice = 100; // Base price for small sides\n    const randomFactor = Math.random() * 1.2 + 0.8; // Random factor between 0.8 and 2.0\n    return `KES ${Math.round(basePrice * randomFactor)}`;\n  },\n  // Get mock desserts and beverages for the real chicken menu\n  getMockDessertsAndBeverages() {\n    const mockDesserts = [{\n      id: 'ds-003',\n      name: 'Chocolate Chip Cookies',\n      price: 'KES 150',\n      description: 'Classic chocolate chip cookies',\n      category: 'Desserts',\n      image: '/images/food/kfc-chocolate-chip-cookies.jpg',\n      isPromo: false,\n      calories: '150',\n      serves: '1 person',\n      allergens: ['Dairy', 'Gluten'],\n      preparationTime: '2-3 min',\n      spiceLevel: 'None',\n      tags: ['Cookies', 'Chocolate', 'Sweet'],\n      vegetarian: true,\n      signature: false\n    }, {\n      id: 'ds-004',\n      name: 'Vanilla Milkshake',\n      price: 'KES 200',\n      description: 'Creamy vanilla milkshake',\n      category: 'Beverages',\n      image: '/images/food/kfc-vanilla-milkshake.jpg',\n      isPromo: false,\n      calories: '250',\n      serves: '1 person',\n      allergens: ['Dairy'],\n      preparationTime: '2-3 min',\n      spiceLevel: 'None',\n      tags: ['Milkshake', 'Vanilla', 'Creamy'],\n      vegetarian: true,\n      signature: false\n    }];\n    return mockDesserts;\n  },\n  // Get customization options (e.g., spice levels, sizes)\n  getCustomization() {\n    return {\n      chicken: {\n        sizes: ['Small', 'Medium', 'Large'],\n        spiceLevels: ['Mild', 'Medium', 'Hot', 'Extra Hot']\n      },\n      sides: {\n        sizes: ['Small', 'Medium', 'Large']\n      },\n      beverages: {\n        sizes: ['Small', 'Medium', 'Large']\n      }\n    };\n  }\n};\nexport default kfcAPI;","map":{"version":3,"names":["KFC_CONFIG","name","location","phone","website","coordinates","lat","lng","description","founded","branches","specialties","KFC_DIRECT_API","baseURL","endpoints","menu","promotions","locations","delivery","deals","rewards","JUMIA_FOOD_API","search","categories","headers","GLOVO_API","restaurants","kfcAPI","getFullMenu","realMenu","getRealChickenMenu","length","console","log","restaurant","getPromotions","getDeals","getRewards","customization","getCustomization","getLocations","getEnhancedMockMenu","error","chickenResponse","fetch","status","ok","Error","chickenData","json","sidesResponse","sidesData","transformedMenu","results","i","chicken","title","push","id","price","generateChickenPrice","category","image","calories","Math","floor","random","serves","preparationTime","isPromo","promoText","signature","size","spiceLevel","tags","allergens","type","warn","side","generateSidePrice","getMockDessertsAndBeverages","getDirectMenu","response","data","transformDirectMenuData","getJumiaMenu","searchResponse","searchData","kfcId","findKFCId","menuResponse","replace","menuData","transformJumiaMenuData","getGlovoMenu","transformGlovoMenuData","vegetarian","discount","validUntil","code","timing","requirements","deliveryInfo","available","services","deliveryTime","deliveryFee","minimumOrder","freeDeliveryThreshold","program","benefits","_searchData$restauran","kfc","find","r","toLowerCase","includes","groupByCategory","menuItems","forEach","item","getRestaurantInfo","checkDeliveryAvailability","basePrice","randomFactor","round","mockDesserts","sizes","spiceLevels","sides","beverages"],"sources":["C:/Projects/gawa/frontend/src/api/kfcAPI.js"],"sourcesContent":["// KFC Restaurant API Integration Service\r\n// This service provides multiple ways to get KFC's menu data\r\n\r\n// Base configuration\r\nconst KFC_CONFIG = {\r\n  name: 'KFC',\r\n  location: 'Multiple locations across Kenya',\r\n  phone: '+254 20 666 6666',\r\n  website: 'https://www.kfc.co.ke',\r\n  coordinates: { lat: -1.2921, lng: 36.8219 }, // Nairobi location\r\n  description: 'World-famous fried chicken restaurant serving crispy, flavorful chicken with signature herbs and spices',\r\n  founded: 1930,\r\n  branches: 25,\r\n  specialties: ['Fried Chicken', 'Chicken Burgers', 'Chicken Wings', 'Sides', 'Desserts', 'Beverages']\r\n};\r\n\r\n// Option 1: Direct API endpoints (if KFC has them)\r\nconst KFC_DIRECT_API = {\r\n  baseURL: 'https://api.kfc.co.ke', // Hypothetical API endpoint\r\n  endpoints: {\r\n    menu: '/api/v1/menu',\r\n    promotions: '/api/v1/promotions',\r\n    locations: '/api/v1/locations',\r\n    delivery: '/api/v1/delivery',\r\n    deals: '/api/v1/deals',\r\n    rewards: '/api/v1/rewards'\r\n  }\r\n};\r\n\r\n// Option 2: Jumia Food API integration\r\nconst JUMIA_FOOD_API = {\r\n  baseURL: 'https://food.jumia.co.ke/api',\r\n  endpoints: {\r\n    search: '/restaurants/search',\r\n    menu: '/restaurants/{id}/menu',\r\n    categories: '/categories'\r\n  },\r\n  headers: {\r\n    'Authorization': 'Bearer YOUR_JUMIA_API_KEY',\r\n    'Content-Type': 'application/json'\r\n  }\r\n};\r\n\r\n// Option 3: Glovo API integration\r\nconst GLOVO_API = {\r\n  baseURL: 'https://api.glovoapp.com',\r\n  endpoints: {\r\n    restaurants: '/v3/restaurants',\r\n    menu: '/v3/restaurants/{id}/menu',\r\n    categories: '/v3/categories'\r\n  },\r\n  headers: {\r\n    'Authorization': 'Bearer YOUR_GLOVO_API_KEY',\r\n    'Content-Type': 'application/json'\r\n  }\r\n};\r\n\r\n// Main API functions\r\nexport const kfcAPI = {\r\n  // Get full menu with real-time data\r\n  async getFullMenu() {\r\n    try {\r\n      // Try to get real chicken data first from Spoonacular\r\n      const realMenu = await this.getRealChickenMenu();\r\n      if (realMenu && realMenu.length > 0) {\r\n        console.log('‚úÖ Real chicken data loaded successfully from Spoonacular');\r\n        return {\r\n          restaurant: KFC_CONFIG,\r\n          menu: realMenu,\r\n          promotions: this.getPromotions(),\r\n          deals: this.getDeals(),\r\n          rewards: this.getRewards(),\r\n          customization: this.getCustomization(),\r\n          locations: this.getLocations()\r\n        };\r\n      }\r\n      \r\n      // Fallback to enhanced mock data\r\n      console.log('‚ö†Ô∏è Using enhanced mock data as fallback');\r\n      return this.getEnhancedMockMenu();\r\n    } catch (error) {\r\n      console.error('Error fetching KFC menu:', error);\r\n      return this.getEnhancedMockMenu();\r\n    }\r\n  },\r\n\r\n  // Get real chicken data from Spoonacular API\r\n  async getRealChickenMenu() {\r\n    try {\r\n      console.log('üçó Fetching from Spoonacular Chicken API...');\r\n      \r\n      // Use the working Spoonacular API endpoint for chicken\r\n      const chickenResponse = await fetch('https://api.spoonacular.com/recipes/complexSearch?query=chicken&number=20&apiKey=0264506281e5448c81a956ff1f4f1d82');\r\n      console.log('üì° Chicken API Response status:', chickenResponse.status);\r\n      \r\n      if (!chickenResponse.ok) {\r\n        throw new Error(`Chicken API request failed: ${chickenResponse.status}`);\r\n      }\r\n      \r\n      const chickenData = await chickenResponse.json();\r\n      console.log('‚úÖ Successfully fetched chicken data from Spoonacular:', chickenData);\r\n      \r\n      // Also get sides and drinks\r\n      const sidesResponse = await fetch('https://api.spoonacular.com/recipes/complexSearch?query=side&number=10&apiKey=0264506281e5448c81a956ff1f4f1d82');\r\n      console.log('üì° Sides API Response status:', sidesResponse.status);\r\n      \r\n      let sidesData = null;\r\n      if (sidesResponse.ok) {\r\n        sidesData = await sidesResponse.json();\r\n        console.log('‚úÖ Successfully fetched sides data from Spoonacular:', sidesData);\r\n      }\r\n      \r\n      // Transform real data to our format\r\n      const transformedMenu = [];\r\n      \r\n      // Add real chicken dishes from Spoonacular\r\n      if (chickenData.results && chickenData.results.length > 0) {\r\n        console.log(`üçó Found ${chickenData.results.length} chicken dishes from Spoonacular API`);\r\n        \r\n        // Show ALL chicken dishes from the API\r\n        for (let i = 0; i < chickenData.results.length; i++) {\r\n          const chicken = chickenData.results[i];\r\n          console.log(`üçó Processing chicken dish ${i + 1}:`, chicken.title);\r\n          \r\n          transformedMenu.push({\r\n            id: `chicken-${chicken.id}`,\r\n            name: chicken.title,\r\n            description: 'Delicious chicken dish made with KFC\\'s signature herbs and spices',\r\n            price: this.generateChickenPrice(),\r\n            category: 'Chicken',\r\n            image: chicken.image || '/images/food/placeholder-food.jpg',\r\n            calories: Math.floor(Math.random() * 400) + 300,\r\n            serves: '1 person',\r\n            preparationTime: '15-25 min',\r\n            isPromo: Math.random() > 0.7,\r\n            promoText: 'Hot Deal!',\r\n            signature: Math.random() > 0.8,\r\n            size: ['Small', 'Medium', 'Large'][Math.floor(Math.random() * 3)],\r\n            spiceLevel: ['Mild', 'Medium', 'Hot', 'Extra Hot'][Math.floor(Math.random() * 4)],\r\n            tags: ['Fresh', 'Crispy', 'Spicy'],\r\n            allergens: ['Gluten', 'Dairy'],\r\n            type: ['Fried', 'Grilled', 'Baked'][Math.floor(Math.random() * 3)]\r\n          });\r\n        }\r\n      } else {\r\n        console.warn('‚ö†Ô∏è No chicken data found from Spoonacular API');\r\n      }\r\n      \r\n      // Add real sides if we have any\r\n      if (sidesData && sidesData.results && sidesData.results.length > 0) {\r\n        console.log(`ü•î Found ${sidesData.results.length} sides from Spoonacular API`);\r\n        \r\n        // Show ALL sides from the API\r\n        for (let i = 0; i < sidesData.results.length; i++) {\r\n          const side = sidesData.results[i];\r\n          console.log(`ü•î Processing side ${i + 1}:`, side.title);\r\n          \r\n          transformedMenu.push({\r\n            id: `side-${side.id}`,\r\n            name: side.title,\r\n            description: 'Delicious side dish to complement your chicken meal',\r\n            price: this.generateSidePrice(),\r\n            category: 'Sides',\r\n            image: side.image || '/images/food/placeholder-food.jpg',\r\n            calories: Math.floor(Math.random() * 200) + 100,\r\n            serves: '1 person',\r\n            preparationTime: '5-10 min',\r\n            isPromo: Math.random() > 0.8,\r\n            promoText: 'Combo Deal!',\r\n            tags: ['Fresh', 'Hot'],\r\n            allergens: ['Gluten'],\r\n            spiceLevel: 'None'\r\n          });\r\n        }\r\n      } else {\r\n        console.warn('‚ö†Ô∏è No sides data found from Spoonacular API');\r\n      }\r\n      \r\n      // Add some mock desserts and beverages to complete the menu\r\n      transformedMenu.push(...this.getMockDessertsAndBeverages());\r\n      \r\n      console.log(`‚úÖ Successfully transformed ${transformedMenu.length} menu items`);\r\n      return transformedMenu;\r\n      \r\n    } catch (error) {\r\n      console.error('‚ùå Error fetching real chicken data from Spoonacular:', error);\r\n      console.log('üîÑ Falling back to mock data...');\r\n      return null;\r\n    }\r\n  },\r\n\r\n  // Try direct KFC API\r\n  async getDirectMenu() {\r\n    try {\r\n      const response = await fetch(`${KFC_DIRECT_API.baseURL}${KFC_DIRECT_API.endpoints.menu}`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        return this.transformDirectMenuData(data);\r\n      }\r\n    } catch (error) {\r\n      console.log('Direct API not available, trying alternatives...');\r\n    }\r\n    return null;\r\n  },\r\n\r\n  // Try Jumia Food API\r\n  async getJumiaMenu() {\r\n    try {\r\n      // Search for KFC on Jumia Food\r\n      const searchResponse = await fetch(`${JUMIA_FOOD_API.baseURL}${JUMIA_FOOD_API.endpoints.search}?q=kfc`, {\r\n        headers: JUMIA_FOOD_API.headers\r\n      });\r\n      \r\n      if (searchResponse.ok) {\r\n        const searchData = await searchResponse.json();\r\n        const kfcId = this.findKFCId(searchData);\r\n        \r\n        if (kfcId) {\r\n          const menuResponse = await fetch(`${JUMIA_FOOD_API.baseURL}${JUMIA_FOOD_API.endpoints.menu.replace('{id}', kfcId)}`, {\r\n            headers: JUMIA_FOOD_API.headers\r\n          });\r\n          \r\n          if (menuResponse.ok) {\r\n            const menuData = await menuResponse.json();\r\n            return this.transformJumiaMenuData(menuData);\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log('Jumia Food API not available, trying alternatives...');\r\n    }\r\n    return null;\r\n  },\r\n\r\n  // Try Glovo API\r\n  async getGlovoMenu() {\r\n    try {\r\n      // Search for KFC on Glovo\r\n      const searchResponse = await fetch(`${GLOVO_API.baseURL}${GLOVO_API.endpoints.restaurants}?search=kfc`, {\r\n        headers: GLOVO_API.headers\r\n      });\r\n      \r\n      if (searchResponse.ok) {\r\n        const searchData = await searchResponse.json();\r\n        const kfcId = this.findKFCId(searchData);\r\n        \r\n        if (kfcId) {\r\n          const menuResponse = await fetch(`${GLOVO_API.baseURL}${GLOVO_API.endpoints.menu.replace('{id}', kfcId)}`, {\r\n            headers: GLOVO_API.headers\r\n          });\r\n          \r\n          if (menuResponse.ok) {\r\n            const menuData = await menuResponse.json();\r\n            return this.transformGlovoMenuData(menuData);\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log('Glovo API not available, using fallback...');\r\n    }\r\n    return null;\r\n  },\r\n\r\n  // Enhanced mock menu with realistic KFC data\r\n  getEnhancedMockMenu() {\r\n    return {\r\n      restaurant: KFC_CONFIG,\r\n      categories: {\r\n        'Signature Fried Chicken': [\r\n          {\r\n            id: 'sfc-001',\r\n            name: 'Original Recipe Chicken (2 Pcs)',\r\n            price: 'KES 450',\r\n            description: 'KFC\\'s world-famous fried chicken with 11 herbs and spices',\r\n            category: 'Signature Fried Chicken',\r\n            image: '/images/food/kfc-original-chicken.jpg',\r\n            isPromo: true,\r\n            promoText: 'Most Popular!',\r\n            calories: '320',\r\n            serves: '1 person',\r\n            allergens: ['Chicken', 'Gluten', 'Soy'],\r\n            preparationTime: '8-12 min',\r\n            spiceLevel: 'Mild',\r\n            tags: ['Signature', 'Original Recipe', 'Crispy'],\r\n            vegetarian: false,\r\n            signature: true\r\n          },\r\n          {\r\n            id: 'sfc-002',\r\n            name: 'Original Recipe Chicken (8 Pcs)',\r\n            price: 'KES 1,200',\r\n            description: 'Family pack of KFC\\'s signature fried chicken',\r\n            category: 'Signature Fried Chicken',\r\n            image: '/images/food/kfc-8pc-chicken.jpg',\r\n            isPromo: false,\r\n            calories: '1,280',\r\n            serves: '4 people',\r\n            allergens: ['Chicken', 'Gluten', 'Soy'],\r\n            preparationTime: '10-15 min',\r\n            spiceLevel: 'Mild',\r\n            tags: ['Family Pack', 'Original Recipe', 'Shareable'],\r\n            vegetarian: false,\r\n            signature: true\r\n          },\r\n          {\r\n            id: 'sfc-003',\r\n            name: 'Spicy Fried Chicken (2 Pcs)',\r\n            price: 'KES 480',\r\n            description: 'Extra spicy fried chicken with hot sauce coating',\r\n            category: 'Signature Fried Chicken',\r\n            image: '/images/food/kfc-spicy-chicken.jpg',\r\n            isPromo: false,\r\n            calories: '340',\r\n            serves: '1 person',\r\n            allergens: ['Chicken', 'Gluten', 'Soy'],\r\n            preparationTime: '8-12 min',\r\n            spiceLevel: 'Hot',\r\n            tags: ['Spicy', 'Hot Sauce', 'Crispy'],\r\n            vegetarian: false,\r\n            signature: true\r\n          }\r\n        ],\r\n        'Chicken Burgers': [\r\n          {\r\n            id: 'cb-001',\r\n            name: 'Zinger Burger',\r\n            price: 'KES 380',\r\n            description: 'Crispy chicken fillet with lettuce, mayo, and spicy sauce',\r\n            category: 'Chicken Burgers',\r\n            image: '/images/food/kfc-zinger-burger.jpg',\r\n            isPromo: true,\r\n            promoText: 'Best Seller',\r\n            calories: '420',\r\n            serves: '1 person',\r\n            allergens: ['Chicken', 'Gluten', 'Eggs', 'Mayo'],\r\n            preparationTime: '5-8 min',\r\n            spiceLevel: 'Medium',\r\n            tags: ['Burger', 'Spicy', 'Crispy'],\r\n            vegetarian: false,\r\n            signature: true\r\n          },\r\n          {\r\n            id: 'cb-002',\r\n            name: 'Chicken Fillet Burger',\r\n            price: 'KES 350',\r\n            description: 'Grilled chicken fillet with fresh lettuce and mayo',\r\n            category: 'Chicken Burgers',\r\n            image: '/images/food/kfc-chicken-fillet.jpg',\r\n            isPromo: false,\r\n            calories: '380',\r\n            serves: '1 person',\r\n            allergens: ['Chicken', 'Gluten', 'Mayo'],\r\n            preparationTime: '5-8 min',\r\n            spiceLevel: 'Mild',\r\n            tags: ['Burger', 'Grilled', 'Healthy'],\r\n            vegetarian: false,\r\n            signature: false\r\n          },\r\n          {\r\n            id: 'cb-003',\r\n            name: 'Double Down',\r\n            price: 'KES 550',\r\n            description: 'Two chicken fillets with cheese and bacon, no bun',\r\n            category: 'Chicken Burgers',\r\n            image: '/images/food/kfc-double-down.jpg',\r\n            isPromo: false,\r\n            calories: '680',\r\n            serves: '1 person',\r\n            allergens: ['Chicken', 'Cheese', 'Bacon'],\r\n            preparationTime: '8-12 min',\r\n            spiceLevel: 'Mild',\r\n            tags: ['No Bun', 'Cheese', 'Bacon'],\r\n            vegetarian: false,\r\n            signature: true\r\n          }\r\n        ],\r\n        'Chicken Wings & Tenders': [\r\n          {\r\n            id: 'cwt-001',\r\n            name: 'Hot Wings (6 Pcs)',\r\n            price: 'KES 320',\r\n            description: 'Spicy chicken wings with hot sauce',\r\n            category: 'Chicken Wings & Tenders',\r\n            image: '/images/food/kfc-hot-wings.jpg',\r\n            isPromo: false,\r\n            calories: '280',\r\n            serves: '1 person',\r\n            allergens: ['Chicken', 'Gluten', 'Hot Sauce'],\r\n            preparationTime: '6-8 min',\r\n            spiceLevel: 'Hot',\r\n            tags: ['Wings', 'Spicy', 'Hot Sauce'],\r\n            vegetarian: false,\r\n            signature: false\r\n          },\r\n          {\r\n            id: 'cwt-002',\r\n            name: 'Chicken Tenders (4 Pcs)',\r\n            price: 'KES 280',\r\n            description: 'Breaded chicken tenders with dipping sauce',\r\n            category: 'Chicken Wings & Tenders',\r\n            image: '/images/food/kfc-chicken-tenders.jpg',\r\n            isPromo: false,\r\n            calories: '240',\r\n            serves: '1 person',\r\n            allergens: ['Chicken', 'Gluten'],\r\n            preparationTime: '5-8 min',\r\n            spiceLevel: 'Mild',\r\n            tags: ['Tenders', 'Breaded', 'Dipping Sauce'],\r\n            vegetarian: false,\r\n            signature: false\r\n          }\r\n        ],\r\n        'Sides & Snacks': [\r\n          {\r\n            id: 'ss-001',\r\n            name: 'French Fries',\r\n            price: 'KES 180',\r\n            description: 'Crispy golden fries seasoned with salt',\r\n            category: 'Sides & Snacks',\r\n            image: '/images/food/kfc-french-fries.jpg',\r\n            isPromo: false,\r\n            calories: '220',\r\n            serves: '1 person',\r\n            allergens: ['Potatoes'],\r\n            preparationTime: '3-5 min',\r\n            spiceLevel: 'None',\r\n            tags: ['Fries', 'Crispy', 'Golden'],\r\n            vegetarian: true,\r\n            signature: false\r\n          },\r\n          {\r\n            id: 'ss-002',\r\n            name: 'Coleslaw',\r\n            price: 'KES 150',\r\n            description: 'Fresh cabbage salad with creamy dressing',\r\n            category: 'Sides & Snacks',\r\n            image: '/images/food/kfc-coleslaw.jpg',\r\n            isPromo: false,\r\n            calories: '120',\r\n            serves: '1 person',\r\n            allergens: ['Mayo', 'Dairy'],\r\n            preparationTime: '2-3 min',\r\n            spiceLevel: 'None',\r\n            tags: ['Salad', 'Creamy', 'Fresh'],\r\n            vegetarian: true,\r\n            signature: false\r\n          },\r\n          {\r\n            id: 'ss-003',\r\n            name: 'Mashed Potatoes & Gravy',\r\n            price: 'KES 200',\r\n            description: 'Creamy mashed potatoes with rich chicken gravy',\r\n            category: 'Sides & Snacks',\r\n            image: '/images/food/kfc-mashed-potatoes.jpg',\r\n            isPromo: false,\r\n            calories: '180',\r\n            serves: '1 person',\r\n            allergens: ['Dairy', 'Gluten'],\r\n            preparationTime: '3-5 min',\r\n            spiceLevel: 'None',\r\n            tags: ['Mashed', 'Gravy', 'Creamy'],\r\n            vegetarian: false,\r\n            signature: false\r\n          },\r\n          {\r\n            id: 'ss-004',\r\n            name: 'Popcorn Chicken',\r\n            price: 'KES 250',\r\n            description: 'Bite-sized crispy chicken pieces',\r\n            category: 'Sides & Snacks',\r\n            image: '/images/food/kfc-popcorn-chicken.jpg',\r\n            isPromo: false,\r\n            calories: '320',\r\n            serves: '1 person',\r\n            allergens: ['Chicken', 'Gluten'],\r\n            preparationTime: '4-6 min',\r\n            spiceLevel: 'Mild',\r\n            tags: ['Bite-sized', 'Crispy', 'Snack'],\r\n            vegetarian: false,\r\n            signature: false\r\n          }\r\n        ],\r\n        'Desserts': [\r\n          {\r\n            id: 'ds-001',\r\n            name: 'Chocolate Fudge Cake',\r\n            price: 'KES 350',\r\n            description: 'Rich chocolate cake with fudge frosting',\r\n            category: 'Desserts',\r\n            image: '/images/food/kfc-chocolate-cake.jpg',\r\n            isPromo: false,\r\n            calories: '380',\r\n            serves: '1 person',\r\n            allergens: ['Chocolate', 'Gluten', 'Eggs'],\r\n            preparationTime: '2-3 min',\r\n            spiceLevel: 'None',\r\n            tags: ['Chocolate', 'Fudge', 'Rich'],\r\n            vegetarian: true,\r\n            signature: false\r\n          },\r\n          {\r\n            id: 'ds-002',\r\n            name: 'Ice Cream Sundae',\r\n            price: 'KES 280',\r\n            description: 'Vanilla ice cream with chocolate sauce and sprinkles',\r\n            category: 'Desserts',\r\n            image: '/images/food/kfc-ice-cream.jpg',\r\n            isPromo: false,\r\n            calories: '280',\r\n            serves: '1 person',\r\n            allergens: ['Dairy', 'Chocolate'],\r\n            preparationTime: '2-3 min',\r\n            spiceLevel: 'None',\r\n            tags: ['Ice Cream', 'Chocolate', 'Sweet'],\r\n            vegetarian: true,\r\n            signature: false\r\n          }\r\n        ],\r\n        'Beverages': [\r\n          {\r\n            id: 'bv-001',\r\n            name: 'Coca Cola (500ml)',\r\n            price: 'KES 120',\r\n            description: 'Refreshing Coca Cola soft drink',\r\n            category: 'Beverages',\r\n            image: '/images/food/kfc-coca-cola.jpg',\r\n            isPromo: false,\r\n            calories: '210',\r\n            serves: '1 person',\r\n            allergens: ['None'],\r\n            preparationTime: '1-2 min',\r\n            spiceLevel: 'None',\r\n            tags: ['Soft Drink', 'Refreshing', 'Classic'],\r\n            vegetarian: true,\r\n            signature: false\r\n          },\r\n          {\r\n            id: 'bv-002',\r\n            name: 'Sprite (500ml)',\r\n            price: 'KES 120',\r\n            description: 'Clear lemon-lime soft drink',\r\n            category: 'Beverages',\r\n            image: '/images/food/kfc-sprite.jpg',\r\n            isPromo: false,\r\n            calories: '200',\r\n            serves: '1 person',\r\n            allergens: ['None'],\r\n            preparationTime: '1-2 min',\r\n            spiceLevel: 'None',\r\n            tags: ['Soft Drink', 'Lemon-Lime', 'Clear'],\r\n            vegetarian: true,\r\n            signature: false\r\n          },\r\n          {\r\n            id: 'bv-003',\r\n            name: 'Fanta Orange (500ml)',\r\n            price: 'KES 120',\r\n            description: 'Orange flavored soft drink',\r\n            category: 'Beverages',\r\n            image: '/images/food/kfc-fanta.jpg',\r\n            isPromo: false,\r\n            calories: '200',\r\n            serves: '1 person',\r\n            allergens: ['None'],\r\n            preparationTime: '1-2 min',\r\n            spiceLevel: 'None',\r\n            tags: ['Soft Drink', 'Orange', 'Fruity'],\r\n            vegetarian: true,\r\n            signature: false\r\n          }\r\n        ]\r\n      },\r\n      promotions: [\r\n        {\r\n          id: 'promo-001',\r\n          title: 'Family Bucket Deal',\r\n          description: '8 pieces of chicken + 2 large sides + 4 drinks for only KES 2,500',\r\n          discount: 'Save KES 500',\r\n          validUntil: '2024-12-31',\r\n          code: 'FAMILYBUCKET',\r\n          timing: 'Available Daily'\r\n        },\r\n        {\r\n          id: 'promo-002',\r\n          title: 'Zinger Tuesday',\r\n          description: 'Buy any Zinger burger, get free fries every Tuesday',\r\n          discount: 'Free Fries',\r\n          validUntil: '2024-12-31',\r\n          code: 'ZINGERTUESDAY',\r\n          timing: 'Every Tuesday'\r\n        },\r\n        {\r\n          id: 'promo-003',\r\n          title: 'Student Discount',\r\n          description: '15% off on all orders with valid student ID',\r\n          discount: '15%',\r\n          validUntil: '2024-12-31',\r\n          code: 'STUDENT15',\r\n          requirements: 'Valid student ID required'\r\n        }\r\n      ],\r\n      deliveryInfo: {\r\n        available: true,\r\n        services: ['Jumia Food', 'Glovo', 'Uber Eats', 'Own Delivery'],\r\n        deliveryTime: '25-40 minutes',\r\n        deliveryFee: 'KES 150',\r\n        minimumOrder: 'KES 800',\r\n        freeDeliveryThreshold: 'KES 2,000'\r\n      },\r\n      locations: [\r\n        'Westlands',\r\n        'CBD',\r\n        'Kilimani',\r\n        'Lavington',\r\n        'Karen',\r\n        'Mombasa Road',\r\n        'Thika Road',\r\n        'Nakuru',\r\n        'Mombasa',\r\n        'Kisumu'\r\n      ],\r\n      deals: [\r\n        'Family Bucket Deal',\r\n        'Zinger Tuesday',\r\n        'Student Discount',\r\n        'Lunch Special',\r\n        'Happy Hour'\r\n      ],\r\n      rewards: {\r\n        available: true,\r\n        program: 'KFC Rewards',\r\n        benefits: ['Points on every order', 'Free items', 'Birthday treats', 'Exclusive offers']\r\n      }\r\n    };\r\n  },\r\n\r\n  // Helper functions\r\n  findKFCId(searchData) {\r\n    // Logic to find KFC's ID in search results\r\n    const kfc = searchData.restaurants?.find(r => \r\n      r.name.toLowerCase().includes('kfc') || r.name.toLowerCase().includes('kentucky fried chicken')\r\n    );\r\n    return kfc?.id;\r\n  },\r\n\r\n  transformDirectMenuData(data) {\r\n    // Transform direct API data to our format\r\n    return {\r\n      restaurant: KFC_CONFIG,\r\n      categories: data.categories || {},\r\n      promotions: data.promotions || [],\r\n      deliveryInfo: data.delivery || {},\r\n      locations: data.locations || [],\r\n      deals: data.deals || [],\r\n      rewards: data.rewards || {}\r\n    };\r\n  },\r\n\r\n  transformJumiaMenuData(data) {\r\n    // Transform Jumia Food data to our format\r\n    return {\r\n      restaurant: KFC_CONFIG,\r\n      categories: this.groupByCategory(data.menu || []),\r\n      promotions: data.promotions || [],\r\n      deliveryInfo: {\r\n        available: true,\r\n        services: ['Jumia Food'],\r\n        deliveryTime: data.deliveryTime || '25-40 minutes',\r\n        deliveryFee: data.deliveryFee || 'KES 150',\r\n        minimumOrder: data.minimumOrder || 'KES 800'\r\n      },\r\n      locations: data.locations || [],\r\n      deals: data.deals || [],\r\n      rewards: data.rewards || {}\r\n    };\r\n  },\r\n\r\n  transformGlovoMenuData(data) {\r\n    // Transform Glovo data to our format\r\n    return {\r\n      restaurant: KFC_CONFIG,\r\n      categories: this.groupByCategory(data.menu || []),\r\n      promotions: data.promotions || [],\r\n      deliveryInfo: {\r\n        available: true,\r\n        services: ['Glovo'],\r\n        deliveryTime: data.deliveryTime || '25-40 minutes',\r\n        deliveryFee: data.deliveryFee || 'KES 150',\r\n        minimumOrder: data.minimumOrder || 'KES 800'\r\n      },\r\n      locations: data.locations || [],\r\n      deals: data.deals || [],\r\n      rewards: data.rewards || {}\r\n    };\r\n  },\r\n\r\n  groupByCategory(menuItems) {\r\n    // Group menu items by category\r\n    const categories = {};\r\n    menuItems.forEach(item => {\r\n      if (!categories[item.category]) {\r\n        categories[item.category] = [];\r\n      }\r\n      categories[item.category].push(item);\r\n    });\r\n    return categories;\r\n  },\r\n\r\n  // Get restaurant information\r\n  getRestaurantInfo() {\r\n    return KFC_CONFIG;\r\n  },\r\n\r\n  // Get current promotions\r\n  async getPromotions() {\r\n    try {\r\n      const response = await fetch(`${KFC_DIRECT_API.baseURL}${KFC_DIRECT_API.endpoints.promotions}`);\r\n      if (response.ok) {\r\n        return await response.json();\r\n      }\r\n    } catch (error) {\r\n      console.log('Using mock promotions');\r\n    }\r\n    \r\n    return this.getEnhancedMockMenu().promotions;\r\n  },\r\n\r\n  // Check delivery availability\r\n  async checkDeliveryAvailability() {\r\n    try {\r\n      const response = await fetch(`${KFC_DIRECT_API.baseURL}${KFC_DIRECT_API.endpoints.delivery}`);\r\n      if (response.ok) {\r\n        return await response.json();\r\n      }\r\n    } catch (error) {\r\n      console.log('Using mock delivery info');\r\n    }\r\n    \r\n    return this.getEnhancedMockMenu().deliveryInfo;\r\n  },\r\n\r\n  // Get deals\r\n  async getDeals() {\r\n    try {\r\n      const response = await fetch(`${KFC_DIRECT_API.baseURL}${KFC_DIRECT_API.endpoints.deals}`);\r\n      if (response.ok) {\r\n        return await response.json();\r\n      }\r\n    } catch (error) {\r\n      console.log('Using mock deals');\r\n    }\r\n    \r\n    return this.getEnhancedMockMenu().deals;\r\n  },\r\n\r\n  // Get rewards info\r\n  async getRewards() {\r\n    try {\r\n      const response = await fetch(`${KFC_DIRECT_API.baseURL}${KFC_DIRECT_API.endpoints.rewards}`);\r\n      if (response.ok) {\r\n        return await response.json();\r\n      }\r\n    } catch (error) {\r\n      console.log('Using mock rewards info');\r\n    }\r\n    \r\n    return this.getEnhancedMockMenu().rewards;\r\n  },\r\n\r\n  // Get all locations\r\n  async getLocations() {\r\n    try {\r\n      const response = await fetch(`${KFC_DIRECT_API.baseURL}${KFC_DIRECT_API.endpoints.locations}`);\r\n      if (response.ok) {\r\n        return await response.json();\r\n      }\r\n    } catch (error) {\r\n      console.log('Using mock locations');\r\n    }\r\n    \r\n    return this.getEnhancedMockMenu().locations;\r\n  },\r\n\r\n  // Generate random prices for chicken dishes\r\n  generateChickenPrice() {\r\n    const basePrice = 300; // Base price for small chicken\r\n    const randomFactor = Math.random() * 1.5 + 0.5; // Random factor between 0.5 and 2.0\r\n    return `KES ${Math.round(basePrice * randomFactor)}`;\r\n  },\r\n\r\n  // Generate random prices for sides\r\n  generateSidePrice() {\r\n    const basePrice = 100; // Base price for small sides\r\n    const randomFactor = Math.random() * 1.2 + 0.8; // Random factor between 0.8 and 2.0\r\n    return `KES ${Math.round(basePrice * randomFactor)}`;\r\n  },\r\n\r\n  // Get mock desserts and beverages for the real chicken menu\r\n  getMockDessertsAndBeverages() {\r\n    const mockDesserts = [\r\n      {\r\n        id: 'ds-003',\r\n        name: 'Chocolate Chip Cookies',\r\n        price: 'KES 150',\r\n        description: 'Classic chocolate chip cookies',\r\n        category: 'Desserts',\r\n        image: '/images/food/kfc-chocolate-chip-cookies.jpg',\r\n        isPromo: false,\r\n        calories: '150',\r\n        serves: '1 person',\r\n        allergens: ['Dairy', 'Gluten'],\r\n        preparationTime: '2-3 min',\r\n        spiceLevel: 'None',\r\n        tags: ['Cookies', 'Chocolate', 'Sweet'],\r\n        vegetarian: true,\r\n        signature: false\r\n      },\r\n      {\r\n        id: 'ds-004',\r\n        name: 'Vanilla Milkshake',\r\n        price: 'KES 200',\r\n        description: 'Creamy vanilla milkshake',\r\n        category: 'Beverages',\r\n        image: '/images/food/kfc-vanilla-milkshake.jpg',\r\n        isPromo: false,\r\n        calories: '250',\r\n        serves: '1 person',\r\n        allergens: ['Dairy'],\r\n        preparationTime: '2-3 min',\r\n        spiceLevel: 'None',\r\n        tags: ['Milkshake', 'Vanilla', 'Creamy'],\r\n        vegetarian: true,\r\n        signature: false\r\n      }\r\n    ];\r\n    return mockDesserts;\r\n  },\r\n\r\n  // Get customization options (e.g., spice levels, sizes)\r\n  getCustomization() {\r\n    return {\r\n      chicken: {\r\n        sizes: ['Small', 'Medium', 'Large'],\r\n        spiceLevels: ['Mild', 'Medium', 'Hot', 'Extra Hot']\r\n      },\r\n      sides: {\r\n        sizes: ['Small', 'Medium', 'Large']\r\n      },\r\n      beverages: {\r\n        sizes: ['Small', 'Medium', 'Large']\r\n      }\r\n    };\r\n  }\r\n};\r\n\r\nexport default kfcAPI;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}