{"ast":null,"code":"const API_BASE_URL = 'http://localhost:8000';\n\n// Register a new user\nexport const registerUser = async userData => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/auth/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.detail || 'Registration failed');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Registration error:', error);\n    throw error;\n  }\n};\n\n// Login user\nexport const loginUser = async credentials => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/auth/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.detail || 'Login failed');\n    }\n    const data = await response.json();\n\n    // Store tokens\n    localStorage.setItem('access_token', data.access_token);\n    localStorage.setItem('refresh_token', data.refresh_token);\n    return data;\n  } catch (error) {\n    console.error('Login error:', error);\n    throw error;\n  }\n};\n\n// Logout user\nexport const logoutUser = async () => {\n  try {\n    const accessToken = localStorage.getItem('access_token');\n    if (accessToken) {\n      await fetch(`${API_BASE_URL}/auth/logout`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${accessToken}`\n        }\n      });\n    }\n  } catch (error) {\n    console.error('Logout error:', error);\n  } finally {\n    // Clear local storage\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('refresh_token');\n    localStorage.removeItem('user');\n  }\n};\n\n// Get current user\nexport const getCurrentUser = async () => {\n  try {\n    const accessToken = localStorage.getItem('access_token');\n    if (!accessToken) {\n      throw new Error('No access token');\n    }\n    const response = await fetch(`${API_BASE_URL}/auth/me`, {\n      headers: {\n        'Authorization': `Bearer ${accessToken}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Failed to get user data');\n    }\n    const userData = await response.json();\n    localStorage.setItem('user', JSON.stringify(userData));\n    return userData;\n  } catch (error) {\n    console.error('Get user error:', error);\n    throw error;\n  }\n};\n\n// Refresh access token\nexport const refreshAccessToken = async () => {\n  try {\n    const refreshToken = localStorage.getItem('refresh_token');\n    if (!refreshToken) {\n      throw new Error('No refresh token');\n    }\n    const response = await fetch(`${API_BASE_URL}/auth/refresh`, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${refreshToken}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Failed to refresh token');\n    }\n    const data = await response.json();\n\n    // Update tokens\n    localStorage.setItem('access_token', data.access_token);\n    localStorage.setItem('refresh_token', data.refresh_token);\n    return data;\n  } catch (error) {\n    console.error('Token refresh error:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_BASE_URL","registerUser","userData","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","detail","error","console","loginUser","credentials","data","localStorage","setItem","access_token","refresh_token","logoutUser","accessToken","getItem","removeItem","getCurrentUser","refreshAccessToken","refreshToken"],"sources":["C:/Projects/gawa/frontend/src/api/auth.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:8000';\r\n\r\n// Register a new user\r\nexport const registerUser = async (userData) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/auth/register`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(userData),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.detail || 'Registration failed');\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Registration error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Login user\r\nexport const loginUser = async (credentials) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/auth/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(credentials),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.detail || 'Login failed');\r\n    }\r\n\r\n    const data = await response.json();\r\n    \r\n    // Store tokens\r\n    localStorage.setItem('access_token', data.access_token);\r\n    localStorage.setItem('refresh_token', data.refresh_token);\r\n    \r\n    return data;\r\n  } catch (error) {\r\n    console.error('Login error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Logout user\r\nexport const logoutUser = async () => {\r\n  try {\r\n    const accessToken = localStorage.getItem('access_token');\r\n    \r\n    if (accessToken) {\r\n      await fetch(`${API_BASE_URL}/auth/logout`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${accessToken}`,\r\n        },\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.error('Logout error:', error);\r\n  } finally {\r\n    // Clear local storage\r\n    localStorage.removeItem('access_token');\r\n    localStorage.removeItem('refresh_token');\r\n    localStorage.removeItem('user');\r\n  }\r\n};\r\n\r\n// Get current user\r\nexport const getCurrentUser = async () => {\r\n  try {\r\n    const accessToken = localStorage.getItem('access_token');\r\n    \r\n    if (!accessToken) {\r\n      throw new Error('No access token');\r\n    }\r\n\r\n    const response = await fetch(`${API_BASE_URL}/auth/me`, {\r\n      headers: {\r\n        'Authorization': `Bearer ${accessToken}`,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Failed to get user data');\r\n    }\r\n\r\n    const userData = await response.json();\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n    return userData;\r\n  } catch (error) {\r\n    console.error('Get user error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Refresh access token\r\nexport const refreshAccessToken = async () => {\r\n  try {\r\n    const refreshToken = localStorage.getItem('refresh_token');\r\n    \r\n    if (!refreshToken) {\r\n      throw new Error('No refresh token');\r\n    }\r\n\r\n    const response = await fetch(`${API_BASE_URL}/auth/refresh`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${refreshToken}`,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Failed to refresh token');\r\n    }\r\n\r\n    const data = await response.json();\r\n    \r\n    // Update tokens\r\n    localStorage.setItem('access_token', data.access_token);\r\n    localStorage.setItem('refresh_token', data.refresh_token);\r\n    \r\n    return data;\r\n  } catch (error) {\r\n    console.error('Token refresh error:', error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}