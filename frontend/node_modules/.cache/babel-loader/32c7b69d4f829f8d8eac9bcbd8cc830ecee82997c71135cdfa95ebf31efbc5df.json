{"ast":null,"code":"import apiClient from './apiClient';\n\n// Get current user profile from API\nexport const fetchCurrentUser = async () => {\n  const response = await apiClient.get('/users/me');\n  return response.json();\n};\n\n// Update current user profile\nexport const updateCurrentUser = async userData => {\n  // First get the current user to get their ID\n  const currentUserResponse = await apiClient.get('/users/me');\n  const currentUser = await currentUserResponse.json();\n  if (!currentUser.user || !currentUser.user.id) {\n    throw new Error('Could not get current user ID');\n  }\n\n  // Then update using the user ID\n  const response = await apiClient.put(`/users/${currentUser.user.id}`, userData);\n  return response.json();\n};\n\n// Get user by ID (admin only)\nexport const getUserById = async userId => {\n  const response = await apiClient.get(`/users/${userId}`);\n  return response.json();\n};\n\n// Get all users (admin only)\nexport const getAllUsers = async () => {\n  const response = await apiClient.get('/users');\n  return response.json();\n};\n\n// Delete current user account\nexport const deleteCurrentUser = async () => {\n  // First get the current user to get their ID\n  const currentUserResponse = await apiClient.get('/users/me');\n  const currentUser = await currentUserResponse.json();\n  if (!currentUser.user || !currentUser.user.id) {\n    throw new Error('Could not get current user ID');\n  }\n\n  // Then delete using the user ID\n  const response = await apiClient.delete(`/users/${currentUser.user.id}`);\n  return response.json();\n};","map":{"version":3,"names":["apiClient","fetchCurrentUser","response","get","json","updateCurrentUser","userData","currentUserResponse","currentUser","user","id","Error","put","getUserById","userId","getAllUsers","deleteCurrentUser","delete"],"sources":["C:/Projects/gawa/frontend/src/api/users.js"],"sourcesContent":["import apiClient from './apiClient';\r\n\r\n// Get current user profile from API\r\nexport const fetchCurrentUser = async () => {\r\n  const response = await apiClient.get('/users/me');\r\n  return response.json();\r\n};\r\n\r\n// Update current user profile\r\nexport const updateCurrentUser = async (userData) => {\r\n  // First get the current user to get their ID\r\n  const currentUserResponse = await apiClient.get('/users/me');\r\n  const currentUser = await currentUserResponse.json();\r\n  \r\n  if (!currentUser.user || !currentUser.user.id) {\r\n    throw new Error('Could not get current user ID');\r\n  }\r\n  \r\n  // Then update using the user ID\r\n  const response = await apiClient.put(`/users/${currentUser.user.id}`, userData);\r\n  return response.json();\r\n};\r\n\r\n// Get user by ID (admin only)\r\nexport const getUserById = async (userId) => {\r\n  const response = await apiClient.get(`/users/${userId}`);\r\n  return response.json();\r\n};\r\n\r\n// Get all users (admin only)\r\nexport const getAllUsers = async () => {\r\n  const response = await apiClient.get('/users');\r\n  return response.json();\r\n};\r\n\r\n// Delete current user account\r\nexport const deleteCurrentUser = async () => {\r\n  // First get the current user to get their ID\r\n  const currentUserResponse = await apiClient.get('/users/me');\r\n  const currentUser = await currentUserResponse.json();\r\n  \r\n  if (!currentUser.user || !currentUser.user.id) {\r\n    throw new Error('Could not get current user ID');\r\n  }\r\n  \r\n  // Then delete using the user ID\r\n  const response = await apiClient.delete(`/users/${currentUser.user.id}`);\r\n  return response.json();\r\n};\r\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,aAAa;;AAEnC;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EAC1C,MAAMC,QAAQ,GAAG,MAAMF,SAAS,CAACG,GAAG,CAAC,WAAW,CAAC;EACjD,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;AACxB,CAAC;;AAED;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAOC,QAAQ,IAAK;EACnD;EACA,MAAMC,mBAAmB,GAAG,MAAMP,SAAS,CAACG,GAAG,CAAC,WAAW,CAAC;EAC5D,MAAMK,WAAW,GAAG,MAAMD,mBAAmB,CAACH,IAAI,CAAC,CAAC;EAEpD,IAAI,CAACI,WAAW,CAACC,IAAI,IAAI,CAACD,WAAW,CAACC,IAAI,CAACC,EAAE,EAAE;IAC7C,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;EAClD;;EAEA;EACA,MAAMT,QAAQ,GAAG,MAAMF,SAAS,CAACY,GAAG,CAAC,UAAUJ,WAAW,CAACC,IAAI,CAACC,EAAE,EAAE,EAAEJ,QAAQ,CAAC;EAC/E,OAAOJ,QAAQ,CAACE,IAAI,CAAC,CAAC;AACxB,CAAC;;AAED;AACA,OAAO,MAAMS,WAAW,GAAG,MAAOC,MAAM,IAAK;EAC3C,MAAMZ,QAAQ,GAAG,MAAMF,SAAS,CAACG,GAAG,CAAC,UAAUW,MAAM,EAAE,CAAC;EACxD,OAAOZ,QAAQ,CAACE,IAAI,CAAC,CAAC;AACxB,CAAC;;AAED;AACA,OAAO,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,MAAMb,QAAQ,GAAG,MAAMF,SAAS,CAACG,GAAG,CAAC,QAAQ,CAAC;EAC9C,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;AACxB,CAAC;;AAED;AACA,OAAO,MAAMY,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EAC3C;EACA,MAAMT,mBAAmB,GAAG,MAAMP,SAAS,CAACG,GAAG,CAAC,WAAW,CAAC;EAC5D,MAAMK,WAAW,GAAG,MAAMD,mBAAmB,CAACH,IAAI,CAAC,CAAC;EAEpD,IAAI,CAACI,WAAW,CAACC,IAAI,IAAI,CAACD,WAAW,CAACC,IAAI,CAACC,EAAE,EAAE;IAC7C,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;EAClD;;EAEA;EACA,MAAMT,QAAQ,GAAG,MAAMF,SAAS,CAACiB,MAAM,CAAC,UAAUT,WAAW,CAACC,IAAI,CAACC,EAAE,EAAE,CAAC;EACxE,OAAOR,QAAQ,CAACE,IAAI,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}