"""init

Revision ID: 85585d60fb95
Revises: 
Create Date: 2025-09-08 13:13:47.096368

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '85585d60fb95'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_orders_id'), table_name='orders')
    op.drop_table('orders')
    op.drop_index(op.f('ix_payments_id'), table_name='payments')
    op.drop_table('payments')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_name'), table_name='users')
    op.drop_index(op.f('ix_users_phone'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_meals_category'), table_name='meals')
    op.drop_index(op.f('ix_meals_id'), table_name='meals')
    op.drop_index(op.f('ix_meals_name'), table_name='meals')
    op.drop_table('meals')
    op.drop_index(op.f('ix_order_items_id'), table_name='order_items')
    op.drop_table('order_items')
    op.drop_index(op.f('ix_restaurants_id'), table_name='restaurants')
    op.drop_index(op.f('ix_restaurants_name'), table_name='restaurants')
    op.drop_table('restaurants')
    op.drop_index(op.f('ix_deliveries_delivery_reference'), table_name='deliveries')
    op.drop_index(op.f('ix_deliveries_id'), table_name='deliveries')
    op.drop_table('deliveries')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('deliveries',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('delivery_reference', sa.VARCHAR(), nullable=False),
    sa.Column('order_id', sa.INTEGER(), nullable=False),
    sa.Column('delivery_person_id', sa.INTEGER(), nullable=True),
    sa.Column('status', sa.VARCHAR(length=10), nullable=True),
    sa.Column('delivery_fee', sa.FLOAT(), nullable=False),
    sa.Column('pickup_address', sa.TEXT(), nullable=False),
    sa.Column('delivery_address', sa.TEXT(), nullable=False),
    sa.Column('current_location', sa.VARCHAR(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('assigned_at', sa.DATETIME(), nullable=True),
    sa.Column('picked_up_at', sa.DATETIME(), nullable=True),
    sa.Column('delivered_at', sa.DATETIME(), nullable=True),
    sa.Column('delivery_notes', sa.TEXT(), nullable=True),
    sa.Column('customer_rating', sa.INTEGER(), nullable=True),
    sa.Column('customer_feedback', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['delivery_person_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_deliveries_id'), 'deliveries', ['id'], unique=False)
    op.create_index(op.f('ix_deliveries_delivery_reference'), 'deliveries', ['delivery_reference'], unique=1)
    op.create_table('restaurants',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('address', sa.TEXT(), nullable=False),
    sa.Column('city', sa.VARCHAR(), nullable=False),
    sa.Column('phone_number', sa.VARCHAR(), nullable=True),
    sa.Column('email', sa.VARCHAR(), nullable=True),
    sa.Column('cuisine_type', sa.VARCHAR(), nullable=True),
    sa.Column('delivery_fee', sa.FLOAT(), nullable=True),
    sa.Column('minimum_order', sa.FLOAT(), nullable=True),
    sa.Column('delivery_time', sa.VARCHAR(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('is_verified', sa.BOOLEAN(), nullable=True),
    sa.Column('rating', sa.FLOAT(), nullable=True),
    sa.Column('total_reviews', sa.INTEGER(), nullable=True),
    sa.Column('owner_id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_restaurants_name'), 'restaurants', ['name'], unique=False)
    op.create_index(op.f('ix_restaurants_id'), 'restaurants', ['id'], unique=False)
    op.create_table('order_items',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('order_id', sa.INTEGER(), nullable=False),
    sa.Column('meal_id', sa.INTEGER(), nullable=False),
    sa.Column('quantity', sa.INTEGER(), nullable=False),
    sa.Column('unit_price', sa.FLOAT(), nullable=False),
    sa.Column('total_price', sa.FLOAT(), nullable=False),
    sa.Column('special_instructions', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['meal_id'], ['meals.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_order_items_id'), 'order_items', ['id'], unique=False)
    op.create_table('meals',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=True),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('price', sa.FLOAT(), nullable=True),
    sa.Column('category', sa.VARCHAR(), nullable=True),
    sa.Column('is_available', sa.BOOLEAN(), nullable=True),
    sa.Column('image_url', sa.VARCHAR(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_meals_name'), 'meals', ['name'], unique=False)
    op.create_index(op.f('ix_meals_id'), 'meals', ['id'], unique=False)
    op.create_index(op.f('ix_meals_category'), 'meals', ['category'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=True),
    sa.Column('email', sa.VARCHAR(), nullable=True),
    sa.Column('phone', sa.VARCHAR(), nullable=True),
    sa.Column('location', sa.VARCHAR(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_phone'), 'users', ['phone'], unique=1)
    op.create_index(op.f('ix_users_name'), 'users', ['name'], unique=False)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=1)
    op.create_table('payments',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('order_id', sa.INTEGER(), nullable=True),
    sa.Column('amount', sa.FLOAT(), nullable=True),
    sa.Column('method', sa.VARCHAR(length=13), nullable=True),
    sa.Column('status', sa.VARCHAR(length=9), nullable=True),
    sa.Column('transaction_id', sa.VARCHAR(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('transaction_id')
    )
    op.create_index(op.f('ix_payments_id'), 'payments', ['id'], unique=False)
    op.create_table('orders',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('total_amount', sa.FLOAT(), nullable=True),
    sa.Column('status', sa.VARCHAR(length=9), nullable=True),
    sa.Column('delivery_address', sa.VARCHAR(), nullable=True),
    sa.Column('notes', sa.VARCHAR(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_orders_id'), 'orders', ['id'], unique=False)
    # ### end Alembic commands ###
